<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:BlinkToRadioAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40e338f8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x406f87e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x406f87e8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x406f7870"/></to>
    </wire>
    <wire loc="19:BlinkToRadioAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e33c60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40e31660"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e31660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40e4d5c0"/></to>
    </wire>
    <wire loc="21:BlinkToRadioAppC.nc">
      <from><interface-ref name="SerialPacket" scoped="" ref="0x40e2f950"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x403f6748"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x403f6748"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4044a8b0"/></to>
    </wire>
    <wire loc="26:BlinkToRadioAppC.nc">
      <from><interface-ref name="RadioAMSend" scoped="" ref="0x40e2ee28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407acbb8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407acbb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4107c0d8"/></to>
    </wire>
    <wire loc="27:BlinkToRadioAppC.nc">
      <from><interface-ref name="RadioAMControl" scoped="" ref="0x40e2dd70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407f7bd8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407f7bd8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40812e90"/></to>
    </wire>
    <wire loc="28:BlinkToRadioAppC.nc">
      <from><interface-ref name="SerialAMControl" scoped="" ref="0x40e2d668"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4044b010"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4044b010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x404a4540"/></to>
    </wire>
    <wire loc="29:BlinkToRadioAppC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x40e2c500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x403f6430"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x403f6430"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4044a558"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4044a8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40495310"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x403f6de0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40451010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40451010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404676d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x404a4540"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x404b34c0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40456ac0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40454be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4044a558"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404673a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40459248"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404959a8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41136b58"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40c33c38"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bc3540"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40b5d778"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a76390"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a0b298"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409fe438"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410b0e70"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x405c09f8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x405cc4c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4058e060"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404a41a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404a41a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b3128"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4049a010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4045e740"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40495ed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4049c440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x404945a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404a4e00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x404a1af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x4079f728"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4049c440"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4055dc60"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x404a4e00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4055d8a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4055c400"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x404a1af0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404c0c88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4049a010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405693f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4049a010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40563420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4049a010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4055c8e8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x404c32a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4055cdc0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x404bbef8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x404c0400"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40567868"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x404bea10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x405790c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x405790c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40584d80"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4056bb80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40579548"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40579548"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40585728"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x404ef4e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x404d3f00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x404f1300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x404f91e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="264:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x40568030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40568468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40584380"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x405852a8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x405852a8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x4058e7b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40585728"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4058ebc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40584d80"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4058e398"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4058fef0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405876c0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x405876c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407029f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x405b6a70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4058fef0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x4058d510"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x405c3640"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x405c3640"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x405c0e48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x4058d948"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x405c3b50"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x405c3b50"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x405cd3a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x4058dd80"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x405c2088"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x405c2088"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x405cd8c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x405c1760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x405cb390"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x405c2c98"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x405cc910"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x405c1268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x405cce40"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x405d53c0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40607c28"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40607c28"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x406e3880"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x405d5b00"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e28f8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x406063d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dd5a00"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x406063d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4076ea40"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40607868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40603a80"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40602280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406e34d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40603e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e6b870"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40603e60"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40605538"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40605538"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4060d4c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40605908"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x406063d8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4061aa10"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40615ea8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40615ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4066c7d0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4060c4a8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40605908"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4063f210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b46c0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4062b750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40679790"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40679790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f69010"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40636ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40682410"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40682410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd9228"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40631ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4068ed68"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4068ed68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fdac08"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x406132f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4066bac8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4066bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec8010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40632a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4068fa80"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4068fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fdd7f8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40624750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40666b00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40666b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f07de8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4061eea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4066e6b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4066e6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f34d70"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40629670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x406774f0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x406774f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9b010"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40634c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40680170"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40680170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd40b0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40616010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4065cb80"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4065cb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed19e8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40622670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x406647d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x406647d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40effc08"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4061cce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4067e330"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4067e330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f65c08"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x406264b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40687170"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40687170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f95010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4062fce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4068cac8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4068cac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100ca88"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x4063d2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c0e98"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x406258e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40683090"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40683090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa5de0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4066c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ecc9e8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40620590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x406744f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x406744f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40efaa88"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4063fe08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b1e98"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4061fa08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4066f3d8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4066f3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f37938"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4062a210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40678170"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40678170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f689e8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40635750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40682d68"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40682d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd8c08"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x406308e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4068d790"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4068d790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100f6c0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40613ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4066a4f0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4066a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec79e8"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x40623210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x406654f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x406654f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f027f8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4061d8e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4066d030"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4066d030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f327f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x406280a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40677e48"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40677e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9a9e8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40633670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40680ac8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40680ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd3a88"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40616a08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4065b4f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4065b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ecf538"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x406210a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40675170"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40675170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40efd6c0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4062d750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4067ec88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4067ec88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f636c0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4062e750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4068b4f0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4068b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100a538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4062cc08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4067adc8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4067adc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f6b538"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x406362f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x406839e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x406839e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa37f8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x406314b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4068e410"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4068e410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fdb228"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4063dce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406bc6c0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x406148e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4066b170"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4066b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eca538"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4061f010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40674e48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40674e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f2d538"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x406320a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4068f128"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4068f128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fe2de8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4061e4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4066fd30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4066fd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f353b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4062ac08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40678ac8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40678ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f66538"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x40634210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40681790"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40681790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd66c0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4062f2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4068c170"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4068c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100d0b0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4060f548"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4065c228"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4065c228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed2010"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40623c08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40665e48"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40665e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f00228"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4061c2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4066d988"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4066d988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f30228"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40628a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x406887d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x406887d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f97538"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4063e830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c26c0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40626ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x406846f8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x406846f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa6418"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4062c210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4067d6b0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4067d6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f610b0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x406154b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4065be48"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4065be48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ecd010"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40621b18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40675ac8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40675ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40efb0b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e7e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40ac71e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x406f7c08"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4034eed8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4034eed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403d4df8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x406f3240"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40cf20b0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x406f3240"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40c335d8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x406f3240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40607868"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406f3648"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403d3670"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d8310"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40349c28"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4079acd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40701128"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40701128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40770618"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407887e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4070d540"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4070d540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40726ce0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4071cee8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40720010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40717d40"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40720d00"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40727828"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40734bf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40727828"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40731830"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40727828"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4072f460"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4076ee28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4070d540"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4107c0d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41078b50"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407ab310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4107c770"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4107c770"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407f20a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407ab9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4107ce08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4107ce08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407f2790"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40e345d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4107ba30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4107ba30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407f14d0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407f20a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4080c1d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407f2790"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4080c8c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407f14d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4080b5b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41075260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407c4220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410758f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407f2790"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407c4220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407fb348"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407fbab8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407f4550"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407f4550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4080e780"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407f9230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407f2790"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407f9e08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407f20a0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x407f8510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x407f8948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40812e90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4082ee58"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408131a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40816288"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40816288"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408413a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x407f0d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4080de68"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4080de68"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4082ae30"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4080e780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4082b750"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x407f35c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4080d7f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4080d7f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4082a7b8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4080c1d0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40829f00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40802130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4080bb38"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4080bb38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40826db0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407f4f10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4080d158"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4080d158"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4082a120"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4080b5b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40826828"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x407fea40"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4080a1b8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4080a1b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40839458"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4080c8c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408291e8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x408157c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40819838"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40819838"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x408449b8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4082ee58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409e5c68"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4081cbd8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40847a58"/></to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40847a58"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40c404d8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4082ae30"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x408dae10"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40829f00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408dccd0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4082b750"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408db710"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4082a7b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408da798"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x408227f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40848638"/></to>
    </wire>
    <wire loc="273:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40848638"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c410f0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40826db0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40a314a0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4082a120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408da100"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x408449b8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c18af8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40817c58"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40846dd0"/></to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40846dd0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c3a030"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4081d3e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40830278"/></to>
    </wire>
    <wire loc="274:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40830278"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c3dc70"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40826828"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b92de8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40839458"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40a2ec28"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408291e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408dc0b8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40821bb8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40839b70"/></to>
    </wire>
    <wire loc="198:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40839b70"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40b66a68"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408413a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c19100"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409e5c68"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a31bb0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40c404d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40c59390"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x4083bc78"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4096a7a0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x40836418"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4092d420"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4092d420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410ad1e8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x408dae10"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x408ebd20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408db710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408ec630"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408da798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408eb6a8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x408314a8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x409accd8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x409accd8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x409a6558"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40826030"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4096d530"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40a314a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40a2c238"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c410f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c5a010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408da100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408eb010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408dccd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408edc28"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c18af8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c0e100"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c3a030"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ccbc30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c3dc70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c56ba8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b92de8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bd98a8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x4083b098"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x4096dc38"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40a2ec28"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40a46b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408dc0b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408ed010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x4083b828"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x4096a408"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40b66a68"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40b5c4d0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c19100"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c13690"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4087a900"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4098b5a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4098b5a0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x409aae78"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40876f00"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4083ec00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40871ad0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c18af8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x40871108"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c436f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c436f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c5b610"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408d3908"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4086fe20"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408d4540"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x4091b5e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408d34d0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x409894f8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408d9290"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40989920"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4091a010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4092d420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4091bb08"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x4098aef8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4096abc0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4098b5a0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40968398"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x409accd8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40967670"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x4098dba0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40967c40"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x4098a270"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40968e20"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x4098a6a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40988260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409e77c8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409e77c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a02a60"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40988830"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a32890"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a32890"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a308c0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40988c38"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409ab7e0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409ab7e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409a5010"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409aa0c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a32c18"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a32c18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a30cc8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409e4ea8"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x4084bde0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409e43f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a322e0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a322e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a302f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40a31bb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b69aa8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b69aa8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b5d0f0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a302f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a2e6e8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a2e6e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a46620"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a308c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b666d0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b666d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b5c138"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a30cc8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a26380"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a26380"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a432a0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a25a98"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b92de8"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a26bf8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b66120"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40b66120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b5db38"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a25240"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c152a8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c152a8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c0d828"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b5e168"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b9cdc0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b9cdc0"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x40b98cc8"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b5e6c0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a01e98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a01e98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409fe010"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40b61200"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40b9c648"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40b9c648"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40b984b0"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409e49d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b9b310"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b9b310"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x40b97250"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b96250"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40863d98"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x40b98cc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b94ca8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b94ca8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40bb5010"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioReceive" scoped="" ref="0x40b97250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b912b0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b912b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40bb5568"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40b984b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40c44040"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40c44040"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40c5c010"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40bb8368"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4085d990"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b917c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b923b8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b923b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40bdce40"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b91da0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b92910"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b92910"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40bd93d0"/></to>
    </wire>
    <wire loc="236:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40bddf10"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4084d6e0"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bdd428"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40bfa5f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40bfa5f0"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x40bf74f0"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bdda08"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c44d70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c44d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c5cd40"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40bf59e8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40863d98"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x40bf74f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c44818"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40c44818"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c5c7e8"/></to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40bf7e00"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40c43288"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40c43288"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40c5b1a8"/></to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c15c50"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c3a030"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c145e8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40be5a18"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40be4370"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c436f0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c3a9e8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x40852210"/></to>
    </wire>
    <wire loc="272:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c393a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c18af8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4083ec00"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x408bead0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408bf938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ccc0e0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408ba470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408bf938"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x408d0740"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x408bdb18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408e4658"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408d2908"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408e91a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408d9290"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408e99d8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408d4540"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408e8010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408d34d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408e8448"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408d3908"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4092db60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410ad928"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4096e010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410add30"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410ab218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4096e4c0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x410ab640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x410ae1d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x410abc38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409a58a8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408d2908"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409a4010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409aa0c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x409f8ed0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40a006a8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40a006a8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40a0b630"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x409f6f10"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40a0c1b0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40a0c1b0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40a08100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409fe860"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409e43f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409fee40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409e49d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x409fd2f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409e4ea8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a43b18"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a26bf8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a42140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a25a98"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a39568"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a25240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x40a3a298"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a5e660"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a5e660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40a5aa88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0x40a387c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40a5aa88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40a76b40"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40a76b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b2ea60"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a76390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a6e5c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a71eb8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b4f460"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a6e5c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b03870"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40b54e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a6cc60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b0d010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40a6eb88"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40a6eb88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b03ca8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b4fdf8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40a6a7c0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40a6a7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b01718"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b01718"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x410cbeb0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b03870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410cc010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b03ca8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410cc448"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x410c80c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ab5890"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ab5890"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40acd780"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x410c6278"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40ab0b68"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40ab0b68"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40acbaf0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x410c6c60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40ad36b8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40ad36b8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40aca6b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41108730"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40ad0280"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40ad0280"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40ac7640"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40b0b9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40b50050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40b5ca60"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40b61200"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40b5b278"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x408bdb18"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b5b890"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b5e168"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b5bde8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b5e6c0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x40b77300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40b71540"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="280:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x40b8a988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b7f798"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40b9a698"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40b9b708"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40b97668"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40b7fd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b9ac70"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b9bb00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b97a80"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40b9a330"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b96250"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b9c330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b98178"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bb5a78"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b917c0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40bb1d80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40bb8368"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bb4098"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b91da0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40bb44f8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4083ec00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40bb1850"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bc48d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40bc48d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bbe350"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x40bafde8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40bc4010"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bc3a60"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40bb7d30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bc3540"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bd9e98"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bdd428"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bd84c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bdda08"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40bd7110"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40bddf10"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40bd8928"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4083ec00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40bd2720"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40bda3b0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40bda3b0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40be53f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40bfb040"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40bf9de0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40bfaec0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40bf7e00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40bfbe28"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40bf8c40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bfb618"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bf8410"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40bf92e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40bf5250"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40bf9a78"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40bf59e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40bfaac8"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x40bf79e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bfbb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bf8908"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c0bd48"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c145e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c0c908"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c15c50"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40c0b400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c12d70"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40c12d70"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40a71eb8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40c0c170"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40c1f6b8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40c1f6b8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40be53f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c3f8a8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c57800"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ccbc30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40de3770"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c4dd78"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c3a9e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40c4c608"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40dfca40"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40dfca40"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40be53f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40c4cca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40df7030"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40df7030"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40be53f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40c48418"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40df6628"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40df6628"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40be53f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c48c20"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c393a0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40c4d410"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ccbc30"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40c6fa08"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4083ec00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40ccc0e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ddce38"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40c54e48"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40cd3bc0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40cd3bc0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40624750"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40c53898"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40ccf698"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40ccf698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d0ac50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40c4fef8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ccfda0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40ccfda0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ce6e48"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40c51580"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40cce4b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40cce4b0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4061f010"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40c4e010"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40ccee98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40ccee98"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x406132f0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40c4a108"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40ccd8d0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40ccd8d0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40cc9a10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40c6f2e8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x408bdb18"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40c49930"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40de1c18"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40ddce38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41158138"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40ce6e48"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40d09520"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40de3770"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e02988"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40cf03b8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40628a98"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40cf0db8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x40629670"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40cf2610"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40d73258"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40d73258"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40d68a48"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40d0a500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40d09b38"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40ce6aa0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40d09198"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40cf4d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ce4d80"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d0ac50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d082a8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40d06100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d50b30"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d50b30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41134e88"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d06808"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40d7d6d0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d7d6d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41132a20"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40cf73d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40cdfe40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40cdfe40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40d4e1c8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40d06c88"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e28f8"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40d0f1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40d48898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e28f8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40d4c010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40624750"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40d4c9e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x40623210"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40d4b4a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40623c08"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40d4be88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40622670"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40d7d2c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41132618"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41132ee0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d7db80"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41131320"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41136e90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x41131918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40d74520"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40d69c90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d761a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d6d958"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40d703f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40d94940"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40d703f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40d925b8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40d703f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40d8f1c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41157b38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d761a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x41154dd8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40d703f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40dd5de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d761a0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e00360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e0d7f0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40e04ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ddf860"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ddf860"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e0ba68"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e0ac48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d761a0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40e6b870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e4d278"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40e4c320"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40e6da20"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40e6da20"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40616a08"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40e4cd08"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40e6c4c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40e6c4c0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40616010"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40e4b740"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40e6cec8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40e6cec8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4060f548"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="BlinkToRadioAppC.SerialAMReceiverC" loc="35(BlinkToRadioAppC.SerialAMReceiverC):/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="92:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.5 2009/02/04 19:31:43 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TThree" ref="0x403ce518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TThree" ref="0x403ce518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403ceaf0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkToRadioAppC.AMSenderC" loc="39(BlinkToRadioAppC.AMSenderC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkToRadioAppC.AMSenderC.SenderC" loc="39(BlinkToRadioAppC.AMSenderC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP" loc="35(BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="24(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="73(RF230RadioC.SendResourceC):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="32(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.DelayTimerC" loc="36(PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40a88330"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="24(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="SoftwareAckLayerC.MetadataFlagC" loc="24(SoftwareAckLayerC.MetadataFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="24(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampFlagC" loc="24(TimeStampingLayerC.TimeStampFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="1">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="24:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TOne" ref="0x403ce2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TOne" ref="0x403ce2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.1.1/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230DriverLayerC.TransmitPowerFlagC" loc="24(RF230DriverLayerC.TransmitPowerFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="2">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.RSSIFlagC" loc="24(RF230DriverLayerC.RSSIFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="3">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.TimeSyncFlagC" loc="24(RF230DriverLayerC.TimeSyncFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="4">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkToRadioC" loc="4:BlinkToRadioC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMReceiverC" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <parameters>
        <constant name="amId" ref="0x403fed50" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4063bb08" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4063bd20" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40638010" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40641150" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40641378" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x406415a0" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40641790" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4069c790" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4069c9b8" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4069cbe0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4069cdd0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40783148" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40783148"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40783368" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40771cf8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40771cf8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40779168" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40779168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40799158" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40799158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407995b8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407995b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40799820" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40799820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40799c90" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40799c90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40799ef8" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x407983a8" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x407983a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x407ad9b0" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x407a8568" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x407b8030" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x407c36c8" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4092c4c0" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40941228" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40a88330" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40a88330"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40a884f0" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40a835c8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40a835c8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40a83788" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a6d6e0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a6d6e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b30d00" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b30d00"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b30ee0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b4d3e8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b4d3e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MetadataFlagC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40dd7f10" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40dd7f10"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40dcf378" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40dcf378"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40dcf538" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="Packet" ref="0x403f6748" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="BlinkToRadioAppC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x403f6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x403f6920"/>
        <function-ref name="payloadLength" scoped="" ref="0x403f6a00"/>
        <function-ref name="getPayload" scoped="" ref="0x403f6ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403f6bc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x403f6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x403f6430" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="BlinkToRadioAppC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x403f6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403f6608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x403f6de0" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="BlinkToRadioAppC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x403f6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407ae010"/>
        <function-ref name="source" scoped="" ref="0x407ae0f0"/>
        <function-ref name="address" scoped="" ref="0x407ae1d0"/>
        <function-ref name="destination" scoped="" ref="0x407ae2b0"/>
        <function-ref name="setSource" scoped="" ref="0x407ae390"/>
        <function-ref name="setDestination" scoped="" ref="0x407ae470"/>
        <function-ref name="type" scoped="" ref="0x407ae550"/>
        <function-ref name="setType" scoped="" ref="0x407ae630"/>
        <function-ref name="isForMe" scoped="" ref="0x407ae710"/>
        <function-ref name="setGroup" scoped="" ref="0x407ae7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x407ae8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4044b010" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4044b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4044b1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x4044b2c8"/>
        <function-ref name="start" scoped="" ref="0x4044b3a8"/>
        <function-ref name="stop" scoped="" ref="0x4044b488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40456ac0" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40456ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40456c98"/>
        <function-ref name="getPayload" scoped="" ref="0x40456d78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40456e58"/>
        <function-ref name="cancel" scoped="" ref="0x4044a010"/>
        <function-ref name="sendDone" scoped="" ref="0x4044a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4044a8b0" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4044a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4044aa88"/>
        <function-ref name="payloadLength" scoped="" ref="0x4044ab68"/>
        <function-ref name="getPayload" scoped="" ref="0x4044ac48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4044ad28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4044ae08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4044a558" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4044a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4044a730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4045e740" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4045e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4045e918"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4045e9f8"/>
        <function-ref name="led1On" scoped="" ref="0x4045ead8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4045ebb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4045ec98"/>
        <function-ref name="get" scoped="" ref="0x4045ed78"/>
        <function-ref name="led1Off" scoped="" ref="0x4045ee58"/>
        <function-ref name="led2Off" scoped="" ref="0x404552b0"/>
        <function-ref name="set" scoped="" ref="0x40455010"/>
        <function-ref name="led0On" scoped="" ref="0x404550f0"/>
        <function-ref name="led2On" scoped="" ref="0x404551d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40459248" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40459248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40459420"/>
        <function-ref name="noAck" scoped="" ref="0x40459500"/>
        <function-ref name="wasAcked" scoped="" ref="0x404595e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40451010" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40451010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404511e8"/>
        <function-ref name="source" scoped="" ref="0x404512c8"/>
        <function-ref name="address" scoped="" ref="0x404513a8"/>
        <function-ref name="destination" scoped="" ref="0x40451488"/>
        <function-ref name="setSource" scoped="" ref="0x40451568"/>
        <function-ref name="setDestination" scoped="" ref="0x40451648"/>
        <function-ref name="type" scoped="" ref="0x40451728"/>
        <function-ref name="setType" scoped="" ref="0x40451808"/>
        <function-ref name="isForMe" scoped="" ref="0x404518e8"/>
        <function-ref name="setGroup" scoped="" ref="0x404519c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40451aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40495ed0" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40495ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404940c0"/>
        <function-ref name="getPayload" scoped="" ref="0x404941a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40494280"/>
        <function-ref name="cancel" scoped="" ref="0x40494360"/>
        <function-ref name="sendDone" scoped="" ref="0x40494440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x404945a0" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x404945a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40494778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40454be8" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40454be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40454dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40454eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40467010"/>
        <function-ref name="cancel" scoped="" ref="0x404670f0"/>
        <function-ref name="sendDone" scoped="" ref="0x404671d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40495310" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40495310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x404954e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x404955c8"/>
        <function-ref name="getPayload" scoped="" ref="0x404956a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40495788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40495868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x404673a8" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404673a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40467590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x404959a8" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404959a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40495b80"/>
        <function-ref name="noAck" scoped="" ref="0x40495c60"/>
        <function-ref name="wasAcked" scoped="" ref="0x40495d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x404676d0" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404676d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404678a8"/>
        <function-ref name="source" scoped="" ref="0x40467988"/>
        <function-ref name="address" scoped="" ref="0x40467a68"/>
        <function-ref name="destination" scoped="" ref="0x40467b48"/>
        <function-ref name="setSource" scoped="" ref="0x40467c28"/>
        <function-ref name="setDestination" scoped="" ref="0x40467d08"/>
        <function-ref name="type" scoped="" ref="0x40467de8"/>
        <function-ref name="setType" scoped="" ref="0x40467ec8"/>
        <function-ref name="isForMe" scoped="" ref="0x40495010"/>
        <function-ref name="setGroup" scoped="" ref="0x404950f0"/>
        <function-ref name="localGroup" scoped="" ref="0x404951d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x404a4540" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404a4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404a4718"/>
        <function-ref name="stopDone" scoped="" ref="0x404a47f8"/>
        <function-ref name="start" scoped="" ref="0x404a48d8"/>
        <function-ref name="stop" scoped="" ref="0x404a49b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4049c440" loc="41:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4049c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404350c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4049c618"/>
        <function-ref name="getPayload" scoped="" ref="0x4049c6f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4049c7d8"/>
        <function-ref name="cancel" scoped="" ref="0x4049c8b8"/>
        <function-ref name="sendDone" scoped="" ref="0x4049c998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404a41a8" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a41a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a4380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x404a4e00" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404a4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404350c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4049c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4049a010" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4049a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4049a1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4049a2c8"/>
        <function-ref name="led1On" scoped="" ref="0x4049a3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4049a488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4049a568"/>
        <function-ref name="get" scoped="" ref="0x4049a648"/>
        <function-ref name="led1Off" scoped="" ref="0x4049a728"/>
        <function-ref name="led2Off" scoped="" ref="0x4049aaa8"/>
        <function-ref name="set" scoped="" ref="0x4049a808"/>
        <function-ref name="led0On" scoped="" ref="0x4049a8e8"/>
        <function-ref name="led2On" scoped="" ref="0x4049a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x404a1af0" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x404a1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404350c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x404a1cc8"/>
        <function-ref name="offset" scoped="" ref="0x404a1da8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x404a1e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x404b34c0" loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404b34c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404b3698"/>
        <function-ref name="stopDone" scoped="" ref="0x404b3778"/>
        <function-ref name="start" scoped="" ref="0x404b3858"/>
        <function-ref name="stop" scoped="" ref="0x404b3938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x404ef4e8" loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x404ef4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404ef6c0"/>
        <function-ref name="runTask" scoped="" ref="0x404ef7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x404bea10" loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x404bea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404bebe8"/>
        <function-ref name="stop" scoped="" ref="0x404becc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x404d3f00" loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x404d3f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404d20f0"/>
        <function-ref name="runTask" scoped="" ref="0x404d21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b3128" loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b3128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b3300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x404c99e8" loc="73:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x404c99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x404c9bc0"/>
        <function-ref name="flush" scoped="" ref="0x404c9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x404f1300" loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x404f1300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f14d8"/>
        <function-ref name="runTask" scoped="" ref="0x404f15b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x404c0400" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x404c0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x404c05d8"/>
        <function-ref name="resetSend" scoped="" ref="0x404c06b8"/>
        <function-ref name="dataReceived" scoped="" ref="0x404c0798"/>
        <function-ref name="resetReceive" scoped="" ref="0x404c0878"/>
        <function-ref name="putData" scoped="" ref="0x404c0958"/>
        <function-ref name="putDone" scoped="" ref="0x404c0a38"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x404c0b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404c0c88" loc="71:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404c0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404c0e60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404bd010"/>
        <function-ref name="led1On" scoped="" ref="0x404bd0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404bd1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404bd2b0"/>
        <function-ref name="get" scoped="" ref="0x404bd390"/>
        <function-ref name="led1Off" scoped="" ref="0x404bd470"/>
        <function-ref name="led2Off" scoped="" ref="0x404bd7f0"/>
        <function-ref name="set" scoped="" ref="0x404bd550"/>
        <function-ref name="led0On" scoped="" ref="0x404bd630"/>
        <function-ref name="led2On" scoped="" ref="0x404bd710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x404f91e8" loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x404f91e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f93c0"/>
        <function-ref name="runTask" scoped="" ref="0x404f94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x404bbef8" loc="65:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x404bbef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x404b20e0"/>
        <function-ref name="nextByte" scoped="" ref="0x404b21c0"/>
        <function-ref name="startSend" scoped="" ref="0x404b22a0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x404b2380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x404c32a8" loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x404c32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x404c3480"/>
        <function-ref name="byteReceived" scoped="" ref="0x404c3560"/>
        <function-ref name="endPacket" scoped="" ref="0x404c3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40568030" loc="264:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40568030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40568208"/>
        <function-ref name="runTask" scoped="" ref="0x405682e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4055dc60" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4055dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404350c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4055de48"/>
        <function-ref name="getPayload" scoped="" ref="0x4055df28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4055c018"/>
        <function-ref name="cancel" scoped="" ref="0x4055c0f8"/>
        <function-ref name="sendDone" scoped="" ref="0x4055c1d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40568468" loc="147:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40568468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40568640"/>
        <function-ref name="runTask" scoped="" ref="0x40568720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4055d8a0" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4055d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404350c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4055da88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4055c400" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4055c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404350c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4055c5e8"/>
        <function-ref name="offset" scoped="" ref="0x4055c6c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4055c7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405693f0" loc="46:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405695c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405696a8"/>
        <function-ref name="led1On" scoped="" ref="0x40569788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40569868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40569948"/>
        <function-ref name="get" scoped="" ref="0x40569a28"/>
        <function-ref name="led1Off" scoped="" ref="0x40569b08"/>
        <function-ref name="led2On" scoped="" ref="0x40569e88"/>
        <function-ref name="set" scoped="" ref="0x40569cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40569be8"/>
        <function-ref name="led0On" scoped="" ref="0x40569da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4055cdc0" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4055cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40569010"/>
        <function-ref name="nextByte" scoped="" ref="0x405690f0"/>
        <function-ref name="startSend" scoped="" ref="0x405691d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x405692b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4055c8e8" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4055c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4055cac0"/>
        <function-ref name="byteReceived" scoped="" ref="0x4055cba0"/>
        <function-ref name="endPacket" scoped="" ref="0x4055cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x4056bb80" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4056bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4056bd58"/>
        <function-ref name="receivedByte" scoped="" ref="0x4056be38"/>
        <function-ref name="receive" scoped="" ref="0x4056bf18"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40563010"/>
        <function-ref name="receiveDone" scoped="" ref="0x405630f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x405631d0"/>
        <function-ref name="sendDone" scoped="" ref="0x405632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40567868" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40567868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40567a40"/>
        <function-ref name="resetSend" scoped="" ref="0x40567b20"/>
        <function-ref name="dataReceived" scoped="" ref="0x40567c00"/>
        <function-ref name="resetReceive" scoped="" ref="0x40567ce0"/>
        <function-ref name="putData" scoped="" ref="0x40567dc0"/>
        <function-ref name="putDone" scoped="" ref="0x40567ea0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40564010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40563420" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40563420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405635f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405636d8"/>
        <function-ref name="led1On" scoped="" ref="0x405637b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40563898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40563978"/>
        <function-ref name="get" scoped="" ref="0x40563a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40563b38"/>
        <function-ref name="led2Off" scoped="" ref="0x40563eb8"/>
        <function-ref name="set" scoped="" ref="0x40563c18"/>
        <function-ref name="led0On" scoped="" ref="0x40563cf8"/>
        <function-ref name="led2On" scoped="" ref="0x40563dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40584380" loc="42:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40584380"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40584558"/>
        <function-ref name="receive" scoped="" ref="0x40584638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40579548" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40579548"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40579720"/>
        <function-ref name="receivedByte" scoped="" ref="0x40579800"/>
        <function-ref name="receive" scoped="" ref="0x405798e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x405799c0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40579aa0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40579b80"/>
        <function-ref name="sendDone" scoped="" ref="0x40579c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x405790c8" loc="40:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x405790c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405792a0"/>
        <function-ref name="stop" scoped="" ref="0x40579380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x405852a8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x405852a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40585480"/>
        <function-ref name="receive" scoped="" ref="0x40585560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40585728" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40585728"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40585900"/>
        <function-ref name="receivedByte" scoped="" ref="0x405859e0"/>
        <function-ref name="receive" scoped="" ref="0x40585ac0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40585ba0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40585c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40585d60"/>
        <function-ref name="sendDone" scoped="" ref="0x40585e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4058fef0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4058fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40581680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40581b70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405818f8"/>
        <function-ref name="overflow" scoped="" ref="0x40581de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40584d80" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40584d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40585010"/>
        <function-ref name="stop" scoped="" ref="0x405850f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4058e7b0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4058e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4058e988"/>
        <function-ref name="receive" scoped="" ref="0x4058ea68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x4058d510" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x4058d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4058d6e8"/>
        <function-ref name="stop" scoped="" ref="0x4058d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4058e060" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4058e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4058e238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4058ebc8" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4058ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4058eda0"/>
        <function-ref name="receivedByte" scoped="" ref="0x4058ee80"/>
        <function-ref name="receive" scoped="" ref="0x4058d010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4058d0f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x4058d1d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4058d2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4058d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x405b6a70" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405b6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405b5200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405b56f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405b5478"/>
        <function-ref name="overflow" scoped="" ref="0x405b5968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x4058dd80" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x4058dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x405b6010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x405b60f0"/>
        <function-ref name="rxDone" scoped="" ref="0x405b61d0"/>
        <function-ref name="txDone" scoped="" ref="0x405b62b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x405b6390"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x405b6470"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x405b6550"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x405b6630"/>
        <function-ref name="tx" scoped="" ref="0x405b6710"/>
        <function-ref name="rx" scoped="" ref="0x405b67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4058e398" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4058e398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4058e570"/>
        <function-ref name="stop" scoped="" ref="0x4058e650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x4058d948" loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x4058d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4058db20"/>
        <function-ref name="stop" scoped="" ref="0x4058dc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x405c2088" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x405c2088"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x405c2260"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x405c2340"/>
        <function-ref name="rxDone" scoped="" ref="0x405c2420"/>
        <function-ref name="txDone" scoped="" ref="0x405c2500"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x405c25e0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x405c26c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x405c27a0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x405c2880"/>
        <function-ref name="tx" scoped="" ref="0x405c2960"/>
        <function-ref name="rx" scoped="" ref="0x405c2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x405c1760" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x405c1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x405c1938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x405c1a18"/>
        <function-ref name="rxDone" scoped="" ref="0x405c1af8"/>
        <function-ref name="txDone" scoped="" ref="0x405c1bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x405c1cb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x405c1d98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x405c1e78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x405c0010"/>
        <function-ref name="tx" scoped="" ref="0x405c00f0"/>
        <function-ref name="rx" scoped="" ref="0x405c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x405c3b50" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x405c3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405c3d28"/>
        <function-ref name="stop" scoped="" ref="0x405c3e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x405c2c98" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x405c2c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405c2e70"/>
        <function-ref name="stop" scoped="" ref="0x405c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x405c1268" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x405c1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405c1440"/>
        <function-ref name="stop" scoped="" ref="0x405c1520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x405c3640" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x405c3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405c3818"/>
        <function-ref name="stop" scoped="" ref="0x405c38f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x405c09f8" loc="94:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x405c09f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405c0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x405cd8c0" loc="97:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x405cd8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x405cda98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x405cdb78"/>
        <function-ref name="rxDone" scoped="" ref="0x405cdc58"/>
        <function-ref name="txDone" scoped="" ref="0x405cdd38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x405cde18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x405cdef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x405cc010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x405cc0f0"/>
        <function-ref name="tx" scoped="" ref="0x405cc1d0"/>
        <function-ref name="rx" scoped="" ref="0x405cc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x405cc4c0" loc="99:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x405cc4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405cc698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x405cb390" loc="102:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x405cb390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x405cb568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x405cb648"/>
        <function-ref name="rxDone" scoped="" ref="0x405cb728"/>
        <function-ref name="txDone" scoped="" ref="0x405cb808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x405cb8e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x405cb9c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x405cbaa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x405cbb88"/>
        <function-ref name="tx" scoped="" ref="0x405cbc68"/>
        <function-ref name="rx" scoped="" ref="0x405cbd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x405cd3a8" loc="96:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x405cd3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405cd580"/>
        <function-ref name="stop" scoped="" ref="0x405cd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x405cc910" loc="100:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x405cc910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405ccae8"/>
        <function-ref name="stop" scoped="" ref="0x405ccbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x405cce40" loc="101:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x405cce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405cb050"/>
        <function-ref name="stop" scoped="" ref="0x405cb130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x405d53c0" loc="104:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x405d53c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x405d5598"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x405d5678"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x405d5758"/>
        <function-ref name="actualMicro" scoped="" ref="0x405d5838"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x405d5918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x405d5b00" loc="105:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x405d5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x405d5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x405c0e48" loc="95:/opt/tinyos-2.1.1/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x405c0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405cd050"/>
        <function-ref name="stop" scoped="" ref="0x405cd130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x406063d8" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x406063d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406065b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40607868" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40607868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40607a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40607c28" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40607c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40607e00"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40607ee0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40606010"/>
        <function-ref name="actualMicro" scoped="" ref="0x406060f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406061d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40603e60" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40603e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40602050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40603a80" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40603a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40603c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40602280" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40602280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40602458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40605908" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40605908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40605ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40605538" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40605538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40605710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4060c4a8" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4060c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4060c680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4061aa10" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4061aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061abe8"/>
        <function-ref name="isInput" scoped="" ref="0x4061acc8"/>
        <function-ref name="toggle" scoped="" ref="0x4061ada8"/>
        <function-ref name="isOutput" scoped="" ref="0x4061ae88"/>
        <function-ref name="get" scoped="" ref="0x4060c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060c0f0"/>
        <function-ref name="set" scoped="" ref="0x4060c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4060c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4060d4c8" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4060d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4060d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4063f210" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4063f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063f5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4063f6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4063f7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4063f888"/>
        <function-ref name="get" scoped="" ref="0x4063f968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063fa48"/>
        <function-ref name="set" scoped="" ref="0x4063fb28"/>
        <function-ref name="clr" scoped="" ref="0x4063fc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4062b750" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4062b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062b928"/>
        <function-ref name="isInput" scoped="" ref="0x4062ba08"/>
        <function-ref name="toggle" scoped="" ref="0x4062bae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062bbc8"/>
        <function-ref name="get" scoped="" ref="0x4062bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062bd88"/>
        <function-ref name="set" scoped="" ref="0x4062be68"/>
        <function-ref name="clr" scoped="" ref="0x4062a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40636ce8" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40636ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40636ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40635010"/>
        <function-ref name="toggle" scoped="" ref="0x406350f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406351d0"/>
        <function-ref name="get" scoped="" ref="0x406352b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40635390"/>
        <function-ref name="set" scoped="" ref="0x40635470"/>
        <function-ref name="clr" scoped="" ref="0x40635550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40631ea8" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40631ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406300c0"/>
        <function-ref name="isInput" scoped="" ref="0x406301a0"/>
        <function-ref name="toggle" scoped="" ref="0x40630280"/>
        <function-ref name="isOutput" scoped="" ref="0x40630360"/>
        <function-ref name="get" scoped="" ref="0x40630440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40630520"/>
        <function-ref name="set" scoped="" ref="0x40630600"/>
        <function-ref name="clr" scoped="" ref="0x406306e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x406132f0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x406132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406134c8"/>
        <function-ref name="isInput" scoped="" ref="0x406135a8"/>
        <function-ref name="toggle" scoped="" ref="0x40613688"/>
        <function-ref name="isOutput" scoped="" ref="0x40613768"/>
        <function-ref name="get" scoped="" ref="0x40613848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40613928"/>
        <function-ref name="set" scoped="" ref="0x40613a08"/>
        <function-ref name="clr" scoped="" ref="0x40613ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40632a98" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40632a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40632c70"/>
        <function-ref name="isInput" scoped="" ref="0x40632d50"/>
        <function-ref name="toggle" scoped="" ref="0x40632e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40632f10"/>
        <function-ref name="get" scoped="" ref="0x40631010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406310f0"/>
        <function-ref name="set" scoped="" ref="0x406311d0"/>
        <function-ref name="clr" scoped="" ref="0x406312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40624750" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40624750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40624928"/>
        <function-ref name="isInput" scoped="" ref="0x40624a08"/>
        <function-ref name="toggle" scoped="" ref="0x40624ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40624bc8"/>
        <function-ref name="get" scoped="" ref="0x40624ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40624d88"/>
        <function-ref name="set" scoped="" ref="0x40624e68"/>
        <function-ref name="clr" scoped="" ref="0x40623010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4061eea8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4061eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061d0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4061d1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4061d280"/>
        <function-ref name="isOutput" scoped="" ref="0x4061d360"/>
        <function-ref name="get" scoped="" ref="0x4061d440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061d520"/>
        <function-ref name="set" scoped="" ref="0x4061d600"/>
        <function-ref name="clr" scoped="" ref="0x4061d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40629670" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40629670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40629848"/>
        <function-ref name="isInput" scoped="" ref="0x40629928"/>
        <function-ref name="toggle" scoped="" ref="0x40629a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40629ae8"/>
        <function-ref name="get" scoped="" ref="0x40629bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40629ca8"/>
        <function-ref name="set" scoped="" ref="0x40629d88"/>
        <function-ref name="clr" scoped="" ref="0x40629e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40634c08" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40634c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40634de0"/>
        <function-ref name="isInput" scoped="" ref="0x40634ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40633010"/>
        <function-ref name="isOutput" scoped="" ref="0x406330f0"/>
        <function-ref name="get" scoped="" ref="0x406331d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406332b0"/>
        <function-ref name="set" scoped="" ref="0x40633390"/>
        <function-ref name="clr" scoped="" ref="0x40633470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40616010" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40616010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406161e8"/>
        <function-ref name="isInput" scoped="" ref="0x406162c8"/>
        <function-ref name="toggle" scoped="" ref="0x406163a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40616488"/>
        <function-ref name="get" scoped="" ref="0x40616568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40616648"/>
        <function-ref name="set" scoped="" ref="0x40616728"/>
        <function-ref name="clr" scoped="" ref="0x40616808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40622670" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40622670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40622848"/>
        <function-ref name="isInput" scoped="" ref="0x40622928"/>
        <function-ref name="toggle" scoped="" ref="0x40622a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40622ae8"/>
        <function-ref name="get" scoped="" ref="0x40622bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40622ca8"/>
        <function-ref name="set" scoped="" ref="0x40622d88"/>
        <function-ref name="clr" scoped="" ref="0x40622e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4061cce8" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4061cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061cec0"/>
        <function-ref name="isInput" scoped="" ref="0x4062d010"/>
        <function-ref name="toggle" scoped="" ref="0x4062d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062d1d0"/>
        <function-ref name="get" scoped="" ref="0x4062d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062d390"/>
        <function-ref name="set" scoped="" ref="0x4062d470"/>
        <function-ref name="clr" scoped="" ref="0x4062d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x406264b0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x406264b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40626688"/>
        <function-ref name="isInput" scoped="" ref="0x40626768"/>
        <function-ref name="toggle" scoped="" ref="0x40626848"/>
        <function-ref name="isOutput" scoped="" ref="0x40626928"/>
        <function-ref name="get" scoped="" ref="0x40626a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40626ae8"/>
        <function-ref name="set" scoped="" ref="0x40626bc8"/>
        <function-ref name="clr" scoped="" ref="0x40626ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4062fce8" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4062fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062fec0"/>
        <function-ref name="isInput" scoped="" ref="0x4062e010"/>
        <function-ref name="toggle" scoped="" ref="0x4062e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062e1d0"/>
        <function-ref name="get" scoped="" ref="0x4062e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062e390"/>
        <function-ref name="set" scoped="" ref="0x4062e470"/>
        <function-ref name="clr" scoped="" ref="0x4062e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x4063d2f0" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x4063d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4063d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4063d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4063d768"/>
        <function-ref name="get" scoped="" ref="0x4063d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063d928"/>
        <function-ref name="set" scoped="" ref="0x4063da08"/>
        <function-ref name="clr" scoped="" ref="0x4063dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x406258e0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x406258e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40625ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40625b98"/>
        <function-ref name="toggle" scoped="" ref="0x40625c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40625d58"/>
        <function-ref name="get" scoped="" ref="0x40625e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40625f18"/>
        <function-ref name="set" scoped="" ref="0x40636010"/>
        <function-ref name="clr" scoped="" ref="0x406360f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40615ea8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40615ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406140c0"/>
        <function-ref name="isInput" scoped="" ref="0x406141a0"/>
        <function-ref name="toggle" scoped="" ref="0x40614280"/>
        <function-ref name="isOutput" scoped="" ref="0x40614360"/>
        <function-ref name="get" scoped="" ref="0x40614440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40614520"/>
        <function-ref name="set" scoped="" ref="0x40614600"/>
        <function-ref name="clr" scoped="" ref="0x406146e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40620590" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40620590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40620768"/>
        <function-ref name="isInput" scoped="" ref="0x40620848"/>
        <function-ref name="toggle" scoped="" ref="0x40620928"/>
        <function-ref name="isOutput" scoped="" ref="0x40620a08"/>
        <function-ref name="get" scoped="" ref="0x40620ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40620bc8"/>
        <function-ref name="set" scoped="" ref="0x40620ca8"/>
        <function-ref name="clr" scoped="" ref="0x40620d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4063fe08" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4063fe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063e010"/>
        <function-ref name="isInput" scoped="" ref="0x4063e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4063e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4063e2b0"/>
        <function-ref name="get" scoped="" ref="0x4063e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063e470"/>
        <function-ref name="set" scoped="" ref="0x4063e550"/>
        <function-ref name="clr" scoped="" ref="0x4063e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4061fa08" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4061fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4061fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x4061fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4061fe80"/>
        <function-ref name="get" scoped="" ref="0x4061e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061e0f0"/>
        <function-ref name="set" scoped="" ref="0x4061e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4061e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4062a210" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4062a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062a3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4062a4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4062a5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062a688"/>
        <function-ref name="get" scoped="" ref="0x4062a768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062a848"/>
        <function-ref name="set" scoped="" ref="0x4062a928"/>
        <function-ref name="clr" scoped="" ref="0x4062aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40635750" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40635750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40635928"/>
        <function-ref name="isInput" scoped="" ref="0x40635a08"/>
        <function-ref name="toggle" scoped="" ref="0x40635ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40635bc8"/>
        <function-ref name="get" scoped="" ref="0x40635ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40635d88"/>
        <function-ref name="set" scoped="" ref="0x40635e68"/>
        <function-ref name="clr" scoped="" ref="0x40634010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x406308e0" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x406308e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40630ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40630b98"/>
        <function-ref name="toggle" scoped="" ref="0x40630c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40630d58"/>
        <function-ref name="get" scoped="" ref="0x40630e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40630f18"/>
        <function-ref name="set" scoped="" ref="0x4062f010"/>
        <function-ref name="clr" scoped="" ref="0x4062f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40613ce8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40613ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40613ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40624010"/>
        <function-ref name="toggle" scoped="" ref="0x406240f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406241d0"/>
        <function-ref name="get" scoped="" ref="0x406242b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40624390"/>
        <function-ref name="set" scoped="" ref="0x40624470"/>
        <function-ref name="clr" scoped="" ref="0x40624550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x40623210" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x40623210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406233e8"/>
        <function-ref name="isInput" scoped="" ref="0x406234c8"/>
        <function-ref name="toggle" scoped="" ref="0x406235a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40623688"/>
        <function-ref name="get" scoped="" ref="0x40623768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40623848"/>
        <function-ref name="set" scoped="" ref="0x40623928"/>
        <function-ref name="clr" scoped="" ref="0x40623a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4061d8e0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4061d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061dab8"/>
        <function-ref name="isInput" scoped="" ref="0x4061db98"/>
        <function-ref name="toggle" scoped="" ref="0x4061dc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4061dd58"/>
        <function-ref name="get" scoped="" ref="0x4061de38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061df18"/>
        <function-ref name="set" scoped="" ref="0x4061c010"/>
        <function-ref name="clr" scoped="" ref="0x4061c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x406280a0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x406280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40628278"/>
        <function-ref name="isInput" scoped="" ref="0x40628358"/>
        <function-ref name="toggle" scoped="" ref="0x40628438"/>
        <function-ref name="isOutput" scoped="" ref="0x40628518"/>
        <function-ref name="get" scoped="" ref="0x406285f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406286d8"/>
        <function-ref name="set" scoped="" ref="0x406287b8"/>
        <function-ref name="clr" scoped="" ref="0x40628898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40633670" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40633670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40633848"/>
        <function-ref name="isInput" scoped="" ref="0x40633928"/>
        <function-ref name="toggle" scoped="" ref="0x40633a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40633ae8"/>
        <function-ref name="get" scoped="" ref="0x40633bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40633ca8"/>
        <function-ref name="set" scoped="" ref="0x40633d88"/>
        <function-ref name="clr" scoped="" ref="0x40633e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40616a08" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40616a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40616be0"/>
        <function-ref name="isInput" scoped="" ref="0x40616cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40616da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40616e80"/>
        <function-ref name="get" scoped="" ref="0x40615010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406150f0"/>
        <function-ref name="set" scoped="" ref="0x406151d0"/>
        <function-ref name="clr" scoped="" ref="0x406152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x406210a0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x406210a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406212f8"/>
        <function-ref name="isInput" scoped="" ref="0x406213d8"/>
        <function-ref name="toggle" scoped="" ref="0x406214b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40621598"/>
        <function-ref name="get" scoped="" ref="0x40621678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40621758"/>
        <function-ref name="set" scoped="" ref="0x40621838"/>
        <function-ref name="clr" scoped="" ref="0x40621918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4062d750" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4062d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062d928"/>
        <function-ref name="isInput" scoped="" ref="0x4062da08"/>
        <function-ref name="toggle" scoped="" ref="0x4062dae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062dbc8"/>
        <function-ref name="get" scoped="" ref="0x4062dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062dd88"/>
        <function-ref name="set" scoped="" ref="0x4062de68"/>
        <function-ref name="clr" scoped="" ref="0x4062c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4062e750" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4062e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062e928"/>
        <function-ref name="isInput" scoped="" ref="0x4062ea08"/>
        <function-ref name="toggle" scoped="" ref="0x4062eae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062ebc8"/>
        <function-ref name="get" scoped="" ref="0x4062eca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062ed88"/>
        <function-ref name="set" scoped="" ref="0x4062ee68"/>
        <function-ref name="clr" scoped="" ref="0x4063f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4062cc08" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4062cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062cee0"/>
        <function-ref name="isInput" scoped="" ref="0x4062b010"/>
        <function-ref name="toggle" scoped="" ref="0x4062b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062b1d0"/>
        <function-ref name="get" scoped="" ref="0x4062b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062b390"/>
        <function-ref name="set" scoped="" ref="0x4062b470"/>
        <function-ref name="clr" scoped="" ref="0x4062b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x406362f0" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x406362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406364c8"/>
        <function-ref name="isInput" scoped="" ref="0x406365a8"/>
        <function-ref name="toggle" scoped="" ref="0x40636688"/>
        <function-ref name="isOutput" scoped="" ref="0x40636768"/>
        <function-ref name="get" scoped="" ref="0x40636848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40636928"/>
        <function-ref name="set" scoped="" ref="0x40636a08"/>
        <function-ref name="clr" scoped="" ref="0x40636ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x406314b0" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x406314b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40631688"/>
        <function-ref name="isInput" scoped="" ref="0x40631768"/>
        <function-ref name="toggle" scoped="" ref="0x40631848"/>
        <function-ref name="isOutput" scoped="" ref="0x40631928"/>
        <function-ref name="get" scoped="" ref="0x40631a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40631ae8"/>
        <function-ref name="set" scoped="" ref="0x40631bc8"/>
        <function-ref name="clr" scoped="" ref="0x40631ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4063dce8" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4063dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063dec0"/>
        <function-ref name="isInput" scoped="" ref="0x4063c010"/>
        <function-ref name="toggle" scoped="" ref="0x4063c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4063c1d0"/>
        <function-ref name="get" scoped="" ref="0x4063c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063c390"/>
        <function-ref name="set" scoped="" ref="0x4063c470"/>
        <function-ref name="clr" scoped="" ref="0x4063c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x406148e0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x406148e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40614ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40614b98"/>
        <function-ref name="toggle" scoped="" ref="0x40614c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40614d58"/>
        <function-ref name="get" scoped="" ref="0x40614e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40614f18"/>
        <function-ref name="set" scoped="" ref="0x40613010"/>
        <function-ref name="clr" scoped="" ref="0x406130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4061f010" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4061f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4061f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4061f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4061f488"/>
        <function-ref name="get" scoped="" ref="0x4061f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061f648"/>
        <function-ref name="set" scoped="" ref="0x4061f728"/>
        <function-ref name="clr" scoped="" ref="0x4061f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x406320a0" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x406320a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40632278"/>
        <function-ref name="isInput" scoped="" ref="0x40632358"/>
        <function-ref name="toggle" scoped="" ref="0x40632438"/>
        <function-ref name="isOutput" scoped="" ref="0x40632518"/>
        <function-ref name="get" scoped="" ref="0x406325f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406326d8"/>
        <function-ref name="set" scoped="" ref="0x406327b8"/>
        <function-ref name="clr" scoped="" ref="0x40632898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4061e4b0" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4061e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061e688"/>
        <function-ref name="isInput" scoped="" ref="0x4061e768"/>
        <function-ref name="toggle" scoped="" ref="0x4061e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4061e928"/>
        <function-ref name="get" scoped="" ref="0x4061ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061eae8"/>
        <function-ref name="set" scoped="" ref="0x4061ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4061eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4062ac08" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4062ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4062aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40629010"/>
        <function-ref name="isOutput" scoped="" ref="0x406290f0"/>
        <function-ref name="get" scoped="" ref="0x406291d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406292b0"/>
        <function-ref name="set" scoped="" ref="0x40629390"/>
        <function-ref name="clr" scoped="" ref="0x40629470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x40634210" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x40634210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406343e8"/>
        <function-ref name="isInput" scoped="" ref="0x406344c8"/>
        <function-ref name="toggle" scoped="" ref="0x406345a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40634688"/>
        <function-ref name="get" scoped="" ref="0x40634768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40634848"/>
        <function-ref name="set" scoped="" ref="0x40634928"/>
        <function-ref name="clr" scoped="" ref="0x40634a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4062f2f0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4062f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4062f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4062f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4062f768"/>
        <function-ref name="get" scoped="" ref="0x4062f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062f928"/>
        <function-ref name="set" scoped="" ref="0x4062fa08"/>
        <function-ref name="clr" scoped="" ref="0x4062fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4060f548" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4060f548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4060f720"/>
        <function-ref name="isInput" scoped="" ref="0x4060f800"/>
        <function-ref name="toggle" scoped="" ref="0x4060f8e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4060f9c0"/>
        <function-ref name="get" scoped="" ref="0x4060faa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060fb80"/>
        <function-ref name="set" scoped="" ref="0x4060fc60"/>
        <function-ref name="clr" scoped="" ref="0x4060fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40623c08" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40623c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40623de0"/>
        <function-ref name="isInput" scoped="" ref="0x40623ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40622010"/>
        <function-ref name="isOutput" scoped="" ref="0x406220f0"/>
        <function-ref name="get" scoped="" ref="0x406221d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406222b0"/>
        <function-ref name="set" scoped="" ref="0x40622390"/>
        <function-ref name="clr" scoped="" ref="0x40622470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4061c2f0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4061c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061c4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4061c5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4061c688"/>
        <function-ref name="isOutput" scoped="" ref="0x4061c768"/>
        <function-ref name="get" scoped="" ref="0x4061c848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061c928"/>
        <function-ref name="set" scoped="" ref="0x4061ca08"/>
        <function-ref name="clr" scoped="" ref="0x4061cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40628a98" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40628a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40628c70"/>
        <function-ref name="isInput" scoped="" ref="0x40628d50"/>
        <function-ref name="toggle" scoped="" ref="0x40628e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40628f10"/>
        <function-ref name="get" scoped="" ref="0x40626010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406260f0"/>
        <function-ref name="set" scoped="" ref="0x406261d0"/>
        <function-ref name="clr" scoped="" ref="0x406262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4063e830" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4063e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063ea08"/>
        <function-ref name="isInput" scoped="" ref="0x4063eae8"/>
        <function-ref name="toggle" scoped="" ref="0x4063ebc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4063eca8"/>
        <function-ref name="get" scoped="" ref="0x4063ed88"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063ee68"/>
        <function-ref name="set" scoped="" ref="0x4063d010"/>
        <function-ref name="clr" scoped="" ref="0x4063d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40626ea8" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40626ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406250c0"/>
        <function-ref name="isInput" scoped="" ref="0x406251a0"/>
        <function-ref name="toggle" scoped="" ref="0x40625280"/>
        <function-ref name="isOutput" scoped="" ref="0x40625360"/>
        <function-ref name="get" scoped="" ref="0x40625440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40625520"/>
        <function-ref name="set" scoped="" ref="0x40625600"/>
        <function-ref name="clr" scoped="" ref="0x406256e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4062c210" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4062c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062c3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4062c4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4062c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062c688"/>
        <function-ref name="get" scoped="" ref="0x4062c768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062c848"/>
        <function-ref name="set" scoped="" ref="0x4062c928"/>
        <function-ref name="clr" scoped="" ref="0x4062ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x406154b0" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x406154b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40615688"/>
        <function-ref name="isInput" scoped="" ref="0x40615768"/>
        <function-ref name="toggle" scoped="" ref="0x40615848"/>
        <function-ref name="isOutput" scoped="" ref="0x40615928"/>
        <function-ref name="get" scoped="" ref="0x40615a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40615ae8"/>
        <function-ref name="set" scoped="" ref="0x40615bc8"/>
        <function-ref name="clr" scoped="" ref="0x40615ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40621b18" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40621b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40621cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40621dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40621eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40620010"/>
        <function-ref name="get" scoped="" ref="0x406200f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406201d0"/>
        <function-ref name="set" scoped="" ref="0x406202b0"/>
        <function-ref name="clr" scoped="" ref="0x40620390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4065b4f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4065b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4065b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4065b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4065b968"/>
        <function-ref name="get" scoped="" ref="0x4065ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065bb28"/>
        <function-ref name="set" scoped="" ref="0x4065bc08"/>
        <function-ref name="clr" scoped="" ref="0x4065bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4066b170" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4066b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066b348"/>
        <function-ref name="isInput" scoped="" ref="0x4066b428"/>
        <function-ref name="toggle" scoped="" ref="0x4066b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4066b5e8"/>
        <function-ref name="get" scoped="" ref="0x4066b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066b7a8"/>
        <function-ref name="set" scoped="" ref="0x4066b888"/>
        <function-ref name="clr" scoped="" ref="0x4066b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4065c228" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4065c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065c400"/>
        <function-ref name="isInput" scoped="" ref="0x4065c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4065c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4065c6a0"/>
        <function-ref name="get" scoped="" ref="0x4065c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065c860"/>
        <function-ref name="set" scoped="" ref="0x4065c940"/>
        <function-ref name="clr" scoped="" ref="0x4065ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4065be48" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4065be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066c050"/>
        <function-ref name="isInput" scoped="" ref="0x4066c130"/>
        <function-ref name="toggle" scoped="" ref="0x4066c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4066c2f0"/>
        <function-ref name="get" scoped="" ref="0x4066c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066c4b0"/>
        <function-ref name="set" scoped="" ref="0x4066c590"/>
        <function-ref name="clr" scoped="" ref="0x4066c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4066bac8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4066bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066bca0"/>
        <function-ref name="isInput" scoped="" ref="0x4066bd80"/>
        <function-ref name="toggle" scoped="" ref="0x4066be60"/>
        <function-ref name="isOutput" scoped="" ref="0x4066a010"/>
        <function-ref name="get" scoped="" ref="0x4066a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066a1d0"/>
        <function-ref name="set" scoped="" ref="0x4066a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4066a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4065cb80" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4065cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065cd58"/>
        <function-ref name="isInput" scoped="" ref="0x4065ce38"/>
        <function-ref name="toggle" scoped="" ref="0x4065cf18"/>
        <function-ref name="isOutput" scoped="" ref="0x4065b010"/>
        <function-ref name="get" scoped="" ref="0x4065b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065b1d0"/>
        <function-ref name="set" scoped="" ref="0x4065b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4065b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4066c7d0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4066c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4066ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4066cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4066cc48"/>
        <function-ref name="get" scoped="" ref="0x4066cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066ce08"/>
        <function-ref name="set" scoped="" ref="0x4066cee8"/>
        <function-ref name="clr" scoped="" ref="0x4066b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4066a4f0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4066a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4066a7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4066a888"/>
        <function-ref name="isOutput" scoped="" ref="0x4066a968"/>
        <function-ref name="get" scoped="" ref="0x4066aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066ab28"/>
        <function-ref name="set" scoped="" ref="0x4066ac08"/>
        <function-ref name="clr" scoped="" ref="0x4066ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed2010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed21e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ed22c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ed23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed2488"/>
        <function-ref name="get" scoped="" ref="0x40ed2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed2648"/>
        <function-ref name="set" scoped="" ref="0x40ed2728"/>
        <function-ref name="clr" scoped="" ref="0x40ed2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed19e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed1bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ed1ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed1d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed1e60"/>
        <function-ref name="get" scoped="" ref="0x40ed0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed00f0"/>
        <function-ref name="set" scoped="" ref="0x40ed01d0"/>
        <function-ref name="clr" scoped="" ref="0x40ed02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ecf538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ecf538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ecf710"/>
        <function-ref name="isInput" scoped="" ref="0x40ecf7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ecf8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ecf9b0"/>
        <function-ref name="get" scoped="" ref="0x40ecfa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecfb70"/>
        <function-ref name="set" scoped="" ref="0x40ecfc50"/>
        <function-ref name="clr" scoped="" ref="0x40ecfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ecd010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ecd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ecd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ecd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ecd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ecd488"/>
        <function-ref name="get" scoped="" ref="0x40ecd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecd648"/>
        <function-ref name="set" scoped="" ref="0x40ecd728"/>
        <function-ref name="clr" scoped="" ref="0x40ecd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ecc9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ecc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eccbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40eccca0"/>
        <function-ref name="toggle" scoped="" ref="0x40eccd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ecce60"/>
        <function-ref name="get" scoped="" ref="0x40ecb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecb0f0"/>
        <function-ref name="set" scoped="" ref="0x40ecb1d0"/>
        <function-ref name="clr" scoped="" ref="0x40ecb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eca538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eca538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eca710"/>
        <function-ref name="isInput" scoped="" ref="0x40eca7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40eca8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eca9b0"/>
        <function-ref name="get" scoped="" ref="0x40ecaa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecab70"/>
        <function-ref name="set" scoped="" ref="0x40ecac50"/>
        <function-ref name="clr" scoped="" ref="0x40ecad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec8010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec81e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ec82c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ec83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec8488"/>
        <function-ref name="get" scoped="" ref="0x40ec8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec8648"/>
        <function-ref name="set" scoped="" ref="0x40ec8728"/>
        <function-ref name="clr" scoped="" ref="0x40ec8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec79e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec7bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ec7ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ec7d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec7e60"/>
        <function-ref name="get" scoped="" ref="0x40ec6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec60f0"/>
        <function-ref name="set" scoped="" ref="0x40ec61d0"/>
        <function-ref name="clr" scoped="" ref="0x40ec62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40665e48" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40665e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40664050"/>
        <function-ref name="isInput" scoped="" ref="0x40664130"/>
        <function-ref name="toggle" scoped="" ref="0x40664210"/>
        <function-ref name="isOutput" scoped="" ref="0x406642f0"/>
        <function-ref name="get" scoped="" ref="0x406643d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406644b0"/>
        <function-ref name="set" scoped="" ref="0x40664590"/>
        <function-ref name="clr" scoped="" ref="0x40664670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40675ac8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40675ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40675ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40675d80"/>
        <function-ref name="toggle" scoped="" ref="0x40675e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40674010"/>
        <function-ref name="get" scoped="" ref="0x406740f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406741d0"/>
        <function-ref name="set" scoped="" ref="0x406742b0"/>
        <function-ref name="clr" scoped="" ref="0x40674390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40666b00" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40666b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40666cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40666db8"/>
        <function-ref name="toggle" scoped="" ref="0x40666e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40665010"/>
        <function-ref name="get" scoped="" ref="0x406650f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406651d0"/>
        <function-ref name="set" scoped="" ref="0x406652b0"/>
        <function-ref name="clr" scoped="" ref="0x40665390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x406647d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x406647d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406649a8"/>
        <function-ref name="isInput" scoped="" ref="0x40664a88"/>
        <function-ref name="toggle" scoped="" ref="0x40664b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40664c48"/>
        <function-ref name="get" scoped="" ref="0x40664d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40664e08"/>
        <function-ref name="set" scoped="" ref="0x40664ee8"/>
        <function-ref name="clr" scoped="" ref="0x40675010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x406744f0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x406744f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406746c8"/>
        <function-ref name="isInput" scoped="" ref="0x406747a8"/>
        <function-ref name="toggle" scoped="" ref="0x40674888"/>
        <function-ref name="isOutput" scoped="" ref="0x40674968"/>
        <function-ref name="get" scoped="" ref="0x40674a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40674b28"/>
        <function-ref name="set" scoped="" ref="0x40674c08"/>
        <function-ref name="clr" scoped="" ref="0x40674ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x406654f0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x406654f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406656c8"/>
        <function-ref name="isInput" scoped="" ref="0x406657a8"/>
        <function-ref name="toggle" scoped="" ref="0x40665888"/>
        <function-ref name="isOutput" scoped="" ref="0x40665968"/>
        <function-ref name="get" scoped="" ref="0x40665a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40665b28"/>
        <function-ref name="set" scoped="" ref="0x40665c08"/>
        <function-ref name="clr" scoped="" ref="0x40665ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40675170" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40675170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40675348"/>
        <function-ref name="isInput" scoped="" ref="0x40675428"/>
        <function-ref name="toggle" scoped="" ref="0x40675508"/>
        <function-ref name="isOutput" scoped="" ref="0x406755e8"/>
        <function-ref name="get" scoped="" ref="0x406756c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406757a8"/>
        <function-ref name="set" scoped="" ref="0x40675888"/>
        <function-ref name="clr" scoped="" ref="0x40675968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40674e48" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40674e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40673050"/>
        <function-ref name="isInput" scoped="" ref="0x40673130"/>
        <function-ref name="toggle" scoped="" ref="0x40673210"/>
        <function-ref name="isOutput" scoped="" ref="0x406732f0"/>
        <function-ref name="get" scoped="" ref="0x406733d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406734b0"/>
        <function-ref name="set" scoped="" ref="0x40673590"/>
        <function-ref name="clr" scoped="" ref="0x40673670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f07de8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f07de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f03010"/>
        <function-ref name="isInput" scoped="" ref="0x40f030f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f031d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f032b0"/>
        <function-ref name="get" scoped="" ref="0x40f03390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f03470"/>
        <function-ref name="set" scoped="" ref="0x40f03550"/>
        <function-ref name="clr" scoped="" ref="0x40f03630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f027f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f027f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f029d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f02ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f02b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f02c70"/>
        <function-ref name="get" scoped="" ref="0x40f02d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f02e30"/>
        <function-ref name="set" scoped="" ref="0x40f02f10"/>
        <function-ref name="clr" scoped="" ref="0x40f01010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f00228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f00228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f00400"/>
        <function-ref name="isInput" scoped="" ref="0x40f004e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f005c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f006a0"/>
        <function-ref name="get" scoped="" ref="0x40f00780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f00860"/>
        <function-ref name="set" scoped="" ref="0x40f00940"/>
        <function-ref name="clr" scoped="" ref="0x40f00a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40effc08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40effc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40effde0"/>
        <function-ref name="isInput" scoped="" ref="0x40effec0"/>
        <function-ref name="toggle" scoped="" ref="0x40efe010"/>
        <function-ref name="isOutput" scoped="" ref="0x40efe0f0"/>
        <function-ref name="get" scoped="" ref="0x40efe1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40efe2b0"/>
        <function-ref name="set" scoped="" ref="0x40efe390"/>
        <function-ref name="clr" scoped="" ref="0x40efe470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40efd6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40efd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40efd898"/>
        <function-ref name="isInput" scoped="" ref="0x40efd978"/>
        <function-ref name="toggle" scoped="" ref="0x40efda58"/>
        <function-ref name="isOutput" scoped="" ref="0x40efdb38"/>
        <function-ref name="get" scoped="" ref="0x40efdc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40efdcf8"/>
        <function-ref name="set" scoped="" ref="0x40efddd8"/>
        <function-ref name="clr" scoped="" ref="0x40efdeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40efb0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40efb0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40efb288"/>
        <function-ref name="isInput" scoped="" ref="0x40efb368"/>
        <function-ref name="toggle" scoped="" ref="0x40efb448"/>
        <function-ref name="isOutput" scoped="" ref="0x40efb528"/>
        <function-ref name="get" scoped="" ref="0x40efb608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40efb6e8"/>
        <function-ref name="set" scoped="" ref="0x40efb7c8"/>
        <function-ref name="clr" scoped="" ref="0x40efb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40efaa88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40efaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40efac60"/>
        <function-ref name="isInput" scoped="" ref="0x40efad40"/>
        <function-ref name="toggle" scoped="" ref="0x40efae20"/>
        <function-ref name="isOutput" scoped="" ref="0x40efaf00"/>
        <function-ref name="get" scoped="" ref="0x40f2e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f2e0f0"/>
        <function-ref name="set" scoped="" ref="0x40f2e1d0"/>
        <function-ref name="clr" scoped="" ref="0x40f2e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f2d538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f2d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2d710"/>
        <function-ref name="isInput" scoped="" ref="0x40f2d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f2d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f2d9b0"/>
        <function-ref name="get" scoped="" ref="0x40f2da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f2db70"/>
        <function-ref name="set" scoped="" ref="0x40f2dc50"/>
        <function-ref name="clr" scoped="" ref="0x40f2dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4066e6b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4066e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066e888"/>
        <function-ref name="isInput" scoped="" ref="0x4066e968"/>
        <function-ref name="toggle" scoped="" ref="0x4066ea48"/>
        <function-ref name="isOutput" scoped="" ref="0x4066eb28"/>
        <function-ref name="get" scoped="" ref="0x4066ec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066ece8"/>
        <function-ref name="set" scoped="" ref="0x4066edc8"/>
        <function-ref name="clr" scoped="" ref="0x4066eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4067e330" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4067e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4067e508"/>
        <function-ref name="isInput" scoped="" ref="0x4067e5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4067e6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4067e7a8"/>
        <function-ref name="get" scoped="" ref="0x4067e888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067e968"/>
        <function-ref name="set" scoped="" ref="0x4067ea48"/>
        <function-ref name="clr" scoped="" ref="0x4067eb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4066f3d8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4066f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066f5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4066f690"/>
        <function-ref name="toggle" scoped="" ref="0x4066f770"/>
        <function-ref name="isOutput" scoped="" ref="0x4066f850"/>
        <function-ref name="get" scoped="" ref="0x4066f930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066fa10"/>
        <function-ref name="set" scoped="" ref="0x4066faf0"/>
        <function-ref name="clr" scoped="" ref="0x4066fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4066d030" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4066d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066d208"/>
        <function-ref name="isInput" scoped="" ref="0x4066d2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4066d3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4066d4a8"/>
        <function-ref name="get" scoped="" ref="0x4066d588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066d668"/>
        <function-ref name="set" scoped="" ref="0x4066d748"/>
        <function-ref name="clr" scoped="" ref="0x4066d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4067ec88" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4067ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4067ee60"/>
        <function-ref name="isInput" scoped="" ref="0x4067d010"/>
        <function-ref name="toggle" scoped="" ref="0x4067d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4067d1d0"/>
        <function-ref name="get" scoped="" ref="0x4067d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067d390"/>
        <function-ref name="set" scoped="" ref="0x4067d470"/>
        <function-ref name="clr" scoped="" ref="0x4067d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4066fd30" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4066fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066ff08"/>
        <function-ref name="isInput" scoped="" ref="0x4066e010"/>
        <function-ref name="toggle" scoped="" ref="0x4066e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4066e1d0"/>
        <function-ref name="get" scoped="" ref="0x4066e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066e390"/>
        <function-ref name="set" scoped="" ref="0x4066e470"/>
        <function-ref name="clr" scoped="" ref="0x4066e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4066d988" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4066d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066db60"/>
        <function-ref name="isInput" scoped="" ref="0x4066dc40"/>
        <function-ref name="toggle" scoped="" ref="0x4066dd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4066de00"/>
        <function-ref name="get" scoped="" ref="0x4066dee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067e010"/>
        <function-ref name="set" scoped="" ref="0x4067e0f0"/>
        <function-ref name="clr" scoped="" ref="0x4067e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4067d6b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4067d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4067d888"/>
        <function-ref name="isInput" scoped="" ref="0x4067d968"/>
        <function-ref name="toggle" scoped="" ref="0x4067da48"/>
        <function-ref name="isOutput" scoped="" ref="0x4067db28"/>
        <function-ref name="get" scoped="" ref="0x4067dc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067dce8"/>
        <function-ref name="set" scoped="" ref="0x4067ddc8"/>
        <function-ref name="clr" scoped="" ref="0x4067dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f37938" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f37938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f37b10"/>
        <function-ref name="isInput" scoped="" ref="0x40f37bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40f37cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f37db0"/>
        <function-ref name="get" scoped="" ref="0x40f37e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f36010"/>
        <function-ref name="set" scoped="" ref="0x40f360f0"/>
        <function-ref name="clr" scoped="" ref="0x40f361d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f353b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f353b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f35588"/>
        <function-ref name="isInput" scoped="" ref="0x40f35668"/>
        <function-ref name="toggle" scoped="" ref="0x40f35748"/>
        <function-ref name="isOutput" scoped="" ref="0x40f35828"/>
        <function-ref name="get" scoped="" ref="0x40f35908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f359e8"/>
        <function-ref name="set" scoped="" ref="0x40f35ac8"/>
        <function-ref name="clr" scoped="" ref="0x40f35ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f34d70" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f34d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f33010"/>
        <function-ref name="isInput" scoped="" ref="0x40f330f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f331d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f332b0"/>
        <function-ref name="get" scoped="" ref="0x40f33390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f33470"/>
        <function-ref name="set" scoped="" ref="0x40f33550"/>
        <function-ref name="clr" scoped="" ref="0x40f33630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f327f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f327f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f329d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f32ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f32b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f32c70"/>
        <function-ref name="get" scoped="" ref="0x40f32d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f32e30"/>
        <function-ref name="set" scoped="" ref="0x40f32f10"/>
        <function-ref name="clr" scoped="" ref="0x40f31010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f30228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f30228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f30400"/>
        <function-ref name="isInput" scoped="" ref="0x40f304e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f305c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f306a0"/>
        <function-ref name="get" scoped="" ref="0x40f30780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f30860"/>
        <function-ref name="set" scoped="" ref="0x40f30940"/>
        <function-ref name="clr" scoped="" ref="0x40f30a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f65c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f65c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f65de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f65ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f64010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f640f0"/>
        <function-ref name="get" scoped="" ref="0x40f641d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f642b0"/>
        <function-ref name="set" scoped="" ref="0x40f64390"/>
        <function-ref name="clr" scoped="" ref="0x40f64470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f636c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f636c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f63898"/>
        <function-ref name="isInput" scoped="" ref="0x40f63978"/>
        <function-ref name="toggle" scoped="" ref="0x40f63a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f63b38"/>
        <function-ref name="get" scoped="" ref="0x40f63c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f63cf8"/>
        <function-ref name="set" scoped="" ref="0x40f63dd8"/>
        <function-ref name="clr" scoped="" ref="0x40f63eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f610b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f610b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f61288"/>
        <function-ref name="isInput" scoped="" ref="0x40f61368"/>
        <function-ref name="toggle" scoped="" ref="0x40f61448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f61528"/>
        <function-ref name="get" scoped="" ref="0x40f61608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f616e8"/>
        <function-ref name="set" scoped="" ref="0x40f617c8"/>
        <function-ref name="clr" scoped="" ref="0x40f618a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40678170" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40678170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40678348"/>
        <function-ref name="isInput" scoped="" ref="0x40678428"/>
        <function-ref name="toggle" scoped="" ref="0x40678508"/>
        <function-ref name="isOutput" scoped="" ref="0x406785e8"/>
        <function-ref name="get" scoped="" ref="0x406786c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406787a8"/>
        <function-ref name="set" scoped="" ref="0x40678888"/>
        <function-ref name="clr" scoped="" ref="0x40678968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40677e48" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40677e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40688050"/>
        <function-ref name="isInput" scoped="" ref="0x40688130"/>
        <function-ref name="toggle" scoped="" ref="0x40688210"/>
        <function-ref name="isOutput" scoped="" ref="0x406882f0"/>
        <function-ref name="get" scoped="" ref="0x406883d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406884b0"/>
        <function-ref name="set" scoped="" ref="0x40688590"/>
        <function-ref name="clr" scoped="" ref="0x40688670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4067adc8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4067adc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40679010"/>
        <function-ref name="isInput" scoped="" ref="0x406790f0"/>
        <function-ref name="toggle" scoped="" ref="0x406791d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406792b0"/>
        <function-ref name="get" scoped="" ref="0x40679390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40679470"/>
        <function-ref name="set" scoped="" ref="0x40679550"/>
        <function-ref name="clr" scoped="" ref="0x40679630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40678ac8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40678ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40678ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40678d80"/>
        <function-ref name="toggle" scoped="" ref="0x40678e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40677010"/>
        <function-ref name="get" scoped="" ref="0x406770f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406771d0"/>
        <function-ref name="set" scoped="" ref="0x406772b0"/>
        <function-ref name="clr" scoped="" ref="0x40677390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x406887d0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x406887d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406889a8"/>
        <function-ref name="isInput" scoped="" ref="0x40688a88"/>
        <function-ref name="toggle" scoped="" ref="0x40688b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40688c48"/>
        <function-ref name="get" scoped="" ref="0x40688d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40688e08"/>
        <function-ref name="set" scoped="" ref="0x40688ee8"/>
        <function-ref name="clr" scoped="" ref="0x40687010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40679790" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40679790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40679968"/>
        <function-ref name="isInput" scoped="" ref="0x40679a48"/>
        <function-ref name="toggle" scoped="" ref="0x40679b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40679c08"/>
        <function-ref name="get" scoped="" ref="0x40679ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40679dc8"/>
        <function-ref name="set" scoped="" ref="0x40679ea8"/>
        <function-ref name="clr" scoped="" ref="0x40678010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x406774f0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x406774f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406776c8"/>
        <function-ref name="isInput" scoped="" ref="0x406777a8"/>
        <function-ref name="toggle" scoped="" ref="0x40677888"/>
        <function-ref name="isOutput" scoped="" ref="0x40677968"/>
        <function-ref name="get" scoped="" ref="0x40677a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40677b28"/>
        <function-ref name="set" scoped="" ref="0x40677c08"/>
        <function-ref name="clr" scoped="" ref="0x40677ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40687170" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40687170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40687348"/>
        <function-ref name="isInput" scoped="" ref="0x40687428"/>
        <function-ref name="toggle" scoped="" ref="0x40687508"/>
        <function-ref name="isOutput" scoped="" ref="0x406875e8"/>
        <function-ref name="get" scoped="" ref="0x406876c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406877a8"/>
        <function-ref name="set" scoped="" ref="0x40687888"/>
        <function-ref name="clr" scoped="" ref="0x40687968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f6b538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f6b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f6b710"/>
        <function-ref name="isInput" scoped="" ref="0x40f6b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f6b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f6b9b0"/>
        <function-ref name="get" scoped="" ref="0x40f6ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f6bb70"/>
        <function-ref name="set" scoped="" ref="0x40f6bc50"/>
        <function-ref name="clr" scoped="" ref="0x40f6bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f69010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f69010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f691e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f692c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f693a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f69488"/>
        <function-ref name="get" scoped="" ref="0x40f69568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f69648"/>
        <function-ref name="set" scoped="" ref="0x40f69728"/>
        <function-ref name="clr" scoped="" ref="0x40f69808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f689e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f689e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f68bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f68ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f68d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f68e60"/>
        <function-ref name="get" scoped="" ref="0x40f67010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f670f0"/>
        <function-ref name="set" scoped="" ref="0x40f671d0"/>
        <function-ref name="clr" scoped="" ref="0x40f672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f66538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f66538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f66710"/>
        <function-ref name="isInput" scoped="" ref="0x40f667f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f668d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f669b0"/>
        <function-ref name="get" scoped="" ref="0x40f66a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f66b70"/>
        <function-ref name="set" scoped="" ref="0x40f66c50"/>
        <function-ref name="clr" scoped="" ref="0x40f66d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9b010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f9b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f9b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9b488"/>
        <function-ref name="get" scoped="" ref="0x40f9b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9b648"/>
        <function-ref name="set" scoped="" ref="0x40f9b728"/>
        <function-ref name="clr" scoped="" ref="0x40f9b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9a9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9abc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f9aca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f9ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9ae60"/>
        <function-ref name="get" scoped="" ref="0x40f98010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f980f0"/>
        <function-ref name="set" scoped="" ref="0x40f981d0"/>
        <function-ref name="clr" scoped="" ref="0x40f982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f97538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f97538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f97710"/>
        <function-ref name="isInput" scoped="" ref="0x40f977f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f978d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f979b0"/>
        <function-ref name="get" scoped="" ref="0x40f97a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f97b70"/>
        <function-ref name="set" scoped="" ref="0x40f97c50"/>
        <function-ref name="clr" scoped="" ref="0x40f97d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f95010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f951e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f952c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f953a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f95488"/>
        <function-ref name="get" scoped="" ref="0x40f95568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f95648"/>
        <function-ref name="set" scoped="" ref="0x40f95728"/>
        <function-ref name="clr" scoped="" ref="0x40f95808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x406839e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x406839e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40683bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40683ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40683d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40683e60"/>
        <function-ref name="get" scoped="" ref="0x40682010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406820f0"/>
        <function-ref name="set" scoped="" ref="0x406821d0"/>
        <function-ref name="clr" scoped="" ref="0x406822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40681790" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40681790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40681968"/>
        <function-ref name="isInput" scoped="" ref="0x40681a48"/>
        <function-ref name="toggle" scoped="" ref="0x40681b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40681c08"/>
        <function-ref name="get" scoped="" ref="0x40681ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40681dc8"/>
        <function-ref name="set" scoped="" ref="0x40681ea8"/>
        <function-ref name="clr" scoped="" ref="0x40680010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x406846f8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x406846f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406848d0"/>
        <function-ref name="isInput" scoped="" ref="0x406849b0"/>
        <function-ref name="toggle" scoped="" ref="0x40684a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40684b70"/>
        <function-ref name="get" scoped="" ref="0x40684c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40684d30"/>
        <function-ref name="set" scoped="" ref="0x40684e10"/>
        <function-ref name="clr" scoped="" ref="0x40684ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40682410" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40682410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406825e8"/>
        <function-ref name="isInput" scoped="" ref="0x406826c8"/>
        <function-ref name="toggle" scoped="" ref="0x406827a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40682888"/>
        <function-ref name="get" scoped="" ref="0x40682968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40682a48"/>
        <function-ref name="set" scoped="" ref="0x40682b28"/>
        <function-ref name="clr" scoped="" ref="0x40682c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40680170" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40680170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40680348"/>
        <function-ref name="isInput" scoped="" ref="0x40680428"/>
        <function-ref name="toggle" scoped="" ref="0x40680508"/>
        <function-ref name="isOutput" scoped="" ref="0x406805e8"/>
        <function-ref name="get" scoped="" ref="0x406806c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406807a8"/>
        <function-ref name="set" scoped="" ref="0x40680888"/>
        <function-ref name="clr" scoped="" ref="0x40680968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40683090" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40683090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40683268"/>
        <function-ref name="isInput" scoped="" ref="0x40683348"/>
        <function-ref name="toggle" scoped="" ref="0x40683428"/>
        <function-ref name="isOutput" scoped="" ref="0x40683508"/>
        <function-ref name="get" scoped="" ref="0x406835e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406836c8"/>
        <function-ref name="set" scoped="" ref="0x406837a8"/>
        <function-ref name="clr" scoped="" ref="0x40683888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40682d68" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40682d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40681010"/>
        <function-ref name="isInput" scoped="" ref="0x406810f0"/>
        <function-ref name="toggle" scoped="" ref="0x406811d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406812b0"/>
        <function-ref name="get" scoped="" ref="0x40681390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40681470"/>
        <function-ref name="set" scoped="" ref="0x40681550"/>
        <function-ref name="clr" scoped="" ref="0x40681630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40680ac8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40680ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40680ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40680d80"/>
        <function-ref name="toggle" scoped="" ref="0x40680e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4067f010"/>
        <function-ref name="get" scoped="" ref="0x4067f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067f1d0"/>
        <function-ref name="set" scoped="" ref="0x4067f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4067f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa6418" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa6418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa65f0"/>
        <function-ref name="isInput" scoped="" ref="0x40fa66d0"/>
        <function-ref name="toggle" scoped="" ref="0x40fa67b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa6890"/>
        <function-ref name="get" scoped="" ref="0x40fa6970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa6a50"/>
        <function-ref name="set" scoped="" ref="0x40fa6b30"/>
        <function-ref name="clr" scoped="" ref="0x40fa6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa5de0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa4010"/>
        <function-ref name="isInput" scoped="" ref="0x40fa40f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fa41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa42b0"/>
        <function-ref name="get" scoped="" ref="0x40fa4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa4470"/>
        <function-ref name="set" scoped="" ref="0x40fa4550"/>
        <function-ref name="clr" scoped="" ref="0x40fa4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa37f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa39d0"/>
        <function-ref name="isInput" scoped="" ref="0x40fa3ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40fa3b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa3c70"/>
        <function-ref name="get" scoped="" ref="0x40fa3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa3e30"/>
        <function-ref name="set" scoped="" ref="0x40fa3f10"/>
        <function-ref name="clr" scoped="" ref="0x40fa2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd9228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd9400"/>
        <function-ref name="isInput" scoped="" ref="0x40fd94e0"/>
        <function-ref name="toggle" scoped="" ref="0x40fd95c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd96a0"/>
        <function-ref name="get" scoped="" ref="0x40fd9780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd9860"/>
        <function-ref name="set" scoped="" ref="0x40fd9940"/>
        <function-ref name="clr" scoped="" ref="0x40fd9a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd8c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd8de0"/>
        <function-ref name="isInput" scoped="" ref="0x40fd8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40fd7010"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd70f0"/>
        <function-ref name="get" scoped="" ref="0x40fd71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd72b0"/>
        <function-ref name="set" scoped="" ref="0x40fd7390"/>
        <function-ref name="clr" scoped="" ref="0x40fd7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd66c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd6898"/>
        <function-ref name="isInput" scoped="" ref="0x40fd6978"/>
        <function-ref name="toggle" scoped="" ref="0x40fd6a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd6b38"/>
        <function-ref name="get" scoped="" ref="0x40fd6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd6cf8"/>
        <function-ref name="set" scoped="" ref="0x40fd6dd8"/>
        <function-ref name="clr" scoped="" ref="0x40fd6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd40b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd4288"/>
        <function-ref name="isInput" scoped="" ref="0x40fd4368"/>
        <function-ref name="toggle" scoped="" ref="0x40fd4448"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd4528"/>
        <function-ref name="get" scoped="" ref="0x40fd4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd46e8"/>
        <function-ref name="set" scoped="" ref="0x40fd47c8"/>
        <function-ref name="clr" scoped="" ref="0x40fd48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd3a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd3c60"/>
        <function-ref name="isInput" scoped="" ref="0x40fd3d40"/>
        <function-ref name="toggle" scoped="" ref="0x40fd3e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd3f00"/>
        <function-ref name="get" scoped="" ref="0x40fd2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd20f0"/>
        <function-ref name="set" scoped="" ref="0x40fd21d0"/>
        <function-ref name="clr" scoped="" ref="0x40fd22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4068e410" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4068e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068e5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4068e6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4068e7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4068e888"/>
        <function-ref name="get" scoped="" ref="0x4068e968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068ea48"/>
        <function-ref name="set" scoped="" ref="0x4068eb28"/>
        <function-ref name="clr" scoped="" ref="0x4068ec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4068c170" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4068c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068c348"/>
        <function-ref name="isInput" scoped="" ref="0x4068c428"/>
        <function-ref name="toggle" scoped="" ref="0x4068c508"/>
        <function-ref name="isOutput" scoped="" ref="0x4068c5e8"/>
        <function-ref name="get" scoped="" ref="0x4068c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068c7a8"/>
        <function-ref name="set" scoped="" ref="0x4068c888"/>
        <function-ref name="clr" scoped="" ref="0x4068c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4068f128" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4068f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068f300"/>
        <function-ref name="isInput" scoped="" ref="0x4068f3e0"/>
        <function-ref name="toggle" scoped="" ref="0x4068f4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4068f5a0"/>
        <function-ref name="get" scoped="" ref="0x4068f680"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068f760"/>
        <function-ref name="set" scoped="" ref="0x4068f840"/>
        <function-ref name="clr" scoped="" ref="0x4068f920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4068ed68" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4068ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068d010"/>
        <function-ref name="isInput" scoped="" ref="0x4068d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4068d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4068d2b0"/>
        <function-ref name="get" scoped="" ref="0x4068d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068d470"/>
        <function-ref name="set" scoped="" ref="0x4068d550"/>
        <function-ref name="clr" scoped="" ref="0x4068d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4068cac8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4068cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068cca0"/>
        <function-ref name="isInput" scoped="" ref="0x4068cd80"/>
        <function-ref name="toggle" scoped="" ref="0x4068ce60"/>
        <function-ref name="isOutput" scoped="" ref="0x4068b010"/>
        <function-ref name="get" scoped="" ref="0x4068b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068b1d0"/>
        <function-ref name="set" scoped="" ref="0x4068b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4068b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4068fa80" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4068fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068fc58"/>
        <function-ref name="isInput" scoped="" ref="0x4068fd38"/>
        <function-ref name="toggle" scoped="" ref="0x4068fe18"/>
        <function-ref name="isOutput" scoped="" ref="0x4068fef8"/>
        <function-ref name="get" scoped="" ref="0x4068e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068e0f0"/>
        <function-ref name="set" scoped="" ref="0x4068e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4068e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4068d790" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4068d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068d968"/>
        <function-ref name="isInput" scoped="" ref="0x4068da48"/>
        <function-ref name="toggle" scoped="" ref="0x4068db28"/>
        <function-ref name="isOutput" scoped="" ref="0x4068dc08"/>
        <function-ref name="get" scoped="" ref="0x4068dce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068ddc8"/>
        <function-ref name="set" scoped="" ref="0x4068dea8"/>
        <function-ref name="clr" scoped="" ref="0x4068c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4068b4f0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4068b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4068b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4068b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4068b968"/>
        <function-ref name="get" scoped="" ref="0x4068ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068bb28"/>
        <function-ref name="set" scoped="" ref="0x4068bc08"/>
        <function-ref name="clr" scoped="" ref="0x4068bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fe2de8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fe2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fde010"/>
        <function-ref name="isInput" scoped="" ref="0x40fde0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fde1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fde2b0"/>
        <function-ref name="get" scoped="" ref="0x40fde390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fde470"/>
        <function-ref name="set" scoped="" ref="0x40fde550"/>
        <function-ref name="clr" scoped="" ref="0x40fde630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fdd7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fdd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fdd9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40fddab0"/>
        <function-ref name="toggle" scoped="" ref="0x40fddb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40fddc70"/>
        <function-ref name="get" scoped="" ref="0x40fddd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fdde30"/>
        <function-ref name="set" scoped="" ref="0x40fddf10"/>
        <function-ref name="clr" scoped="" ref="0x40fdc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fdb228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fdb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fdb400"/>
        <function-ref name="isInput" scoped="" ref="0x40fdb4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40fdb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fdb6a0"/>
        <function-ref name="get" scoped="" ref="0x40fdb780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fdb860"/>
        <function-ref name="set" scoped="" ref="0x40fdb940"/>
        <function-ref name="clr" scoped="" ref="0x40fdba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fdac08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fdac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fdade0"/>
        <function-ref name="isInput" scoped="" ref="0x40fdaec0"/>
        <function-ref name="toggle" scoped="" ref="0x41010010"/>
        <function-ref name="isOutput" scoped="" ref="0x410100f0"/>
        <function-ref name="get" scoped="" ref="0x410101d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410102b0"/>
        <function-ref name="set" scoped="" ref="0x41010390"/>
        <function-ref name="clr" scoped="" ref="0x41010470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100f6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100f898"/>
        <function-ref name="isInput" scoped="" ref="0x4100f978"/>
        <function-ref name="toggle" scoped="" ref="0x4100fa58"/>
        <function-ref name="isOutput" scoped="" ref="0x4100fb38"/>
        <function-ref name="get" scoped="" ref="0x4100fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100fcf8"/>
        <function-ref name="set" scoped="" ref="0x4100fdd8"/>
        <function-ref name="clr" scoped="" ref="0x4100feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100d0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100d288"/>
        <function-ref name="isInput" scoped="" ref="0x4100d368"/>
        <function-ref name="toggle" scoped="" ref="0x4100d448"/>
        <function-ref name="isOutput" scoped="" ref="0x4100d528"/>
        <function-ref name="get" scoped="" ref="0x4100d608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100d6e8"/>
        <function-ref name="set" scoped="" ref="0x4100d7c8"/>
        <function-ref name="clr" scoped="" ref="0x4100d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100ca88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100cc60"/>
        <function-ref name="isInput" scoped="" ref="0x4100cd40"/>
        <function-ref name="toggle" scoped="" ref="0x4100ce20"/>
        <function-ref name="isOutput" scoped="" ref="0x4100cf00"/>
        <function-ref name="get" scoped="" ref="0x4100b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100b0f0"/>
        <function-ref name="set" scoped="" ref="0x4100b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4100b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100a538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100a710"/>
        <function-ref name="isInput" scoped="" ref="0x4100a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4100a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4100a9b0"/>
        <function-ref name="get" scoped="" ref="0x4100aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100ab70"/>
        <function-ref name="set" scoped="" ref="0x4100ac50"/>
        <function-ref name="clr" scoped="" ref="0x4100ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4069a6f8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4069a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069a8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4069a9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4069aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x4069ab70"/>
        <function-ref name="get" scoped="" ref="0x4069ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069ad30"/>
        <function-ref name="set" scoped="" ref="0x4069ae10"/>
        <function-ref name="clr" scoped="" ref="0x4069aef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406a0e98" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406a0e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4069f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4069f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4069f360"/>
        <function-ref name="get" scoped="" ref="0x4069f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069f520"/>
        <function-ref name="set" scoped="" ref="0x4069f600"/>
        <function-ref name="clr" scoped="" ref="0x4069f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4069d6c0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4069d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069d898"/>
        <function-ref name="isInput" scoped="" ref="0x4069d978"/>
        <function-ref name="toggle" scoped="" ref="0x4069da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4069db38"/>
        <function-ref name="get" scoped="" ref="0x4069dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069dcf8"/>
        <function-ref name="set" scoped="" ref="0x4069ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4069deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406afe98" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406afe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ae0c0"/>
        <function-ref name="isInput" scoped="" ref="0x406ae1a0"/>
        <function-ref name="toggle" scoped="" ref="0x406ae280"/>
        <function-ref name="isOutput" scoped="" ref="0x406ae360"/>
        <function-ref name="get" scoped="" ref="0x406ae440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ae520"/>
        <function-ref name="set" scoped="" ref="0x406ae600"/>
        <function-ref name="clr" scoped="" ref="0x406ae6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406ab6c0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406ab6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ab898"/>
        <function-ref name="isInput" scoped="" ref="0x406ab978"/>
        <function-ref name="toggle" scoped="" ref="0x406aba58"/>
        <function-ref name="isOutput" scoped="" ref="0x406abb38"/>
        <function-ref name="get" scoped="" ref="0x406abc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x406abcf8"/>
        <function-ref name="set" scoped="" ref="0x406abdd8"/>
        <function-ref name="clr" scoped="" ref="0x406abeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406a9e98" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406a9e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a80c0"/>
        <function-ref name="isInput" scoped="" ref="0x406a81a0"/>
        <function-ref name="toggle" scoped="" ref="0x406a8280"/>
        <function-ref name="isOutput" scoped="" ref="0x406a8360"/>
        <function-ref name="get" scoped="" ref="0x406a8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a8520"/>
        <function-ref name="set" scoped="" ref="0x406a8600"/>
        <function-ref name="clr" scoped="" ref="0x406a86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b9728" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406b9728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b9900"/>
        <function-ref name="isInput" scoped="" ref="0x406b99e0"/>
        <function-ref name="toggle" scoped="" ref="0x406b9ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x406b9ba0"/>
        <function-ref name="get" scoped="" ref="0x406b9c80"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b9d60"/>
        <function-ref name="set" scoped="" ref="0x406b9e40"/>
        <function-ref name="clr" scoped="" ref="0x406b9f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b7ec0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406b7ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b60c0"/>
        <function-ref name="isInput" scoped="" ref="0x406b61a0"/>
        <function-ref name="toggle" scoped="" ref="0x406b6280"/>
        <function-ref name="isOutput" scoped="" ref="0x406b6360"/>
        <function-ref name="get" scoped="" ref="0x406b6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b6520"/>
        <function-ref name="set" scoped="" ref="0x406b6600"/>
        <function-ref name="clr" scoped="" ref="0x406b66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b46c0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406b46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b4898"/>
        <function-ref name="isInput" scoped="" ref="0x406b4978"/>
        <function-ref name="toggle" scoped="" ref="0x406b4a58"/>
        <function-ref name="isOutput" scoped="" ref="0x406b4b38"/>
        <function-ref name="get" scoped="" ref="0x406b4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b4cf8"/>
        <function-ref name="set" scoped="" ref="0x406b4dd8"/>
        <function-ref name="clr" scoped="" ref="0x406b4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b1e98" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406b1e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c40c0"/>
        <function-ref name="isInput" scoped="" ref="0x406c41a0"/>
        <function-ref name="toggle" scoped="" ref="0x406c4280"/>
        <function-ref name="isOutput" scoped="" ref="0x406c4360"/>
        <function-ref name="get" scoped="" ref="0x406c4440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c4520"/>
        <function-ref name="set" scoped="" ref="0x406c4600"/>
        <function-ref name="clr" scoped="" ref="0x406c46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c26c0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406c26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c2898"/>
        <function-ref name="isInput" scoped="" ref="0x406c2978"/>
        <function-ref name="toggle" scoped="" ref="0x406c2a58"/>
        <function-ref name="isOutput" scoped="" ref="0x406c2b38"/>
        <function-ref name="get" scoped="" ref="0x406c2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c2cf8"/>
        <function-ref name="set" scoped="" ref="0x406c2dd8"/>
        <function-ref name="clr" scoped="" ref="0x406c2eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c0e98" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406c0e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406be0c0"/>
        <function-ref name="isInput" scoped="" ref="0x406be1a0"/>
        <function-ref name="toggle" scoped="" ref="0x406be280"/>
        <function-ref name="isOutput" scoped="" ref="0x406be360"/>
        <function-ref name="get" scoped="" ref="0x406be440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406be520"/>
        <function-ref name="set" scoped="" ref="0x406be600"/>
        <function-ref name="clr" scoped="" ref="0x406be6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406bc6c0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406bc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406bc898"/>
        <function-ref name="isInput" scoped="" ref="0x406bc978"/>
        <function-ref name="toggle" scoped="" ref="0x406bca58"/>
        <function-ref name="isOutput" scoped="" ref="0x406bcb38"/>
        <function-ref name="get" scoped="" ref="0x406bcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x406bccf8"/>
        <function-ref name="set" scoped="" ref="0x406bcdd8"/>
        <function-ref name="clr" scoped="" ref="0x406bceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406e34d0" loc="50:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406e34d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034b7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034b7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406e36a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x406e3880" loc="51:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x406e3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x406e3a58"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406e3b38"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x406e3c18"/>
        <function-ref name="actualMicro" scoped="" ref="0x406e3cf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406e3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e7e88" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e7e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e9070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40349c28" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40349c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40349e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403e28f8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403e28f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403e2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x406f8bf0" loc="47:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x406f8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406f8dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x406f87e8" loc="46:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x406f87e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x406f89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x406f3648" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x406f3648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406f3820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x406f7870" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x406f7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x406f7a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x406f3240" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x406f3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406f3418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x406f7c08" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x406f7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406f7de0"/>
        <function-ref name="taskLoop" scoped="" ref="0x406f7ec0"/>
        <function-ref name="runNextTask" scoped="" ref="0x406f3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40354600" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40354600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403547d8"/>
        <function-ref name="runTask" scoped="" ref="0x403548b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4034eed8" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4034eed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4034a0c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x4034a1a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x4034a280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403d3670" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403d3848"/>
        <function-ref name="runTask" scoped="" ref="0x403d3928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d8310" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d84e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403d4df8" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403d4df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d3010"/>
        <function-ref name="taskLoop" scoped="" ref="0x403d30f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403d31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405876c0" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405876c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40587e10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40704320"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407040a8"/>
        <function-ref name="overflow" scoped="" ref="0x40704598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40701128" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40701128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TThree" ref="0x403ce518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40701878"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40701d68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40701af0"/>
        <function-ref name="overflow" scoped="" ref="0x40700010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4071cee8" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4071cee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x4070b0e0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4070b1c0"/>
        <function-ref name="getControlA" scoped="" ref="0x4070b2a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4070b380"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4070b460"/>
        <function-ref name="setControlB" scoped="" ref="0x4070b540"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4070b620"/>
        <function-ref name="getControlB" scoped="" ref="0x4070b700"/>
        <function-ref name="setControlC" scoped="" ref="0x4070b7e0"/>
        <function-ref name="setControlA" scoped="" ref="0x4070b8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40717d40" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40717d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4071b7d0"/>
        <function-ref name="test" scoped="" ref="0x4071b2e0"/>
        <function-ref name="get" scoped="" ref="0x4070a3a0"/>
        <function-ref name="captured" scoped="" ref="0x4070a8b8"/>
        <function-ref name="reset" scoped="" ref="0x4070ab58"/>
        <function-ref name="isOn" scoped="" ref="0x4071b558"/>
        <function-ref name="set" scoped="" ref="0x4070a618"/>
        <function-ref name="start" scoped="" ref="0x4070add0"/>
        <function-ref name="stop" scoped="" ref="0x4071b068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40727828" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40727828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40716d90"/>
        <function-ref name="fired" scoped="" ref="0x407163b0"/>
        <function-ref name="get" scoped="" ref="0x40727e70"/>
        <function-ref name="reset" scoped="" ref="0x40716628"/>
        <function-ref name="isOn" scoped="" ref="0x40726048"/>
        <function-ref name="set" scoped="" ref="0x40716110"/>
        <function-ref name="start" scoped="" ref="0x407168a0"/>
        <function-ref name="stop" scoped="" ref="0x40716b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4070d540" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4070d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4070c010"/>
        <function-ref name="test" scoped="" ref="0x40712a98"/>
        <function-ref name="get" scoped="" ref="0x4070db88"/>
        <function-ref name="setScale" scoped="" ref="0x4070c288"/>
        <function-ref name="getScale" scoped="" ref="0x4070c528"/>
        <function-ref name="reset" scoped="" ref="0x40712330"/>
        <function-ref name="overflow" scoped="" ref="0x407120b8"/>
        <function-ref name="isOn" scoped="" ref="0x40712d10"/>
        <function-ref name="set" scoped="" ref="0x4070de00"/>
        <function-ref name="start" scoped="" ref="0x407125a8"/>
        <function-ref name="stop" scoped="" ref="0x40712820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40720010" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40720010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x407201e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407202c8"/>
        <function-ref name="getControlA" scoped="" ref="0x407203a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40720488"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40720568"/>
        <function-ref name="setControlB" scoped="" ref="0x40720648"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40720728"/>
        <function-ref name="getControlB" scoped="" ref="0x40720808"/>
        <function-ref name="setControlC" scoped="" ref="0x407208e8"/>
        <function-ref name="setControlA" scoped="" ref="0x407209c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40734bf0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40734bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407311a0"/>
        <function-ref name="fired" scoped="" ref="0x40733790"/>
        <function-ref name="get" scoped="" ref="0x40733278"/>
        <function-ref name="reset" scoped="" ref="0x40733a08"/>
        <function-ref name="isOn" scoped="" ref="0x40731418"/>
        <function-ref name="set" scoped="" ref="0x407334f0"/>
        <function-ref name="start" scoped="" ref="0x40733c80"/>
        <function-ref name="stop" scoped="" ref="0x40733ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40720d00" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40720d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x407347b0"/>
        <function-ref name="test" scoped="" ref="0x407342c0"/>
        <function-ref name="get" scoped="" ref="0x40735370"/>
        <function-ref name="captured" scoped="" ref="0x40735888"/>
        <function-ref name="reset" scoped="" ref="0x40735b28"/>
        <function-ref name="isOn" scoped="" ref="0x40734538"/>
        <function-ref name="set" scoped="" ref="0x407355e8"/>
        <function-ref name="start" scoped="" ref="0x40735da0"/>
        <function-ref name="stop" scoped="" ref="0x40734048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40731830" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40731830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40730d90"/>
        <function-ref name="fired" scoped="" ref="0x407303b0"/>
        <function-ref name="get" scoped="" ref="0x40731e78"/>
        <function-ref name="reset" scoped="" ref="0x40730628"/>
        <function-ref name="isOn" scoped="" ref="0x4072f048"/>
        <function-ref name="set" scoped="" ref="0x40730110"/>
        <function-ref name="start" scoped="" ref="0x407308a0"/>
        <function-ref name="stop" scoped="" ref="0x40730b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4072f460" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4072f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4072e9f0"/>
        <function-ref name="fired" scoped="" ref="0x4072e010"/>
        <function-ref name="get" scoped="" ref="0x4072faa8"/>
        <function-ref name="reset" scoped="" ref="0x4072e288"/>
        <function-ref name="isOn" scoped="" ref="0x4072ec68"/>
        <function-ref name="set" scoped="" ref="0x4072fd20"/>
        <function-ref name="start" scoped="" ref="0x4072e500"/>
        <function-ref name="stop" scoped="" ref="0x4072e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40726ce0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40726ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40722778"/>
        <function-ref name="test" scoped="" ref="0x40722288"/>
        <function-ref name="get" scoped="" ref="0x40723370"/>
        <function-ref name="setScale" scoped="" ref="0x407229f0"/>
        <function-ref name="getScale" scoped="" ref="0x40722c90"/>
        <function-ref name="reset" scoped="" ref="0x40723b00"/>
        <function-ref name="overflow" scoped="" ref="0x40723888"/>
        <function-ref name="isOn" scoped="" ref="0x40722500"/>
        <function-ref name="set" scoped="" ref="0x407235e8"/>
        <function-ref name="start" scoped="" ref="0x40723d78"/>
        <function-ref name="stop" scoped="" ref="0x40722010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4076ea40" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4076ea40"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034b5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034b5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4076ec18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4076ee28" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4076ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4077c898"/>
        <function-ref name="test" scoped="" ref="0x4077c3a8"/>
        <function-ref name="get" scoped="" ref="0x4077d488"/>
        <function-ref name="setScale" scoped="" ref="0x4077cb10"/>
        <function-ref name="getScale" scoped="" ref="0x4077cdb0"/>
        <function-ref name="reset" scoped="" ref="0x4077dc18"/>
        <function-ref name="overflow" scoped="" ref="0x4077d9a0"/>
        <function-ref name="isOn" scoped="" ref="0x4077c620"/>
        <function-ref name="set" scoped="" ref="0x4077d700"/>
        <function-ref name="start" scoped="" ref="0x4077de90"/>
        <function-ref name="stop" scoped="" ref="0x4077c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40770618" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40770618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TThree" ref="0x403ce518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40770d68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40788288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40788010"/>
        <function-ref name="overflow" scoped="" ref="0x40788500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407887e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407887e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40786288"/>
        <function-ref name="test" scoped="" ref="0x40787d38"/>
        <function-ref name="get" scoped="" ref="0x40788e28"/>
        <function-ref name="setScale" scoped="" ref="0x40786500"/>
        <function-ref name="getScale" scoped="" ref="0x407867a0"/>
        <function-ref name="reset" scoped="" ref="0x407875d0"/>
        <function-ref name="overflow" scoped="" ref="0x40787358"/>
        <function-ref name="isOn" scoped="" ref="0x40786010"/>
        <function-ref name="set" scoped="" ref="0x407870b8"/>
        <function-ref name="start" scoped="" ref="0x40787848"/>
        <function-ref name="stop" scoped="" ref="0x40787ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4079acd8" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4079acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TThree" ref="0x403ce518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a2478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a2968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a26f0"/>
        <function-ref name="overflow" scoped="" ref="0x407a2be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407029f0" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407029f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4079a200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4079a6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4079a478"/>
        <function-ref name="overflow" scoped="" ref="0x4079a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x4079f728" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x4079f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4079f900"/>
        <function-ref name="offset" scoped="" ref="0x4079f9e0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4079fac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407acbb8" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407acbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407acd90"/>
        <function-ref name="getPayload" scoped="" ref="0x407ace70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407ab010"/>
        <function-ref name="cancel" scoped="" ref="0x407ab0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x407ab1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407ab310" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407ab310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407ab4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x407ab5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x407ab6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407ab788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407ab868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407ab9a8" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407ab9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407abb80"/>
        <function-ref name="source" scoped="" ref="0x407abc60"/>
        <function-ref name="address" scoped="" ref="0x407abd40"/>
        <function-ref name="destination" scoped="" ref="0x407abe20"/>
        <function-ref name="setSource" scoped="" ref="0x407abf00"/>
        <function-ref name="setDestination" scoped="" ref="0x40e34010"/>
        <function-ref name="type" scoped="" ref="0x40e340f0"/>
        <function-ref name="setType" scoped="" ref="0x40e341d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40e342b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40e34390"/>
        <function-ref name="localGroup" scoped="" ref="0x40e34470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40e345d0" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40e345d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e347a8"/>
        <function-ref name="noAck" scoped="" ref="0x40e34888"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e34968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4107c0d8" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4107c0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4107c2b0"/>
        <function-ref name="getPayload" scoped="" ref="0x4107c390"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4107c470"/>
        <function-ref name="cancel" scoped="" ref="0x4107c550"/>
        <function-ref name="sendDone" scoped="" ref="0x4107c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4107c770" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4107c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4107c948"/>
        <function-ref name="payloadLength" scoped="" ref="0x4107ca28"/>
        <function-ref name="getPayload" scoped="" ref="0x4107cb08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4107cbe8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4107ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4107ce08" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4107ce08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4107b010"/>
        <function-ref name="source" scoped="" ref="0x4107b0f0"/>
        <function-ref name="address" scoped="" ref="0x4107b1d0"/>
        <function-ref name="destination" scoped="" ref="0x4107b2b0"/>
        <function-ref name="setSource" scoped="" ref="0x4107b390"/>
        <function-ref name="setDestination" scoped="" ref="0x4107b470"/>
        <function-ref name="type" scoped="" ref="0x4107b550"/>
        <function-ref name="setType" scoped="" ref="0x4107b630"/>
        <function-ref name="isForMe" scoped="" ref="0x4107b710"/>
        <function-ref name="setGroup" scoped="" ref="0x4107b7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4107b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4107ba30" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4107ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4107bc08"/>
        <function-ref name="noAck" scoped="" ref="0x4107bce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4107bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41078b50" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41078b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41078d28"/>
        <function-ref name="getPayload" scoped="" ref="0x41078e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41078ee8"/>
        <function-ref name="cancel" scoped="" ref="0x41075010"/>
        <function-ref name="sendDone" scoped="" ref="0x410750f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41075260" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41075260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41075438"/>
        <function-ref name="getPayload" scoped="" ref="0x41075518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410755f8"/>
        <function-ref name="cancel" scoped="" ref="0x410756d8"/>
        <function-ref name="sendDone" scoped="" ref="0x410757b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410758f8" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410758f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41075ad0"/>
        <function-ref name="source" scoped="" ref="0x41075bb0"/>
        <function-ref name="address" scoped="" ref="0x41075c90"/>
        <function-ref name="destination" scoped="" ref="0x41075d70"/>
        <function-ref name="setSource" scoped="" ref="0x41075e50"/>
        <function-ref name="setDestination" scoped="" ref="0x41074010"/>
        <function-ref name="type" scoped="" ref="0x410740f0"/>
        <function-ref name="setType" scoped="" ref="0x410741d0"/>
        <function-ref name="isForMe" scoped="" ref="0x410742b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41074390"/>
        <function-ref name="localGroup" scoped="" ref="0x41074470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407c4220" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407c4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c43f8"/>
        <function-ref name="getPayload" scoped="" ref="0x407c44d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407c45b8"/>
        <function-ref name="cancel" scoped="" ref="0x407c4698"/>
        <function-ref name="sendDone" scoped="" ref="0x407c4778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x407fbab8" loc="40:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407fbab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407fbca0"/>
        <function-ref name="getPayload" scoped="" ref="0x407fbd80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407fbe60"/>
        <function-ref name="cancel" scoped="" ref="0x407f9010"/>
        <function-ref name="sendDone" scoped="" ref="0x407f90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407fb348" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407fb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407fb530"/>
        <function-ref name="getPayload" scoped="" ref="0x407fb610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407fb6f0"/>
        <function-ref name="cancel" scoped="" ref="0x407fb7d0"/>
        <function-ref name="sendDone" scoped="" ref="0x407fb8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x407f9e08" loc="42:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407f9e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f8010"/>
        <function-ref name="payloadLength" scoped="" ref="0x407f80f0"/>
        <function-ref name="getPayload" scoped="" ref="0x407f81d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407f82b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407f8390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x407f8510" loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x407f8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407f86e8"/>
        <function-ref name="runTask" scoped="" ref="0x407f87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x407f8948" loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x407f8948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407f8b20"/>
        <function-ref name="runTask" scoped="" ref="0x407f8c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x407f9230" loc="41:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407f9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407f9408"/>
        <function-ref name="source" scoped="" ref="0x407f94e8"/>
        <function-ref name="address" scoped="" ref="0x407f95c8"/>
        <function-ref name="destination" scoped="" ref="0x407f96a8"/>
        <function-ref name="setSource" scoped="" ref="0x407f9788"/>
        <function-ref name="setDestination" scoped="" ref="0x407f9868"/>
        <function-ref name="type" scoped="" ref="0x407f9948"/>
        <function-ref name="setType" scoped="" ref="0x407f9a28"/>
        <function-ref name="isForMe" scoped="" ref="0x407f9b08"/>
        <function-ref name="setGroup" scoped="" ref="0x407f9be8"/>
        <function-ref name="localGroup" scoped="" ref="0x407f9cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407f7bd8" loc="30:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407f7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407f7db0"/>
        <function-ref name="stopDone" scoped="" ref="0x407f7e90"/>
        <function-ref name="start" scoped="" ref="0x407f4010"/>
        <function-ref name="stop" scoped="" ref="0x407f40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408131a0" loc="47:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408131a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40813ca0"/>
        <function-ref name="clear" scoped="" ref="0x40812068"/>
        <function-ref name="isValid" scoped="" ref="0x408138f0"/>
        <function-ref name="set" scoped="" ref="0x40812418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x407f0d20" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x407f0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x407f0ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407f4550" loc="32:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407f4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407f4728"/>
        <function-ref name="getPayload" scoped="" ref="0x407f4808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407f48e8"/>
        <function-ref name="cancel" scoped="" ref="0x407f49c8"/>
        <function-ref name="sendDone" scoped="" ref="0x407f4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x407f35c8" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x407f35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407f37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407f20a0" loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407f20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f2278"/>
        <function-ref name="payloadLength" scoped="" ref="0x407f2358"/>
        <function-ref name="getPayload" scoped="" ref="0x407f2438"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407f2518"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407f25f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40802130" loc="41:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40802130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40802308"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408023e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408024c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408025a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407f4f10" loc="33:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407f4f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407f3108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x407f14d0" loc="40:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407f14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407f16a8"/>
        <function-ref name="noAck" scoped="" ref="0x407f1788"/>
        <function-ref name="wasAcked" scoped="" ref="0x407f1868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x407fea40" loc="43:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x407fea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x407fec18"/>
        <function-ref name="setRetries" scoped="" ref="0x407fecf8"/>
        <function-ref name="getRetries" scoped="" ref="0x407fedd8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x407feeb8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40807010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407f2790" loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407f2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407f2968"/>
        <function-ref name="source" scoped="" ref="0x407f2a48"/>
        <function-ref name="address" scoped="" ref="0x407f2b28"/>
        <function-ref name="destination" scoped="" ref="0x407f2c08"/>
        <function-ref name="setSource" scoped="" ref="0x407f2ce8"/>
        <function-ref name="setDestination" scoped="" ref="0x407f2dc8"/>
        <function-ref name="type" scoped="" ref="0x407f2ea8"/>
        <function-ref name="setType" scoped="" ref="0x407f1010"/>
        <function-ref name="isForMe" scoped="" ref="0x407f10f0"/>
        <function-ref name="setGroup" scoped="" ref="0x407f11d0"/>
        <function-ref name="localGroup" scoped="" ref="0x407f12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x408157c0" loc="46:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x408157c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408062d8"/>
        <function-ref name="clear" scoped="" ref="0x40806688"/>
        <function-ref name="isValid" scoped="" ref="0x40815f10"/>
        <function-ref name="set" scoped="" ref="0x40806a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40812e90" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40812e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4080e080"/>
        <function-ref name="stopDone" scoped="" ref="0x4080e160"/>
        <function-ref name="start" scoped="" ref="0x4080e240"/>
        <function-ref name="stop" scoped="" ref="0x4080e320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4081cbd8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4081cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081b7b8"/>
        <function-ref name="get" scoped="" ref="0x4081b4f8"/>
        <function-ref name="isSet" scoped="" ref="0x4081b238"/>
        <function-ref name="set" scoped="" ref="0x4081ba78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4080de68" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4080de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4080c050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4080c1d0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4080c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4080c3a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4080c488"/>
        <function-ref name="getPayload" scoped="" ref="0x4080c568"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4080c648"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4080c728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4080e780" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4080e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4080e958"/>
        <function-ref name="getPayload" scoped="" ref="0x4080ea38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4080eb18"/>
        <function-ref name="cancel" scoped="" ref="0x4080ebf8"/>
        <function-ref name="sendDone" scoped="" ref="0x4080ecd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4080d7f0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4080d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4080d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x408227f0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x408227f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081c450"/>
        <function-ref name="get" scoped="" ref="0x4081c190"/>
        <function-ref name="isSet" scoped="" ref="0x40822eb8"/>
        <function-ref name="set" scoped="" ref="0x4081c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4080bb38" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4080bb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4080bd10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4080bdf0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4080bed0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4080a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4080d158" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4080d158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4080d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40819838" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40819838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408183c0"/>
        <function-ref name="clear" scoped="" ref="0x40818770"/>
        <function-ref name="isValid" scoped="" ref="0x40818010"/>
        <function-ref name="set" scoped="" ref="0x40818b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40817c58" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40817c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408192e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4081d3e0" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4081d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40822010"/>
        <function-ref name="get" scoped="" ref="0x4081dce8"/>
        <function-ref name="isSet" scoped="" ref="0x4081da28"/>
        <function-ref name="set" scoped="" ref="0x408222d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4080b5b0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4080b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4080b788"/>
        <function-ref name="noAck" scoped="" ref="0x4080b868"/>
        <function-ref name="wasAcked" scoped="" ref="0x4080b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4080a1b8" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4080a1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4080a390"/>
        <function-ref name="setRetries" scoped="" ref="0x4080a470"/>
        <function-ref name="getRetries" scoped="" ref="0x4080a550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4080a630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4080a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4080c8c0" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4080c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4080ca98"/>
        <function-ref name="source" scoped="" ref="0x4080cb78"/>
        <function-ref name="address" scoped="" ref="0x4080cc58"/>
        <function-ref name="destination" scoped="" ref="0x4080cd38"/>
        <function-ref name="setSource" scoped="" ref="0x4080ce18"/>
        <function-ref name="setDestination" scoped="" ref="0x4080cef8"/>
        <function-ref name="type" scoped="" ref="0x4080b010"/>
        <function-ref name="setType" scoped="" ref="0x4080b0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x4080b1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x4080b2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x4080b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40821bb8" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40821bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40821d90"/>
        <function-ref name="setChannel" scoped="" ref="0x40821e70"/>
        <function-ref name="getChannel" scoped="" ref="0x40809010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40816288" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40816288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40816d88"/>
        <function-ref name="clear" scoped="" ref="0x4082e150"/>
        <function-ref name="isValid" scoped="" ref="0x408169d8"/>
        <function-ref name="set" scoped="" ref="0x4082e500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4082ee58" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4082ee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4082b050"/>
        <function-ref name="stopDone" scoped="" ref="0x4082b130"/>
        <function-ref name="start" scoped="" ref="0x4082b210"/>
        <function-ref name="stop" scoped="" ref="0x4082b2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40847a58" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40847a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40846638"/>
        <function-ref name="get" scoped="" ref="0x40846378"/>
        <function-ref name="isSet" scoped="" ref="0x408460b8"/>
        <function-ref name="set" scoped="" ref="0x408468f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x4083bc78" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x4083bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4083be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x40836418" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x40836418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408365f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408366d0"/>
        <function-ref name="request" scoped="" ref="0x408367b0"/>
        <function-ref name="granted" scoped="" ref="0x40836890"/>
        <function-ref name="isOwner" scoped="" ref="0x40836970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4082ae30" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4082ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40829050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4082b750" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4082b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4082b928"/>
        <function-ref name="getPayload" scoped="" ref="0x4082ba08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4082bae8"/>
        <function-ref name="cancel" scoped="" ref="0x4082bbc8"/>
        <function-ref name="sendDone" scoped="" ref="0x4082bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4082a7b8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4082a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4082a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x408314a8" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x408314a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40831680"/>
        <function-ref name="address" scoped="" ref="0x40831760"/>
        <function-ref name="destination" scoped="" ref="0x40831840"/>
        <function-ref name="setSource" scoped="" ref="0x40831920"/>
        <function-ref name="setDestination" scoped="" ref="0x40831a00"/>
        <function-ref name="pan" scoped="" ref="0x40831ae0"/>
        <function-ref name="setPan" scoped="" ref="0x40831bc0"/>
        <function-ref name="isForMe" scoped="" ref="0x40831ca0"/>
        <function-ref name="localPan" scoped="" ref="0x40831d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40826030" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40826030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40826288"/>
        <function-ref name="payloadLength" scoped="" ref="0x40826368"/>
        <function-ref name="getPayload" scoped="" ref="0x40826448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40826528"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40826608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40826db0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40826db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40839010"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408390f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408391d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40848638" loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40848638"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408472d0"/>
        <function-ref name="get" scoped="" ref="0x40847010"/>
        <function-ref name="isSet" scoped="" ref="0x40848c80"/>
        <function-ref name="set" scoped="" ref="0x40847590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4082a120" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4082a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4082a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40829f00" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40829f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408280f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x408281d0"/>
        <function-ref name="getPayload" scoped="" ref="0x408282b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40828390"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40828470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x408449b8" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x408449b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408434d0"/>
        <function-ref name="clear" scoped="" ref="0x40843880"/>
        <function-ref name="isValid" scoped="" ref="0x40843120"/>
        <function-ref name="set" scoped="" ref="0x40843c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40846dd0" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40846dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40844468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40830278" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40830278"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40830e40"/>
        <function-ref name="get" scoped="" ref="0x40830b80"/>
        <function-ref name="isSet" scoped="" ref="0x408308c0"/>
        <function-ref name="set" scoped="" ref="0x40848118"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40826828" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40826828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40826a00"/>
        <function-ref name="noAck" scoped="" ref="0x40826ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40826bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4083b098" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4083b098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4083b270"/>
        <function-ref name="getPayload" scoped="" ref="0x4083b350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4083b430"/>
        <function-ref name="cancel" scoped="" ref="0x4083b510"/>
        <function-ref name="sendDone" scoped="" ref="0x4083b5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40839458" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40839458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40839630"/>
        <function-ref name="setRetries" scoped="" ref="0x40839710"/>
        <function-ref name="getRetries" scoped="" ref="0x408397f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408398d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408399b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408291e8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408291e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408293c0"/>
        <function-ref name="source" scoped="" ref="0x408294a0"/>
        <function-ref name="address" scoped="" ref="0x40829580"/>
        <function-ref name="destination" scoped="" ref="0x40829660"/>
        <function-ref name="setSource" scoped="" ref="0x40829740"/>
        <function-ref name="setDestination" scoped="" ref="0x40829820"/>
        <function-ref name="type" scoped="" ref="0x40829900"/>
        <function-ref name="setType" scoped="" ref="0x408299e0"/>
        <function-ref name="isForMe" scoped="" ref="0x40829ac0"/>
        <function-ref name="setGroup" scoped="" ref="0x40829ba0"/>
        <function-ref name="localGroup" scoped="" ref="0x40829c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4083b828" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4083b828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40839b70" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40839b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40839d48"/>
        <function-ref name="setChannel" scoped="" ref="0x40839e28"/>
        <function-ref name="getChannel" scoped="" ref="0x40839f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408413a0" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408413a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40841ea0"/>
        <function-ref name="clear" scoped="" ref="0x40840280"/>
        <function-ref name="isValid" scoped="" ref="0x40841af0"/>
        <function-ref name="set" scoped="" ref="0x40840630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40863d98" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40863d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4085b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x4085f278" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4085f278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x4085fa70"/>
        <function-ref name="channelError" scoped="" ref="0x4085f530"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x4085f610"/>
        <function-ref name="getChannelTime" scoped="" ref="0x4085f6f0"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x4085f7d0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x4085f8b0"/>
        <function-ref name="getSender" scoped="" ref="0x4085f990"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x4085f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x4086fe20" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4086fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40863010"/>
        <function-ref name="checkFrame" scoped="" ref="0x408630f0"/>
        <function-ref name="source" scoped="" ref="0x408631d0"/>
        <function-ref name="destination" scoped="" ref="0x408632b0"/>
        <function-ref name="setSource" scoped="" ref="0x40863390"/>
        <function-ref name="setDestination" scoped="" ref="0x40863470"/>
        <function-ref name="setGroup" scoped="" ref="0x40863550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40859418" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40859418"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x408595f0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x408596d0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x408597b0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40859890"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x40859970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40876f00" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40876f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408790f0"/>
        <function-ref name="wait" scoped="" ref="0x408791d0"/>
        <function-ref name="cancel" scoped="" ref="0x408792b0"/>
        <function-ref name="isFree" scoped="" ref="0x40879390"/>
        <function-ref name="getNow" scoped="" ref="0x40879470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x40871108" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x40871108"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408712e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x408713c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408714a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40871580"/>
        <function-ref name="headerLength" scoped="" ref="0x40871660"/>
        <function-ref name="metadataLength" scoped="" ref="0x40871740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40871ad0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40871ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408786b8"/>
        <function-ref name="clear" scoped="" ref="0x40878a68"/>
        <function-ref name="isValid" scoped="" ref="0x40878308"/>
        <function-ref name="set" scoped="" ref="0x40878e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x40852210" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x40852210"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408523e8"/>
        <function-ref name="headerLength" scoped="" ref="0x408524c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408525a8"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40852688"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40852768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40855de0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40855de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x4084c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x4084d6e0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4084d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x4084d8b8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4084d998"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4084da78"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4084db58"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4084dc38"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4084dd18"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4084ddf8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4084ded8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4087a900" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4087a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4087aad8"/>
        <function-ref name="getFramePending" scoped="" ref="0x4086ee90"/>
        <function-ref name="setFCF" scoped="" ref="0x4087ac98"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4087ad78"/>
        <function-ref name="getDSN" scoped="" ref="0x4087ae58"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4086e010"/>
        <function-ref name="setDSN" scoped="" ref="0x4086e0f0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4086e1d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4086e2b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4086e390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4086e470"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4086e550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4086e630"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4086e790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4086e870"/>
        <function-ref name="setFramePending" scoped="" ref="0x4086e950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4086ea30"/>
        <function-ref name="setDestPan" scoped="" ref="0x4086eb10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4086ebf0"/>
        <function-ref name="getFCF" scoped="" ref="0x4086ecd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4087abb8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4086edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x4084bde0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4084bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40855010"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408550f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x408551d0"/>
        <function-ref name="getSender" scoped="" ref="0x408552b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x4085d990" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4085d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4085db68"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4085dc48"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4085dd28"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4085de08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4083ec00" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4083ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4083edd8"/>
        <function-ref name="wait" scoped="" ref="0x4083eeb8"/>
        <function-ref name="cancel" scoped="" ref="0x408a9010"/>
        <function-ref name="isFree" scoped="" ref="0x408a90f0"/>
        <function-ref name="getNow" scoped="" ref="0x408a91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x408bf938" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408bf938"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034b7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034b7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408a8df0"/>
        <function-ref name="fired" scoped="" ref="0x408a85c0"/>
        <function-ref name="startAt" scoped="" ref="0x408a8ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x408a8838"/>
        <function-ref name="getAlarm" scoped="" ref="0x408be088"/>
        <function-ref name="start" scoped="" ref="0x408a80a8"/>
        <function-ref name="stop" scoped="" ref="0x408a8348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x408bead0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408bead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408beca8"/>
        <function-ref name="wait" scoped="" ref="0x408bed88"/>
        <function-ref name="cancel" scoped="" ref="0x408bee68"/>
        <function-ref name="isFree" scoped="" ref="0x408ba010"/>
        <function-ref name="getNow" scoped="" ref="0x408ba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x408ba470" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408ba470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408b9940"/>
        <function-ref name="fired" scoped="" ref="0x408b9110"/>
        <function-ref name="startAt" scoped="" ref="0x408b9600"/>
        <function-ref name="isRunning" scoped="" ref="0x408b9388"/>
        <function-ref name="getAlarm" scoped="" ref="0x408b9bb8"/>
        <function-ref name="start" scoped="" ref="0x408babc0"/>
        <function-ref name="stop" scoped="" ref="0x408bae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x408d0740" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408d0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408d0918"/>
        <function-ref name="suspend" scoped="" ref="0x408d09f8"/>
        <function-ref name="resume" scoped="" ref="0x408d0ad8"/>
        <function-ref name="run" scoped="" ref="0x408d0bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x408bdb18" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408bdb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408bdcf0"/>
        <function-ref name="suspend" scoped="" ref="0x408bddd0"/>
        <function-ref name="resume" scoped="" ref="0x408bdeb0"/>
        <function-ref name="run" scoped="" ref="0x408c7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408d4540" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408d4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d4718"/>
        <function-ref name="cancel" scoped="" ref="0x408d47f8"/>
        <function-ref name="sendDone" scoped="" ref="0x408d48d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408d34d0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408d34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d36a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x408dae10" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x408dae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x408d9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408dccd0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408dccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408dcea8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408db010"/>
        <function-ref name="getPayload" scoped="" ref="0x408db0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408db1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408db2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408db710" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408db710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408db8e8"/>
        <function-ref name="getPayload" scoped="" ref="0x408db9c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408dbaa8"/>
        <function-ref name="cancel" scoped="" ref="0x408dbb88"/>
        <function-ref name="sendDone" scoped="" ref="0x408dbc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408da798" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408da798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408da970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408d9290" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408d9290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d9468"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d9548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d9628"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d9708"/>
        <function-ref name="headerLength" scoped="" ref="0x408d97e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408d98c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408d3908" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408d3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408d3ae0"/>
        <function-ref name="checkFrame" scoped="" ref="0x408d3bc0"/>
        <function-ref name="source" scoped="" ref="0x408d3ca0"/>
        <function-ref name="destination" scoped="" ref="0x408d3d80"/>
        <function-ref name="setSource" scoped="" ref="0x408d3e60"/>
        <function-ref name="setDestination" scoped="" ref="0x408d8010"/>
        <function-ref name="setGroup" scoped="" ref="0x408d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408da100" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408da100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408da2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408dc0b8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408dc0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408dc290"/>
        <function-ref name="source" scoped="" ref="0x408dc370"/>
        <function-ref name="address" scoped="" ref="0x408dc450"/>
        <function-ref name="destination" scoped="" ref="0x408dc530"/>
        <function-ref name="setSource" scoped="" ref="0x408dc610"/>
        <function-ref name="setDestination" scoped="" ref="0x408dc6f0"/>
        <function-ref name="type" scoped="" ref="0x408dc7d0"/>
        <function-ref name="setType" scoped="" ref="0x408dc8b0"/>
        <function-ref name="isForMe" scoped="" ref="0x408dc990"/>
        <function-ref name="setGroup" scoped="" ref="0x408dca70"/>
        <function-ref name="localGroup" scoped="" ref="0x408dcb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408e99d8" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408e99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e9bb0"/>
        <function-ref name="cancel" scoped="" ref="0x408e9c90"/>
        <function-ref name="sendDone" scoped="" ref="0x408e9d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408e8010" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x408ebd20" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x408ebd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x408ebef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408edc28" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408edc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408ede00"/>
        <function-ref name="payloadLength" scoped="" ref="0x408edee0"/>
        <function-ref name="getPayload" scoped="" ref="0x408ec010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ec0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408ec1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408d8828" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408d8828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d8a00"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d8ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d8bc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d8ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x408d8d80"/>
        <function-ref name="metadataLength" scoped="" ref="0x408d8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408ec630" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408ec630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ec808"/>
        <function-ref name="getPayload" scoped="" ref="0x408ec8e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ec9c8"/>
        <function-ref name="cancel" scoped="" ref="0x408ecaa8"/>
        <function-ref name="sendDone" scoped="" ref="0x408ecb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408eb6a8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408eb6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408eb880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408e91a0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408e91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e9378"/>
        <function-ref name="payloadLength" scoped="" ref="0x408e9458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e9538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408e9618"/>
        <function-ref name="headerLength" scoped="" ref="0x408e96f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408e97d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408eb010" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408eb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408e8448" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408e8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408e8620"/>
        <function-ref name="checkFrame" scoped="" ref="0x408e8700"/>
        <function-ref name="source" scoped="" ref="0x408e87e0"/>
        <function-ref name="destination" scoped="" ref="0x408e88c0"/>
        <function-ref name="setSource" scoped="" ref="0x408e89a0"/>
        <function-ref name="setDestination" scoped="" ref="0x408e8a80"/>
        <function-ref name="setGroup" scoped="" ref="0x408e8b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x408e4658" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408e4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x408e4830"/>
        <function-ref name="changed" scoped="" ref="0x408e4910"/>
        <function-ref name="amGroup" scoped="" ref="0x408e49f0"/>
        <function-ref name="setAddress" scoped="" ref="0x408e4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408ed010" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408ed1e8"/>
        <function-ref name="source" scoped="" ref="0x408ed2c8"/>
        <function-ref name="address" scoped="" ref="0x408ed3a8"/>
        <function-ref name="destination" scoped="" ref="0x408ed488"/>
        <function-ref name="setSource" scoped="" ref="0x408ed568"/>
        <function-ref name="setDestination" scoped="" ref="0x408ed648"/>
        <function-ref name="type" scoped="" ref="0x408ed728"/>
        <function-ref name="setType" scoped="" ref="0x408ed808"/>
        <function-ref name="isForMe" scoped="" ref="0x408ed8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x408ed9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x408edaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x408d2908" loc="43:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408d2908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x408d2ae0"/>
        <function-ref name="changed" scoped="" ref="0x408d2bc0"/>
        <function-ref name="amGroup" scoped="" ref="0x408d2ca0"/>
        <function-ref name="setAddress" scoped="" ref="0x408d2d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4091bb08" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4091bb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4091bce0"/>
        <function-ref name="cancel" scoped="" ref="0x4091bdc0"/>
        <function-ref name="sendDone" scoped="" ref="0x4091bea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4091a010" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4091a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4091a1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4091a2c8"/>
        <function-ref name="request" scoped="" ref="0x4091a3a8"/>
        <function-ref name="granted" scoped="" ref="0x4091a488"/>
        <function-ref name="isOwner" scoped="" ref="0x4091a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4091b5e0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4091b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4091b7b8"/>
        <function-ref name="cancel" scoped="" ref="0x4091b898"/>
        <function-ref name="sendDone" scoped="" ref="0x4091b978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4092db60" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4092db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4092dd48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4092de28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4096e4c0" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4096e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4096e6a8"/>
        <function-ref name="configure" scoped="" ref="0x4096e788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4092d420" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4092d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4092d608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4092d6e8"/>
        <function-ref name="request" scoped="" ref="0x4092d7c8"/>
        <function-ref name="granted" scoped="" ref="0x4092d8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x4092d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4096e010" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4096e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4096e1e8"/>
        <function-ref name="userId" scoped="" ref="0x4096e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410b0e70" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410b0e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410ae070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x410ae1d0" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x410ae1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410ae3a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x410ae488"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410ae568"/>
        <function-ref name="dequeue" scoped="" ref="0x410ae648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410ad928" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410ad928"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410adb10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410adbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410ab218" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410ab218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410ab400"/>
        <function-ref name="configure" scoped="" ref="0x410ab4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x410ab640" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410ab640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410ab818"/>
        <function-ref name="isEmpty" scoped="" ref="0x410ab8f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410ab9d8"/>
        <function-ref name="dequeue" scoped="" ref="0x410abab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410ad1e8" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410ad1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410ad3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410ad4b0"/>
        <function-ref name="request" scoped="" ref="0x410ad590"/>
        <function-ref name="granted" scoped="" ref="0x410ad670"/>
        <function-ref name="isOwner" scoped="" ref="0x410ad750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410add30" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410add30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410adf08"/>
        <function-ref name="userId" scoped="" ref="0x410ab010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x410abc38" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x410abc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410abe10"/>
        <function-ref name="runTask" scoped="" ref="0x410abef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40967670" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40967670"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40967848"/>
        <function-ref name="cancel" scoped="" ref="0x40967928"/>
        <function-ref name="sendDone" scoped="" ref="0x40967a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40967c40" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40967c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40967e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4096a7a0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4096a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4096a978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4096d530" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4096d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096d708"/>
        <function-ref name="payloadLength" scoped="" ref="0x4096d7e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4096d8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4096d9a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4096da88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Packet" ref="0x40968398" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40968398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40968570"/>
        <function-ref name="address" scoped="" ref="0x40968650"/>
        <function-ref name="destination" scoped="" ref="0x40968730"/>
        <function-ref name="setSource" scoped="" ref="0x40968810"/>
        <function-ref name="setDestination" scoped="" ref="0x409688f0"/>
        <function-ref name="pan" scoped="" ref="0x409689d0"/>
        <function-ref name="setPan" scoped="" ref="0x40968ab0"/>
        <function-ref name="isForMe" scoped="" ref="0x40968b90"/>
        <function-ref name="localPan" scoped="" ref="0x40968c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40968e20" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40968e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40967010"/>
        <function-ref name="payloadLength" scoped="" ref="0x409670f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409671d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409672b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40967390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40967470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4096abc0" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4096abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4096ad98"/>
        <function-ref name="getFramePending" scoped="" ref="0x409681d0"/>
        <function-ref name="setFCF" scoped="" ref="0x40969010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x409690f0"/>
        <function-ref name="getDSN" scoped="" ref="0x409691d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x409692b0"/>
        <function-ref name="setDSN" scoped="" ref="0x40969390"/>
        <function-ref name="createAckReply" scoped="" ref="0x40969470"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40969550"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40969630"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40969710"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x409697f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x409698d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40969a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40969b10"/>
        <function-ref name="setFramePending" scoped="" ref="0x40969bf0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40969cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40969db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40969e90"/>
        <function-ref name="getFCF" scoped="" ref="0x40968010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4096ae78"/>
        <function-ref name="getDestAddr" scoped="" ref="0x409680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4096dc38" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4096dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4096de10"/>
        <function-ref name="getPayload" scoped="" ref="0x4096def0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4096a010"/>
        <function-ref name="cancel" scoped="" ref="0x4096a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4096a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4096a408" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4096a408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4096a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40988260" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40988260"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40988438"/>
        <function-ref name="cancel" scoped="" ref="0x40988518"/>
        <function-ref name="sendDone" scoped="" ref="0x409885f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40988830" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40988830"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40988a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4098a6a0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4098a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098a878"/>
        <function-ref name="payloadLength" scoped="" ref="0x4098a958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4098aa38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4098ab18"/>
        <function-ref name="headerLength" scoped="" ref="0x4098abf8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4098acd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x409894f8" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x409894f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409896d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40988c38" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40988c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40988e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40988ef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40987010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409870f0"/>
        <function-ref name="headerLength" scoped="" ref="0x409871d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x4098aef8" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x4098aef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409890e0"/>
        <function-ref name="cancel" scoped="" ref="0x409891c0"/>
        <function-ref name="sendDone" scoped="" ref="0x409892a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4098dba0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4098dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098dd78"/>
        <function-ref name="cancel" scoped="" ref="0x4098de58"/>
        <function-ref name="sendDone" scoped="" ref="0x4098a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4098a270" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4098a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4098a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40989920" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40989920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40989af8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40989bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40989cb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40989d98"/>
        <function-ref name="headerLength" scoped="" ref="0x40989e78"/>
        <function-ref name="metadataLength" scoped="" ref="0x40988010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x409accd8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x409accd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x409aceb0"/>
        <function-ref name="address" scoped="" ref="0x409ab010"/>
        <function-ref name="destination" scoped="" ref="0x409ab0f0"/>
        <function-ref name="setSource" scoped="" ref="0x409ab1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x409ab2b0"/>
        <function-ref name="pan" scoped="" ref="0x409ab390"/>
        <function-ref name="setPan" scoped="" ref="0x409ab470"/>
        <function-ref name="isForMe" scoped="" ref="0x409ab550"/>
        <function-ref name="localPan" scoped="" ref="0x409ab630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409ab7e0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409ab7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ab9b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409aba98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409abb78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409abc58"/>
        <function-ref name="headerLength" scoped="" ref="0x409abd38"/>
        <function-ref name="metadataLength" scoped="" ref="0x409abe18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x4098b5a0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4098b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4098b778"/>
        <function-ref name="getFramePending" scoped="" ref="0x409acb10"/>
        <function-ref name="setFCF" scoped="" ref="0x4098b938"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4098ba18"/>
        <function-ref name="getDSN" scoped="" ref="0x4098baf8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4098bbd8"/>
        <function-ref name="setDSN" scoped="" ref="0x4098bcb8"/>
        <function-ref name="createAckReply" scoped="" ref="0x4098bd98"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4098be78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x409ac010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x409ac0f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x409ac1d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x409ac2b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409ac410"/>
        <function-ref name="createAckFrame" scoped="" ref="0x409ac4f0"/>
        <function-ref name="setFramePending" scoped="" ref="0x409ac5d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x409ac6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x409ac790"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409ac870"/>
        <function-ref name="getFCF" scoped="" ref="0x409ac950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4098b858"/>
        <function-ref name="getDestAddr" scoped="" ref="0x409aca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409aa0c0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409aa0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409aa298"/>
        <function-ref name="payloadLength" scoped="" ref="0x409aa378"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409aa458"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409aa538"/>
        <function-ref name="headerLength" scoped="" ref="0x409aa618"/>
        <function-ref name="metadataLength" scoped="" ref="0x409aa6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x409a6558" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x409a6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x409a6730"/>
        <function-ref name="address" scoped="" ref="0x409a6810"/>
        <function-ref name="destination" scoped="" ref="0x409a68f0"/>
        <function-ref name="setSource" scoped="" ref="0x409a69d0"/>
        <function-ref name="setDestination" scoped="" ref="0x409a6ab0"/>
        <function-ref name="pan" scoped="" ref="0x409a6b90"/>
        <function-ref name="setPan" scoped="" ref="0x409a6c70"/>
        <function-ref name="isForMe" scoped="" ref="0x409a6d50"/>
        <function-ref name="localPan" scoped="" ref="0x409a6e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409a5010" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a51e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409a52c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a53a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409a5488"/>
        <function-ref name="headerLength" scoped="" ref="0x409a5568"/>
        <function-ref name="metadataLength" scoped="" ref="0x409a5648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x409aae78" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x409aae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x409a7070"/>
        <function-ref name="getFramePending" scoped="" ref="0x409a6390"/>
        <function-ref name="setFCF" scoped="" ref="0x409a7230"/>
        <function-ref name="isAckFrame" scoped="" ref="0x409a7310"/>
        <function-ref name="getDSN" scoped="" ref="0x409a73f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x409a74d0"/>
        <function-ref name="setDSN" scoped="" ref="0x409a75b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x409a7690"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x409a7770"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x409a7850"/>
        <function-ref name="isDataFrame" scoped="" ref="0x409a7930"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x409a7a10"/>
        <function-ref name="getAckRequired" scoped="" ref="0x409a7af0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409a7c50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x409a7d30"/>
        <function-ref name="setFramePending" scoped="" ref="0x409a7e10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x409a7ef0"/>
        <function-ref name="setDestPan" scoped="" ref="0x409a6010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409a60f0"/>
        <function-ref name="getFCF" scoped="" ref="0x409a61d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409a7150"/>
        <function-ref name="getDestAddr" scoped="" ref="0x409a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x409a58a8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409a58a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x409a5a80"/>
        <function-ref name="changed" scoped="" ref="0x409a5b60"/>
        <function-ref name="amGroup" scoped="" ref="0x409a5c40"/>
        <function-ref name="setAddress" scoped="" ref="0x409a5d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409a4010" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a41e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409a42c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a43a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409a4488"/>
        <function-ref name="headerLength" scoped="" ref="0x409a4568"/>
        <function-ref name="metadataLength" scoped="" ref="0x409a4648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409e43f0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409e43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e45c8"/>
        <function-ref name="cancel" scoped="" ref="0x409e46a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409e4788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409e49d0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409e49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e4ba8"/>
        <function-ref name="header" scoped="" ref="0x409e4c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409e77c8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409e77c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e79a0"/>
        <function-ref name="cancel" scoped="" ref="0x409e7a80"/>
        <function-ref name="sendDone" scoped="" ref="0x409e7b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409e4ea8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409e4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40a020c0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40a021a0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40a02280"/>
        <function-ref name="getSender" scoped="" ref="0x40a02360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a01e98" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a01e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e40c0"/>
        <function-ref name="header" scoped="" ref="0x409e41a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409fe860" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409fe860"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fea38"/>
        <function-ref name="cancel" scoped="" ref="0x409feb18"/>
        <function-ref name="sendDone" scoped="" ref="0x409febf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409fee40" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409fee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fd050"/>
        <function-ref name="header" scoped="" ref="0x409fd130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x409f6f10" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x409f6f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fb108"/>
        <function-ref name="clearAll" scoped="" ref="0x409fb1e8"/>
        <function-ref name="get" scoped="" ref="0x409fb2c8"/>
        <function-ref name="set" scoped="" ref="0x409fb3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a02a60" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a02a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a02c38"/>
        <function-ref name="cancel" scoped="" ref="0x40a02d18"/>
        <function-ref name="sendDone" scoped="" ref="0x40a02df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x409f8ed0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x409f8ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x409fc0c0"/>
        <function-ref name="insertNode" scoped="" ref="0x409fc1a0"/>
        <function-ref name="getNode" scoped="" ref="0x409fc280"/>
        <function-ref name="evicted" scoped="" ref="0x409fc360"/>
        <function-ref name="getIndex" scoped="" ref="0x409fc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409fe010" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fe1e8"/>
        <function-ref name="header" scoped="" ref="0x409fe2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409fe438" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409fe438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409fe610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x409fd2f0" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x409fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x409fd4c8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x409fd5a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409fd688"/>
        <function-ref name="getSender" scoped="" ref="0x409fd768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40a006a8" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40a006a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40a00880"/>
        <function-ref name="insertNode" scoped="" ref="0x40a00960"/>
        <function-ref name="getNode" scoped="" ref="0x40a00a40"/>
        <function-ref name="evicted" scoped="" ref="0x40a00b20"/>
        <function-ref name="getIndex" scoped="" ref="0x40a00c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40a08100" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40a08100"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a082d8"/>
        <function-ref name="clearAll" scoped="" ref="0x40a083b8"/>
        <function-ref name="get" scoped="" ref="0x40a08498"/>
        <function-ref name="set" scoped="" ref="0x40a08578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40a0b630" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40a0b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40a0b808"/>
        <function-ref name="insertNode" scoped="" ref="0x40a0b8e8"/>
        <function-ref name="getNode" scoped="" ref="0x40a0b9c8"/>
        <function-ref name="evicted" scoped="" ref="0x40a0baa8"/>
        <function-ref name="getIndex" scoped="" ref="0x40a0bb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a0b298" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a0b298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a0b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40a0c1b0" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40a0c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0c388"/>
        <function-ref name="clearAll" scoped="" ref="0x40a0c468"/>
        <function-ref name="get" scoped="" ref="0x40a0c548"/>
        <function-ref name="set" scoped="" ref="0x40a0c628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409e5c68" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409e5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409e5e40"/>
        <function-ref name="stopDone" scoped="" ref="0x409e5f20"/>
        <function-ref name="start" scoped="" ref="0x40a32018"/>
        <function-ref name="stop" scoped="" ref="0x40a320f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a302f0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a304c8"/>
        <function-ref name="cancel" scoped="" ref="0x40a305a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a30688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a308c0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a308c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a30a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a322e0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a322e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a324b8"/>
        <function-ref name="cancel" scoped="" ref="0x40a32598"/>
        <function-ref name="sendDone" scoped="" ref="0x40a32678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a32c18" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a32c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a32df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a32ed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a31010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a310f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a311d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40a314a0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40a314a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40a31678"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40a31758"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40a31838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40a31918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a31bb0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a31bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a31d88"/>
        <function-ref name="stopDone" scoped="" ref="0x40a31e68"/>
        <function-ref name="start" scoped="" ref="0x40a30010"/>
        <function-ref name="stop" scoped="" ref="0x40a300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a32890" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a32890"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a32a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a30cc8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a30cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a30ea0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a2f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a2f0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a2f1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a2f2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a2f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40a2c238" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40a2c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40a2c410"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40a2c4f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40a2c5d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40a2c6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a26bf8" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a26bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a26dd0"/>
        <function-ref name="cancel" scoped="" ref="0x40a26eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a25010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a2e6e8" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a2e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a2e8c0"/>
        <function-ref name="cancel" scoped="" ref="0x40a2e9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a2ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a26380" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a26380"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a26558"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a26638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a26718"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a267f8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a268d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a269b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a25240" loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a25240"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a25418"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a254f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a255d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a256b8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a25798"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a25878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40a25a98" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a25a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a25c70"/>
        <function-ref name="noAck" scoped="" ref="0x40a25d50"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a25e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a2ec28" loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a2ec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a2ee00"/>
        <function-ref name="setRetries" scoped="" ref="0x40a2eee0"/>
        <function-ref name="getRetries" scoped="" ref="0x40a26010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a260f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a261d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a43b18" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a43b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a43cf0"/>
        <function-ref name="cancel" scoped="" ref="0x40a43dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a43eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x40a387c0" loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x40a387c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a38998"/>
        <function-ref name="runTask" scoped="" ref="0x40a38a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x40a3a298" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x40a3a298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a40d90"/>
        <function-ref name="fired" scoped="" ref="0x40a40048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a40750"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a404f8"/>
        <function-ref name="getdt" scoped="" ref="0x40a39268"/>
        <function-ref name="gett0" scoped="" ref="0x40a39010"/>
        <function-ref name="isRunning" scoped="" ref="0x40a402a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a3a8c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a40a70"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a3ab40"/>
        <function-ref name="stop" scoped="" ref="0x40a3adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a46620" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a46620"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a467f8"/>
        <function-ref name="cancel" scoped="" ref="0x40a468d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a469b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a432a0" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a432a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a43478"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a43558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a43638"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a43718"/>
        <function-ref name="headerLength" scoped="" ref="0x40a437f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a438d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a39568" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a39568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a39740"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a39820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a39900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a399e0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a39ac0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a39ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40a42140" loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a42140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a42318"/>
        <function-ref name="noAck" scoped="" ref="0x40a423f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a424d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a46b60" loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a46b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a46d38"/>
        <function-ref name="setRetries" scoped="" ref="0x40a46e18"/>
        <function-ref name="getRetries" scoped="" ref="0x40a46ef8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a43010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a5e660" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a5e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b45170"/>
        <function-ref name="fired" scoped="" ref="0x40a5d3f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a5db00"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a5d8a8"/>
        <function-ref name="getdt" scoped="" ref="0x40b45620"/>
        <function-ref name="gett0" scoped="" ref="0x40b453c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40a5d650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a5ec88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a5de20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a5ef08"/>
        <function-ref name="stop" scoped="" ref="0x40a5d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40a5aa88" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40a5aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a77650"/>
        <function-ref name="fired" scoped="" ref="0x40a78830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a77010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a78ce0"/>
        <function-ref name="getdt" scoped="" ref="0x40a77b00"/>
        <function-ref name="gett0" scoped="" ref="0x40a778a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40a78a88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a780d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a77330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a78358"/>
        <function-ref name="stop" scoped="" ref="0x40a785d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40a76b40" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40a76b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a716a8"/>
        <function-ref name="fired" scoped="" ref="0x40a72938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a71068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a72de8"/>
        <function-ref name="getdt" scoped="" ref="0x40a71b58"/>
        <function-ref name="gett0" scoped="" ref="0x40a71900"/>
        <function-ref name="isRunning" scoped="" ref="0x40a72b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a721e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a71388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a72460"/>
        <function-ref name="stop" scoped="" ref="0x40a726e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a71eb8" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a71eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a70520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a76390" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a76390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a76568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40a6a7c0" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40a6a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a6af10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a69418"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a691a0"/>
        <function-ref name="overflow" scoped="" ref="0x40a69690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a6e5c0" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a6e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a6e798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40a6eb88" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40a6eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a6a068"/>
        <function-ref name="fired" scoped="" ref="0x40a6b820"/>
        <function-ref name="startAt" scoped="" ref="0x40a6bd10"/>
        <function-ref name="isRunning" scoped="" ref="0x40a6ba98"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a6a2e0"/>
        <function-ref name="start" scoped="" ref="0x40a6b308"/>
        <function-ref name="stop" scoped="" ref="0x40a6b5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b03ca8" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b03ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b01170"/>
        <function-ref name="fired" scoped="" ref="0x40b02928"/>
        <function-ref name="startAt" scoped="" ref="0x40b02e18"/>
        <function-ref name="isRunning" scoped="" ref="0x40b02ba0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b013e8"/>
        <function-ref name="start" scoped="" ref="0x40b02410"/>
        <function-ref name="stop" scoped="" ref="0x40b026b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b03870" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b03870"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034b5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034b5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b03a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b01718" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b01718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b01e68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40aff388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40aff110"/>
        <function-ref name="overflow" scoped="" ref="0x40aff600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x410c6278" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x410c6278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x410c6450"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x410c6530"/>
        <function-ref name="getControlA" scoped="" ref="0x410c6610"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x410c66f0"/>
        <function-ref name="setControlB" scoped="" ref="0x410c67d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x410c68b0"/>
        <function-ref name="getControlB" scoped="" ref="0x410c6990"/>
        <function-ref name="setControlA" scoped="" ref="0x410c6a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410cc448" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410cc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410cb908"/>
        <function-ref name="fired" scoped="" ref="0x410cb0d8"/>
        <function-ref name="startAt" scoped="" ref="0x410cb5c8"/>
        <function-ref name="isRunning" scoped="" ref="0x410cb350"/>
        <function-ref name="getAlarm" scoped="" ref="0x410cbb80"/>
        <function-ref name="start" scoped="" ref="0x410ccb98"/>
        <function-ref name="stop" scoped="" ref="0x410cce38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410cc010" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410cc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410cc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x410cbeb0" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x410cbeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410c9610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410c9b00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x410c9888"/>
        <function-ref name="overflow" scoped="" ref="0x410c9d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41108730" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41108730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x41108908"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x411089e8"/>
        <function-ref name="controlABusy" scoped="" ref="0x41108ac8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x41108ba8"/>
        <function-ref name="countBusy" scoped="" ref="0x41108c88"/>
        <function-ref name="compareABusy" scoped="" ref="0x41108d68"/>
        <function-ref name="getAssr" scoped="" ref="0x41108e48"/>
        <function-ref name="setAssr" scoped="" ref="0x41108f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x410c6c60" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x410c6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41108288"/>
        <function-ref name="fired" scoped="" ref="0x410c4800"/>
        <function-ref name="get" scoped="" ref="0x410c42e8"/>
        <function-ref name="reset" scoped="" ref="0x410c4a78"/>
        <function-ref name="isOn" scoped="" ref="0x41108500"/>
        <function-ref name="set" scoped="" ref="0x410c4560"/>
        <function-ref name="start" scoped="" ref="0x410c4cf0"/>
        <function-ref name="stop" scoped="" ref="0x41108010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x410c80c0" loc="54:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410c80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x410c7b10"/>
        <function-ref name="test" scoped="" ref="0x410c7620"/>
        <function-ref name="get" scoped="" ref="0x410c8708"/>
        <function-ref name="setScale" scoped="" ref="0x410c7d88"/>
        <function-ref name="getScale" scoped="" ref="0x410c6048"/>
        <function-ref name="reset" scoped="" ref="0x410c8e98"/>
        <function-ref name="overflow" scoped="" ref="0x410c8c20"/>
        <function-ref name="isOn" scoped="" ref="0x410c7898"/>
        <function-ref name="set" scoped="" ref="0x410c8980"/>
        <function-ref name="start" scoped="" ref="0x410c7130"/>
        <function-ref name="stop" scoped="" ref="0x410c73a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40ab0b68" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40ab0b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40ab0d40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40ab0e20"/>
        <function-ref name="getControlA" scoped="" ref="0x40ab0f00"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40ad3010"/>
        <function-ref name="setControlB" scoped="" ref="0x40ad30f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40ad31d0"/>
        <function-ref name="getControlB" scoped="" ref="0x40ad32b0"/>
        <function-ref name="setControlA" scoped="" ref="0x40ad3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40ad0280" loc="73:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40ad0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40ad0458"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40ad0538"/>
        <function-ref name="controlABusy" scoped="" ref="0x40ad0618"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40ad06f8"/>
        <function-ref name="countBusy" scoped="" ref="0x40ad07d8"/>
        <function-ref name="compareABusy" scoped="" ref="0x40ad08b8"/>
        <function-ref name="getAssr" scoped="" ref="0x40ad0998"/>
        <function-ref name="setAssr" scoped="" ref="0x40ad0a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40ad36b8" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40ad36b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ad2c90"/>
        <function-ref name="fired" scoped="" ref="0x40ad22b0"/>
        <function-ref name="get" scoped="" ref="0x40ad3d00"/>
        <function-ref name="reset" scoped="" ref="0x40ad2528"/>
        <function-ref name="isOn" scoped="" ref="0x40ad2f08"/>
        <function-ref name="set" scoped="" ref="0x40ad2010"/>
        <function-ref name="start" scoped="" ref="0x40ad27a0"/>
        <function-ref name="stop" scoped="" ref="0x40ad2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ab5890" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ab5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ab0300"/>
        <function-ref name="test" scoped="" ref="0x40ab1df0"/>
        <function-ref name="get" scoped="" ref="0x40ab5ed8"/>
        <function-ref name="setScale" scoped="" ref="0x40ab0578"/>
        <function-ref name="getScale" scoped="" ref="0x40ab0818"/>
        <function-ref name="reset" scoped="" ref="0x40ab1688"/>
        <function-ref name="overflow" scoped="" ref="0x40ab1410"/>
        <function-ref name="isOn" scoped="" ref="0x40ab0088"/>
        <function-ref name="set" scoped="" ref="0x40ab1170"/>
        <function-ref name="start" scoped="" ref="0x40ab1900"/>
        <function-ref name="stop" scoped="" ref="0x40ab1b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40acbaf0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40acbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40acbcc8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40acbda8"/>
        <function-ref name="getControlA" scoped="" ref="0x40acbe88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40aca010"/>
        <function-ref name="setControlB" scoped="" ref="0x40aca0f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40aca1d0"/>
        <function-ref name="getControlB" scoped="" ref="0x40aca2b0"/>
        <function-ref name="setControlA" scoped="" ref="0x40aca390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40ac71e0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40ac71e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40ac73b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40ac7640" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40ac7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40ac7818"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40ac78f8"/>
        <function-ref name="controlABusy" scoped="" ref="0x40ac79d8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40ac7ab8"/>
        <function-ref name="countBusy" scoped="" ref="0x40ac7b98"/>
        <function-ref name="compareABusy" scoped="" ref="0x40ac7c78"/>
        <function-ref name="getAssr" scoped="" ref="0x40ac7d58"/>
        <function-ref name="setAssr" scoped="" ref="0x40ac7e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40aca6b8" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40aca6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ac8c90"/>
        <function-ref name="fired" scoped="" ref="0x40ac82b0"/>
        <function-ref name="get" scoped="" ref="0x40acad00"/>
        <function-ref name="reset" scoped="" ref="0x40ac8528"/>
        <function-ref name="isOn" scoped="" ref="0x40ac8f08"/>
        <function-ref name="set" scoped="" ref="0x40ac8010"/>
        <function-ref name="start" scoped="" ref="0x40ac87a0"/>
        <function-ref name="stop" scoped="" ref="0x40ac8a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40acd780" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40acd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40acb288"/>
        <function-ref name="test" scoped="" ref="0x40accce8"/>
        <function-ref name="get" scoped="" ref="0x40acddc8"/>
        <function-ref name="setScale" scoped="" ref="0x40acb500"/>
        <function-ref name="getScale" scoped="" ref="0x40acb7a0"/>
        <function-ref name="reset" scoped="" ref="0x40acc580"/>
        <function-ref name="overflow" scoped="" ref="0x40acc308"/>
        <function-ref name="isOn" scoped="" ref="0x40acb010"/>
        <function-ref name="set" scoped="" ref="0x40acc068"/>
        <function-ref name="start" scoped="" ref="0x40acc7f8"/>
        <function-ref name="stop" scoped="" ref="0x40acca70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b0b9a8" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b0b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b0bb80"/>
        <function-ref name="runTask" scoped="" ref="0x40b0bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b0d010" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b0d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b0b4e0"/>
        <function-ref name="fired" scoped="" ref="0x40b0dc78"/>
        <function-ref name="startAt" scoped="" ref="0x40b0b1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b0def0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b0b758"/>
        <function-ref name="start" scoped="" ref="0x40b0d760"/>
        <function-ref name="stop" scoped="" ref="0x40b0da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a6cc60" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a6cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b0e790"/>
        <function-ref name="fired" scoped="" ref="0x40afda20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b0e150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40afded0"/>
        <function-ref name="getdt" scoped="" ref="0x40b0ec40"/>
        <function-ref name="gett0" scoped="" ref="0x40b0e9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40afdc78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40afd2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b0e470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40afd548"/>
        <function-ref name="stop" scoped="" ref="0x40afd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40b50050" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40b50050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b50228"/>
        <function-ref name="runTask" scoped="" ref="0x40b50308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40b54e30" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40b54e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b51920"/>
        <function-ref name="fired" scoped="" ref="0x40b52bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b512e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b51088"/>
        <function-ref name="getdt" scoped="" ref="0x40b51dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40b51b78"/>
        <function-ref name="isRunning" scoped="" ref="0x40b52e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b52468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b51600"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b526e8"/>
        <function-ref name="stop" scoped="" ref="0x40b52968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b2ea60" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b2ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b54670"/>
        <function-ref name="fired" scoped="" ref="0x40b56840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b54010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b56d10"/>
        <function-ref name="getdt" scoped="" ref="0x40b54b40"/>
        <function-ref name="gett0" scoped="" ref="0x40b548d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b56aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b560b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b54340"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b56348"/>
        <function-ref name="stop" scoped="" ref="0x40b565d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b4f460" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b4f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b4faa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b4fdf8" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b4fdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b48570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b48a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b487e8"/>
        <function-ref name="overflow" scoped="" ref="0x40b48cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b69aa8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b69aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b69c80"/>
        <function-ref name="stopDone" scoped="" ref="0x40b69d60"/>
        <function-ref name="start" scoped="" ref="0x40b69e40"/>
        <function-ref name="stop" scoped="" ref="0x40b69f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40b61200" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b61200"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b613d8"/>
        <function-ref name="turnOn" scoped="" ref="0x40b614b8"/>
        <function-ref name="setChannel" scoped="" ref="0x40b61598"/>
        <function-ref name="done" scoped="" ref="0x40b61678"/>
        <function-ref name="standby" scoped="" ref="0x40b61758"/>
        <function-ref name="getChannel" scoped="" ref="0x40b61838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b66120" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b66120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b662f8"/>
        <function-ref name="cancel" scoped="" ref="0x40b663d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b664b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40b5e6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b5e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b5e898"/>
        <function-ref name="header" scoped="" ref="0x40b5e978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b666d0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b666d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b668a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40b5e168" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b5e168"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b5e340"/>
        <function-ref name="ready" scoped="" ref="0x40b5e420"/>
        <function-ref name="sendDone" scoped="" ref="0x40b5e500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40b66a68" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40b66a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40b66c40"/>
        <function-ref name="setChannel" scoped="" ref="0x40b66d20"/>
        <function-ref name="getChannel" scoped="" ref="0x40b66e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b5d0f0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b5d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b5d2c8"/>
        <function-ref name="stopDone" scoped="" ref="0x40b5d3a8"/>
        <function-ref name="start" scoped="" ref="0x40b5d488"/>
        <function-ref name="stop" scoped="" ref="0x40b5d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40b5d778" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40b5d778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b5d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40b5ca60" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b5ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b5cc38"/>
        <function-ref name="turnOn" scoped="" ref="0x40b5cd18"/>
        <function-ref name="setChannel" scoped="" ref="0x40b5cdf8"/>
        <function-ref name="done" scoped="" ref="0x40b5ced8"/>
        <function-ref name="standby" scoped="" ref="0x40b5b010"/>
        <function-ref name="getChannel" scoped="" ref="0x40b5b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b5db38" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b5db38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b5dd10"/>
        <function-ref name="cancel" scoped="" ref="0x40b5ddf0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b5ded0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x40b77300" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x40b77300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b774d8"/>
        <function-ref name="runTask" scoped="" ref="0x40b775b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40b5bde8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b5bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b5a010"/>
        <function-ref name="header" scoped="" ref="0x40b5a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40b71540" loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40b71540"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b71718"/>
        <function-ref name="runTask" scoped="" ref="0x40b717f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b5c138" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b5c138"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b5c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x40b8a988" loc="280:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x40b8a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b8ab60"/>
        <function-ref name="runTask" scoped="" ref="0x40b8ac40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40b5b890" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b5b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b5ba68"/>
        <function-ref name="ready" scoped="" ref="0x40b5bb48"/>
        <function-ref name="sendDone" scoped="" ref="0x40b5bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40b5c4d0" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40b5c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40b5c6a8"/>
        <function-ref name="setChannel" scoped="" ref="0x40b5c788"/>
        <function-ref name="getChannel" scoped="" ref="0x40b5c868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40b5b278" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40b5b278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40b5b450"/>
        <function-ref name="suspend" scoped="" ref="0x40b5b530"/>
        <function-ref name="resume" scoped="" ref="0x40b5b610"/>
        <function-ref name="run" scoped="" ref="0x40b5b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b7f798" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b7f798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b7f970"/>
        <function-ref name="stopDone" scoped="" ref="0x40b7fa50"/>
        <function-ref name="start" scoped="" ref="0x40b7fb30"/>
        <function-ref name="stop" scoped="" ref="0x40b7fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40b9b708" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40b9b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b9b8e0"/>
        <function-ref name="request" scoped="" ref="0x40b9b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b9ac70" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b9ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9ae48"/>
        <function-ref name="cancel" scoped="" ref="0x40b9af28"/>
        <function-ref name="sendDone" scoped="" ref="0x40b98018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b98178" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b98178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b98350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x40b98cc8" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x40b98cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b98ea0"/>
        <function-ref name="ready" scoped="" ref="0x40b97010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40b9c648" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b9c648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b9c820"/>
        <function-ref name="turnOn" scoped="" ref="0x40b9c900"/>
        <function-ref name="setChannel" scoped="" ref="0x40b9c9e0"/>
        <function-ref name="done" scoped="" ref="0x40b9cac0"/>
        <function-ref name="standby" scoped="" ref="0x40b9cba0"/>
        <function-ref name="getChannel" scoped="" ref="0x40b9cc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b7fd70" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b7fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9c010"/>
        <function-ref name="cancel" scoped="" ref="0x40b9c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b9bb00" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b9bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b9bcd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b9bdb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b9be98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b9a010"/>
        <function-ref name="headerLength" scoped="" ref="0x40b9a0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b9a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40b9a330" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40b9a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b9a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b9b310" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b9b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b9b4e8"/>
        <function-ref name="header" scoped="" ref="0x40b9b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40b984b0" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40b984b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b98708"/>
        <function-ref name="turnOn" scoped="" ref="0x40b987e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40b988c8"/>
        <function-ref name="done" scoped="" ref="0x40b989a8"/>
        <function-ref name="standby" scoped="" ref="0x40b98a88"/>
        <function-ref name="getChannel" scoped="" ref="0x40b98b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40b9a698" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40b9a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b9a870"/>
        <function-ref name="stopDone" scoped="" ref="0x40b9a950"/>
        <function-ref name="start" scoped="" ref="0x40b9aa30"/>
        <function-ref name="stop" scoped="" ref="0x40b9ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b97a80" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b97a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b97c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b97d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b97e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b97ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x40b96010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b960f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b9c330" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b9c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b9c508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b96250" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b96250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b96428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x40b97250" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x40b97250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b97428"/>
        <function-ref name="header" scoped="" ref="0x40b97508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b9cdc0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b9cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9b010"/>
        <function-ref name="ready" scoped="" ref="0x40b9b0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40b97668" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40b97668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b97840"/>
        <function-ref name="request" scoped="" ref="0x40b97920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b917c0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b917c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b91998"/>
        <function-ref name="ready" scoped="" ref="0x40b91a78"/>
        <function-ref name="sendDone" scoped="" ref="0x40b91b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b91da0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b91da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb8010"/>
        <function-ref name="header" scoped="" ref="0x40bb80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40bb8368" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40bb8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40bb8540"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40bb8620"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40bb8700"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40bb87e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b912b0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b912b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b91488"/>
        <function-ref name="header" scoped="" ref="0x40b91568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b94ca8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b94ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b94e80"/>
        <function-ref name="ready" scoped="" ref="0x40b91010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b910f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bb5a78" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bb5a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb5c50"/>
        <function-ref name="ready" scoped="" ref="0x40bb5d30"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb5e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bb4098" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bb4098"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb4270"/>
        <function-ref name="header" scoped="" ref="0x40bb4350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40bb44f8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40bb44f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40bb46d0"/>
        <function-ref name="wait" scoped="" ref="0x40bb47b0"/>
        <function-ref name="cancel" scoped="" ref="0x40bb4890"/>
        <function-ref name="isFree" scoped="" ref="0x40bb4970"/>
        <function-ref name="getNow" scoped="" ref="0x40bb4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40bb1850" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bb1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bb1a28"/>
        <function-ref name="rand32" scoped="" ref="0x40bb1b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40bb1d80" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40bb1d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40bb3010"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40bb30f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40bb31d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40bb32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40bb5568" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40bb5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb5740"/>
        <function-ref name="header" scoped="" ref="0x40bb5820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40bb5010" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40bb5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb51e8"/>
        <function-ref name="ready" scoped="" ref="0x40bb52c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb53a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x40bafde8" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x40bafde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bae010"/>
        <function-ref name="runTask" scoped="" ref="0x40bae0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40bc48d0" loc="35:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bc48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bc4aa8"/>
        <function-ref name="rand32" scoped="" ref="0x40bc4b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bc4010" loc="34:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bc4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bc4638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bb7d30" loc="33:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bb7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bb7f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40bbe350" loc="37:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bbe350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bbe528"/>
        <function-ref name="rand32" scoped="" ref="0x40bbe608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bc3a60" loc="36:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bc3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bbe0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bc3540" loc="35:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bc3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bc3718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bdd428" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bdd428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bdd600"/>
        <function-ref name="ready" scoped="" ref="0x40bdd6e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bdd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bdda08" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bdda08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bddbe0"/>
        <function-ref name="header" scoped="" ref="0x40bddcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40bddf10" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40bddf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40bdc108"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40bdc1e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40bdc2c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40bdc3a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40bdc488"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40bdc568"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40bdc648"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40bdc728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b92910" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b92910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b92ae8"/>
        <function-ref name="header" scoped="" ref="0x40b92bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b923b8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b923b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b92590"/>
        <function-ref name="ready" scoped="" ref="0x40b92670"/>
        <function-ref name="sendDone" scoped="" ref="0x40b92750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40b92de8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b92de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bdd010"/>
        <function-ref name="noAck" scoped="" ref="0x40bdd0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bdd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bd9e98" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bd9e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd80c0"/>
        <function-ref name="ready" scoped="" ref="0x40bd81a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bd8280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bd84c8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bd84c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bd86a0"/>
        <function-ref name="header" scoped="" ref="0x40bd8780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40bd8928" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40bd8928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40bd8b00"/>
        <function-ref name="wait" scoped="" ref="0x40bd8be0"/>
        <function-ref name="cancel" scoped="" ref="0x40bd8cc0"/>
        <function-ref name="isFree" scoped="" ref="0x40bd8da0"/>
        <function-ref name="getNow" scoped="" ref="0x40bd8e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40bd2720" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40bd2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd28f8"/>
        <function-ref name="get" scoped="" ref="0x40bd29d8"/>
        <function-ref name="setValue" scoped="" ref="0x40bd2ab8"/>
        <function-ref name="set" scoped="" ref="0x40bd2b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40bd93d0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40bd93d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bd95a8"/>
        <function-ref name="header" scoped="" ref="0x40bd9688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x40bd7110" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40bd7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40bd72e8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40bd73c8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40bd74a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40bd7588"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40bd7668"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40bd7748"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40bd7828"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40bd7908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40bdce40" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40bdce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd9050"/>
        <function-ref name="ready" scoped="" ref="0x40bd9130"/>
        <function-ref name="sendDone" scoped="" ref="0x40bd9210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40bd98a8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bd98a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bd9a80"/>
        <function-ref name="noAck" scoped="" ref="0x40bd9b60"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bd9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40bda3b0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="SoftwareAckLayerC.MetadataFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40bda3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bda588"/>
        <function-ref name="get" scoped="" ref="0x40bda668"/>
        <function-ref name="setValue" scoped="" ref="0x40bda748"/>
        <function-ref name="set" scoped="" ref="0x40bda828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40be5a18" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40be5a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40be5bf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40be5cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be5db0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40be5e90"/>
        <function-ref name="headerLength" scoped="" ref="0x40be4010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40be40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40be4370" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40be4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40be4548"/>
        <function-ref name="payloadLength" scoped="" ref="0x40be4628"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be4708"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40be47e8"/>
        <function-ref name="headerLength" scoped="" ref="0x40be48c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40be49a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40be53f0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40be53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40be55c8"/>
        <function-ref name="get" scoped="" ref="0x40be56a8"/>
        <function-ref name="setValue" scoped="" ref="0x40be5788"/>
        <function-ref name="set" scoped="" ref="0x40be5868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bfb040" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bfb040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bfb218"/>
        <function-ref name="stopDone" scoped="" ref="0x40bfb2f8"/>
        <function-ref name="start" scoped="" ref="0x40bfb3d8"/>
        <function-ref name="stop" scoped="" ref="0x40bfb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40bfaec0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40bfaec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40bf90c0"/>
        <function-ref name="request" scoped="" ref="0x40bf91a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bf8410" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bf8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf85e8"/>
        <function-ref name="cancel" scoped="" ref="0x40bf86c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf87a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bf8908" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bf8908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x40bf74f0" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x40bf74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf76c8"/>
        <function-ref name="ready" scoped="" ref="0x40bf77a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40bfbe28" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40bfbe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40bfa050"/>
        <function-ref name="turnOn" scoped="" ref="0x40bfa130"/>
        <function-ref name="setChannel" scoped="" ref="0x40bfa210"/>
        <function-ref name="done" scoped="" ref="0x40bfa2f0"/>
        <function-ref name="standby" scoped="" ref="0x40bfa3d0"/>
        <function-ref name="getChannel" scoped="" ref="0x40bfa4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bfb618" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bfb618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bfb7f0"/>
        <function-ref name="cancel" scoped="" ref="0x40bfb8d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bfb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40bf92e0" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40bf92e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bf94b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bf9598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf9678"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bf9758"/>
        <function-ref name="headerLength" scoped="" ref="0x40bf9838"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bf9918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40bf9a78" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40bf9a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40bf9c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40bfaac8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40bfaac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bfaca0"/>
        <function-ref name="header" scoped="" ref="0x40bfad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40bf8c40" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40bf8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40bf8e98"/>
        <function-ref name="turnOn" scoped="" ref="0x40bf7010"/>
        <function-ref name="setChannel" scoped="" ref="0x40bf70f0"/>
        <function-ref name="done" scoped="" ref="0x40bf71d0"/>
        <function-ref name="standby" scoped="" ref="0x40bf72b0"/>
        <function-ref name="getChannel" scoped="" ref="0x40bf7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40bf9de0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40bf9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bf8010"/>
        <function-ref name="stopDone" scoped="" ref="0x40bf80f0"/>
        <function-ref name="start" scoped="" ref="0x40bf81d0"/>
        <function-ref name="stop" scoped="" ref="0x40bf82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40bf5250" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40bf5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bf5428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bf5508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf55e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bf56c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40bf57a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bf5888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bfbb10" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bfbb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bfbce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40bf59e8" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40bf59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40bf5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x40bf79e8" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x40bf79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf7bc0"/>
        <function-ref name="header" scoped="" ref="0x40bf7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40bfa5f0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40bfa5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bfa7c8"/>
        <function-ref name="ready" scoped="" ref="0x40bfa8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bfa988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40bf7e00" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40bf7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40bf5010"/>
        <function-ref name="request" scoped="" ref="0x40bf50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c152a8" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c152a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c15480"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c15560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c15640"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c15720"/>
        <function-ref name="headerLength" scoped="" ref="0x40c15800"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c158e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c145e8" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c145e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c147c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c148a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c14980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c14a60"/>
        <function-ref name="headerLength" scoped="" ref="0x40c14b40"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c14c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40c18af8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c18af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c176b8"/>
        <function-ref name="clear" scoped="" ref="0x40c17a68"/>
        <function-ref name="isValid" scoped="" ref="0x40c17308"/>
        <function-ref name="set" scoped="" ref="0x40c17e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40c15c50" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c15c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c142e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40c19100" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c19100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c19c00"/>
        <function-ref name="clear" scoped="" ref="0x40c18010"/>
        <function-ref name="isValid" scoped="" ref="0x40c19850"/>
        <function-ref name="set" scoped="" ref="0x40c183c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40c0c170" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40c0c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c0c348"/>
        <function-ref name="get" scoped="" ref="0x40c0c428"/>
        <function-ref name="setValue" scoped="" ref="0x40c0c508"/>
        <function-ref name="set" scoped="" ref="0x40c0c5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c0d828" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c0d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c0da00"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c0dae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c0dbc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c0dca0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c0dd80"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c0de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c0bd48" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c0bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c0bf20"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c09018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c090f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c091d8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c092b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c09398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40c0e100" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c0e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c0ec00"/>
        <function-ref name="clear" scoped="" ref="0x40c0d010"/>
        <function-ref name="isValid" scoped="" ref="0x40c0e850"/>
        <function-ref name="set" scoped="" ref="0x40c0d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40c0c908" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c0c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c0b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40c0b400" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40c0b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c0ba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40c13690" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c13690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c101b8"/>
        <function-ref name="clear" scoped="" ref="0x40c10568"/>
        <function-ref name="isValid" scoped="" ref="0x40c13de0"/>
        <function-ref name="set" scoped="" ref="0x40c10918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c12d70" loc="20:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c12d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8590"/>
            <typename><typedef-ref name="TMilli" ref="0x403a8758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c1e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40c1f6b8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40c1f6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c1f890"/>
        <function-ref name="get" scoped="" ref="0x40c1f970"/>
        <function-ref name="setValue" scoped="" ref="0x40c1fa50"/>
        <function-ref name="set" scoped="" ref="0x40c1fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40c43288" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40c43288"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c43460"/>
        <function-ref name="request" scoped="" ref="0x40c43540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40c404d8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40c404d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c3f0b8"/>
        <function-ref name="get" scoped="" ref="0x40c40de0"/>
        <function-ref name="isSet" scoped="" ref="0x40c40b20"/>
        <function-ref name="set" scoped="" ref="0x40c3f378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40c393a0" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c393a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c39ea0"/>
        <function-ref name="clear" scoped="" ref="0x40c38280"/>
        <function-ref name="isValid" scoped="" ref="0x40c39af0"/>
        <function-ref name="set" scoped="" ref="0x40c38630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40c44040" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40c44040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c44218"/>
        <function-ref name="turnOn" scoped="" ref="0x40c442f8"/>
        <function-ref name="setChannel" scoped="" ref="0x40c443d8"/>
        <function-ref name="done" scoped="" ref="0x40c444b8"/>
        <function-ref name="standby" scoped="" ref="0x40c44598"/>
        <function-ref name="getChannel" scoped="" ref="0x40c44678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c436f0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c436f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c438c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c439a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c43a88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c43b68"/>
        <function-ref name="headerLength" scoped="" ref="0x40c43c48"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c43d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40c410f0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c410f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c41cb8"/>
        <function-ref name="get" scoped="" ref="0x40c419f8"/>
        <function-ref name="isSet" scoped="" ref="0x40c41738"/>
        <function-ref name="set" scoped="" ref="0x40c40010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c44d70" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c44d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c43010"/>
        <function-ref name="header" scoped="" ref="0x40c430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40c3f8a8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c3f8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c3d4a0"/>
        <function-ref name="get" scoped="" ref="0x40c3d1e0"/>
        <function-ref name="isSet" scoped="" ref="0x40c3fef0"/>
        <function-ref name="set" scoped="" ref="0x40c3d760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c3a9e8" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c3a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c3abc0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c3aca0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c3ad80"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40c3ae60"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40c39010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40c3a030" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c3a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c3a678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c44818" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c44818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c449f0"/>
        <function-ref name="ready" scoped="" ref="0x40c44ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c44bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40c3dc70" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c3dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c3c868"/>
        <function-ref name="get" scoped="" ref="0x40c3c5a8"/>
        <function-ref name="isSet" scoped="" ref="0x40c3c2e8"/>
        <function-ref name="set" scoped="" ref="0x40c3cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40c5b1a8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40c5b1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c5b380"/>
        <function-ref name="request" scoped="" ref="0x40c5b460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40c49930" loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40c49930"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40c4d0a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40c59390" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40c59390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c57010"/>
        <function-ref name="get" scoped="" ref="0x40c59c98"/>
        <function-ref name="isSet" scoped="" ref="0x40c599d8"/>
        <function-ref name="set" scoped="" ref="0x40c572d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40c4cca0" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40c4cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c4ce78"/>
        <function-ref name="get" scoped="" ref="0x40c48010"/>
        <function-ref name="setValue" scoped="" ref="0x40c480f0"/>
        <function-ref name="set" scoped="" ref="0x40c481d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40c33c38" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40c33c38"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034b7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034b7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c33e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40c48c20" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c48c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c70730"/>
        <function-ref name="clear" scoped="" ref="0x40c70ae0"/>
        <function-ref name="isValid" scoped="" ref="0x40c70380"/>
        <function-ref name="set" scoped="" ref="0x40c70e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40c4e010" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40c4e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c4e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c4e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4e488"/>
        <function-ref name="get" scoped="" ref="0x40c4e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4e648"/>
        <function-ref name="set" scoped="" ref="0x40c4e728"/>
        <function-ref name="clr" scoped="" ref="0x40c4e808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40c6fa08" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40c6fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c6fbe0"/>
        <function-ref name="wait" scoped="" ref="0x40c6fcc0"/>
        <function-ref name="cancel" scoped="" ref="0x40c6fda0"/>
        <function-ref name="isFree" scoped="" ref="0x40c6fe80"/>
        <function-ref name="getNow" scoped="" ref="0x40c6e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40c5c010" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40c5c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c5c1e8"/>
        <function-ref name="turnOn" scoped="" ref="0x40c5c2c8"/>
        <function-ref name="setChannel" scoped="" ref="0x40c5c3a8"/>
        <function-ref name="done" scoped="" ref="0x40c5c488"/>
        <function-ref name="standby" scoped="" ref="0x40c5c568"/>
        <function-ref name="getChannel" scoped="" ref="0x40c5c648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40c4d410" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c4d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c4da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40c5a010" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c5a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c5abd8"/>
        <function-ref name="get" scoped="" ref="0x40c5a918"/>
        <function-ref name="isSet" scoped="" ref="0x40c5a658"/>
        <function-ref name="set" scoped="" ref="0x40c5ae98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c5b610" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c5b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c5b7e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c5b8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c5b9a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c5ba88"/>
        <function-ref name="headerLength" scoped="" ref="0x40c5bb68"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c5bc48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40c51580" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40c51580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c51758"/>
        <function-ref name="isInput" scoped="" ref="0x40c51838"/>
        <function-ref name="toggle" scoped="" ref="0x40c51918"/>
        <function-ref name="isOutput" scoped="" ref="0x40c519f8"/>
        <function-ref name="get" scoped="" ref="0x40c51ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c51bb8"/>
        <function-ref name="set" scoped="" ref="0x40c51c98"/>
        <function-ref name="clr" scoped="" ref="0x40c51d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c4dd78" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c4dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c4c010"/>
        <function-ref name="headerLength" scoped="" ref="0x40c4c0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c4c1d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40c4c2b0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40c4c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c5cd40" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c5cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c5cf18"/>
        <function-ref name="header" scoped="" ref="0x40c5b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40c57800" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c57800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c563d8"/>
        <function-ref name="get" scoped="" ref="0x40c56118"/>
        <function-ref name="isSet" scoped="" ref="0x40c57e48"/>
        <function-ref name="set" scoped="" ref="0x40c56698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40c335d8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40c335d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034b7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034b7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c337b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40c53898" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40c53898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c53af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c53bd0"/>
        <function-ref name="request" scoped="" ref="0x40c53cb0"/>
        <function-ref name="granted" scoped="" ref="0x40c53d90"/>
        <function-ref name="isOwner" scoped="" ref="0x40c53e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40c54e48" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40c54e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c53050"/>
        <function-ref name="isInput" scoped="" ref="0x40c53130"/>
        <function-ref name="toggle" scoped="" ref="0x40c53210"/>
        <function-ref name="isOutput" scoped="" ref="0x40c532f0"/>
        <function-ref name="get" scoped="" ref="0x40c533d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c534b0"/>
        <function-ref name="set" scoped="" ref="0x40c53590"/>
        <function-ref name="clr" scoped="" ref="0x40c53670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40c56ba8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c56ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c54790"/>
        <function-ref name="get" scoped="" ref="0x40c544d0"/>
        <function-ref name="isSet" scoped="" ref="0x40c54210"/>
        <function-ref name="set" scoped="" ref="0x40c54a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c5c7e8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c5c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c5c9c0"/>
        <function-ref name="ready" scoped="" ref="0x40c5caa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c5cb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40c4a108" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40c4a108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40c4a2e0"/>
        <function-ref name="disable" scoped="" ref="0x40c4a3c0"/>
        <function-ref name="captured" scoped="" ref="0x40c4a4a0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40c4a580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40c4fef8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40c4fef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40c510e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40c511c0"/>
        <function-ref name="splitRead" scoped="" ref="0x40c512a0"/>
        <function-ref name="write" scoped="" ref="0x40c51380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40c48418" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40c48418"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c485f0"/>
        <function-ref name="get" scoped="" ref="0x40c486d0"/>
        <function-ref name="setValue" scoped="" ref="0x40c487b0"/>
        <function-ref name="set" scoped="" ref="0x40c48890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40c4c608" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40c4c608"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c4c7e0"/>
        <function-ref name="get" scoped="" ref="0x40c4c8c0"/>
        <function-ref name="setValue" scoped="" ref="0x40c4c9a0"/>
        <function-ref name="set" scoped="" ref="0x40c4ca80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40c6f2e8" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40c6f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40c6f5c0"/>
        <function-ref name="suspend" scoped="" ref="0x40c6f6a0"/>
        <function-ref name="resume" scoped="" ref="0x40c6f780"/>
        <function-ref name="run" scoped="" ref="0x40c6f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40ccee98" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40ccee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ccd0c0"/>
        <function-ref name="isInput" scoped="" ref="0x40ccd1a0"/>
        <function-ref name="toggle" scoped="" ref="0x40ccd280"/>
        <function-ref name="isOutput" scoped="" ref="0x40ccd360"/>
        <function-ref name="get" scoped="" ref="0x40ccd440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ccd520"/>
        <function-ref name="set" scoped="" ref="0x40ccd600"/>
        <function-ref name="clr" scoped="" ref="0x40ccd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40cce4b0" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40cce4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cce688"/>
        <function-ref name="isInput" scoped="" ref="0x40cce768"/>
        <function-ref name="toggle" scoped="" ref="0x40cce848"/>
        <function-ref name="isOutput" scoped="" ref="0x40cce928"/>
        <function-ref name="get" scoped="" ref="0x40ccea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cceae8"/>
        <function-ref name="set" scoped="" ref="0x40ccebc8"/>
        <function-ref name="clr" scoped="" ref="0x40cceca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ccc0e0" loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ccc0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ccb5c8"/>
        <function-ref name="fired" scoped="" ref="0x40cccd48"/>
        <function-ref name="startAt" scoped="" ref="0x40ccb288"/>
        <function-ref name="isRunning" scoped="" ref="0x40ccb010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ccb840"/>
        <function-ref name="start" scoped="" ref="0x40ccc830"/>
        <function-ref name="stop" scoped="" ref="0x40cccad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40ccf698" loc="31:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40ccf698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ccf870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ccf950"/>
        <function-ref name="request" scoped="" ref="0x40ccfa30"/>
        <function-ref name="granted" scoped="" ref="0x40ccfb10"/>
        <function-ref name="isOwner" scoped="" ref="0x40ccfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40cd3bc0" loc="30:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40cd3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cd3d98"/>
        <function-ref name="isInput" scoped="" ref="0x40cd3e78"/>
        <function-ref name="toggle" scoped="" ref="0x40ccf010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ccf0f0"/>
        <function-ref name="get" scoped="" ref="0x40ccf1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ccf2b0"/>
        <function-ref name="set" scoped="" ref="0x40ccf390"/>
        <function-ref name="clr" scoped="" ref="0x40ccf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40ccd8d0" loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40ccd8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40ccdaa8"/>
        <function-ref name="disable" scoped="" ref="0x40ccdb88"/>
        <function-ref name="captured" scoped="" ref="0x40ccdc68"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ccdd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ccfda0" loc="32:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ccfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40cce010"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40cce0f0"/>
        <function-ref name="splitRead" scoped="" ref="0x40cce1d0"/>
        <function-ref name="write" scoped="" ref="0x40cce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40ccbc30" loc="39:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ccbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TRadio" ref="0x4041ede0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cc9298"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40cf03b8" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40cf03b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cf0590"/>
        <function-ref name="isInput" scoped="" ref="0x40cf0670"/>
        <function-ref name="toggle" scoped="" ref="0x40cf0750"/>
        <function-ref name="isOutput" scoped="" ref="0x40cf0830"/>
        <function-ref name="get" scoped="" ref="0x40cf0910"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cf09f0"/>
        <function-ref name="set" scoped="" ref="0x40cf0ad0"/>
        <function-ref name="clr" scoped="" ref="0x40cf0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40cf2610" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40cf2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40cf00a8"/>
        <function-ref name="test" scoped="" ref="0x40cf1b98"/>
        <function-ref name="get" scoped="" ref="0x40cf2c58"/>
        <function-ref name="captured" scoped="" ref="0x40cf1190"/>
        <function-ref name="reset" scoped="" ref="0x40cf1430"/>
        <function-ref name="isOn" scoped="" ref="0x40cf1e10"/>
        <function-ref name="set" scoped="" ref="0x40cf2ed0"/>
        <function-ref name="start" scoped="" ref="0x40cf16a8"/>
        <function-ref name="stop" scoped="" ref="0x40cf1920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40cf0db8" loc="36:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40cf0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cef010"/>
        <function-ref name="isInput" scoped="" ref="0x40cef0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cef1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cef2b0"/>
        <function-ref name="get" scoped="" ref="0x40cef390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cef470"/>
        <function-ref name="set" scoped="" ref="0x40cef550"/>
        <function-ref name="clr" scoped="" ref="0x40cef630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40cf20b0" loc="29:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40cf20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cf2288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40cc9a10" loc="28:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40cc9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40cc9be8"/>
        <function-ref name="disable" scoped="" ref="0x40cc9cc8"/>
        <function-ref name="captured" scoped="" ref="0x40cc9da8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40cc9e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40d0a500" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40d0a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d0a6d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d0a7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40ce6aa0" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40ce6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40ce6c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cf4d90" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cf4d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ce6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ce6e48" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ce6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ce5050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ce5130"/>
        <function-ref name="splitRead" scoped="" ref="0x40ce5210"/>
        <function-ref name="write" scoped="" ref="0x40ce52f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d0ac50" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d0ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d0ae28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d0af08"/>
        <function-ref name="request" scoped="" ref="0x40ce4010"/>
        <function-ref name="granted" scoped="" ref="0x40ce40f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ce41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40d0f1e0" loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40d0f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d0f3b8"/>
        <function-ref name="runTask" scoped="" ref="0x40d0f498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40d09b38" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40d09b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d09d10"/>
        <function-ref name="sendDone" scoped="" ref="0x40d09df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40d06100" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40d06100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d062d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d063b8"/>
        <function-ref name="request" scoped="" ref="0x40d06498"/>
        <function-ref name="granted" scoped="" ref="0x40d06578"/>
        <function-ref name="isOwner" scoped="" ref="0x40d06658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40d09198" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40d09198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40d09370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ce4d80" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ce4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d09010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40cf73d0" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40cf73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40cf75a8"/>
        <function-ref name="sleep" scoped="" ref="0x40d07a30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40cf7768"/>
        <function-ref name="dataReady" scoped="" ref="0x40d07b10"/>
        <function-ref name="initMaster" scoped="" ref="0x40cf7928"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40cf7a08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40cf7ae8"/>
        <function-ref name="read" scoped="" ref="0x40cf7bc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40cf7ca8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40cf7d88"/>
        <function-ref name="setClock" scoped="" ref="0x40cf7e68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d07010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40d070f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40d07250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40d07330"/>
        <function-ref name="write" scoped="" ref="0x40d07410"/>
        <function-ref name="enableSpi" scoped="" ref="0x40d074f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40d075d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40d076b0"/>
        <function-ref name="getClock" scoped="" ref="0x40d07790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40d07870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40cf7688"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40cf7848"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40d07950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40d09520" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40d09520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40d096f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40d097d8"/>
        <function-ref name="splitRead" scoped="" ref="0x40d098b8"/>
        <function-ref name="write" scoped="" ref="0x40d09998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d082a8" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d082a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d08480"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d08560"/>
        <function-ref name="request" scoped="" ref="0x40d08640"/>
        <function-ref name="granted" scoped="" ref="0x40d08720"/>
        <function-ref name="isOwner" scoped="" ref="0x40d08800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40d06808" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d06808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d069e0"/>
        <function-ref name="userId" scoped="" ref="0x40d06ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40d06c88" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40d06c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40d06e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40cdfe40" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40cdfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40d24050"/>
        <function-ref name="sleep" scoped="" ref="0x40d23470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40d24210"/>
        <function-ref name="dataReady" scoped="" ref="0x40d23550"/>
        <function-ref name="initMaster" scoped="" ref="0x40d243d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40d244b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40d24590"/>
        <function-ref name="read" scoped="" ref="0x40d24670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40d24750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40d24830"/>
        <function-ref name="setClock" scoped="" ref="0x40d24910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d249f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40d24ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40d24c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40d24d10"/>
        <function-ref name="write" scoped="" ref="0x40d24df0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40d24ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40d23010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40d230f0"/>
        <function-ref name="getClock" scoped="" ref="0x40d231d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40d232b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40d24130"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40d242f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40d23390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40d4be88" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40d4be88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d48070"/>
        <function-ref name="isInput" scoped="" ref="0x40d48150"/>
        <function-ref name="toggle" scoped="" ref="0x40d48230"/>
        <function-ref name="isOutput" scoped="" ref="0x40d48310"/>
        <function-ref name="get" scoped="" ref="0x40d483f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d484d0"/>
        <function-ref name="set" scoped="" ref="0x40d485b0"/>
        <function-ref name="clr" scoped="" ref="0x40d48690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40d4c9e8" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40d4c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d4cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d4cca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d4cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d4ce60"/>
        <function-ref name="get" scoped="" ref="0x40d4b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d4b0f0"/>
        <function-ref name="set" scoped="" ref="0x40d4b1d0"/>
        <function-ref name="clr" scoped="" ref="0x40d4b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40d4c010" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40d4c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d4c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d4c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d4c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d4c488"/>
        <function-ref name="get" scoped="" ref="0x40d4c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d4c648"/>
        <function-ref name="set" scoped="" ref="0x40d4c728"/>
        <function-ref name="clr" scoped="" ref="0x40d4c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40d4aac0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40d4aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d4ac98"/>
        <function-ref name="stop" scoped="" ref="0x40d4ad78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40d48898" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40d48898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40d48a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40d4e1c8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40d4e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40d4e3a0"/>
        <function-ref name="sleep" scoped="" ref="0x40d4d7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40d4e560"/>
        <function-ref name="dataReady" scoped="" ref="0x40d4d8d0"/>
        <function-ref name="initMaster" scoped="" ref="0x40d4e720"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40d4e800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40d4e8e0"/>
        <function-ref name="read" scoped="" ref="0x40d4e9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40d4eaa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40d4eb80"/>
        <function-ref name="setClock" scoped="" ref="0x40d4ec60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d4ed40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40d4ee20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40d4d010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40d4d0f0"/>
        <function-ref name="write" scoped="" ref="0x40d4d1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40d4d2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40d4d390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40d4d470"/>
        <function-ref name="getClock" scoped="" ref="0x40d4d550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40d4d630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40d4e480"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40d4e640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40d4d710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40d4b4a0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40d4b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d4b678"/>
        <function-ref name="isInput" scoped="" ref="0x40d4b758"/>
        <function-ref name="toggle" scoped="" ref="0x40d4b838"/>
        <function-ref name="isOutput" scoped="" ref="0x40d4b918"/>
        <function-ref name="get" scoped="" ref="0x40d4b9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d4bad8"/>
        <function-ref name="set" scoped="" ref="0x40d4bbb8"/>
        <function-ref name="clr" scoped="" ref="0x40d4bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40d7d2c8" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40d7d2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40d7d4b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d7d590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40d7db80" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d7db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d7dd68"/>
        <function-ref name="configure" scoped="" ref="0x40d7de48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d50b30" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d50b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d50d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d50df8"/>
        <function-ref name="request" scoped="" ref="0x40d50ed8"/>
        <function-ref name="granted" scoped="" ref="0x40d7d010"/>
        <function-ref name="isOwner" scoped="" ref="0x40d7d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40d7d6d0" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d7d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d7d8a8"/>
        <function-ref name="userId" scoped="" ref="0x40d7d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41136b58" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41136b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41136d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41136e90" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41136e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41134080"/>
        <function-ref name="isEmpty" scoped="" ref="0x41134160"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41134240"/>
        <function-ref name="dequeue" scoped="" ref="0x41134320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41132618" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41132618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41132800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411328e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41132ee0" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41132ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411310e0"/>
        <function-ref name="configure" scoped="" ref="0x411311c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41131320" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41131320"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411314f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x411315d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411316b8"/>
        <function-ref name="dequeue" scoped="" ref="0x41131798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41134e88" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41134e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411320c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411321a0"/>
        <function-ref name="request" scoped="" ref="0x41132280"/>
        <function-ref name="granted" scoped="" ref="0x41132360"/>
        <function-ref name="isOwner" scoped="" ref="0x41132440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41132a20" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41132a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41132bf8"/>
        <function-ref name="userId" scoped="" ref="0x41132cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41131918" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41131918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41131af0"/>
        <function-ref name="runTask" scoped="" ref="0x41131bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40d74520" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40d74520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40d746f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40d747d8"/>
        <function-ref name="getControlA" scoped="" ref="0x40d748b8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40d74998"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40d74a78"/>
        <function-ref name="setControlB" scoped="" ref="0x40d74b58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40d74c38"/>
        <function-ref name="getControlB" scoped="" ref="0x40d74d18"/>
        <function-ref name="setControlC" scoped="" ref="0x40d74df8"/>
        <function-ref name="setControlA" scoped="" ref="0x40d74ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40d73258" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40d73258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40d71cc0"/>
        <function-ref name="test" scoped="" ref="0x40d717d0"/>
        <function-ref name="get" scoped="" ref="0x40d738a0"/>
        <function-ref name="captured" scoped="" ref="0x40d73db8"/>
        <function-ref name="reset" scoped="" ref="0x40d71068"/>
        <function-ref name="isOn" scoped="" ref="0x40d71a48"/>
        <function-ref name="set" scoped="" ref="0x40d73b18"/>
        <function-ref name="start" scoped="" ref="0x40d712e0"/>
        <function-ref name="stop" scoped="" ref="0x40d71558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40d703f8" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40d703f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d6f9f0"/>
        <function-ref name="fired" scoped="" ref="0x40d6f010"/>
        <function-ref name="get" scoped="" ref="0x40d70a40"/>
        <function-ref name="reset" scoped="" ref="0x40d6f288"/>
        <function-ref name="isOn" scoped="" ref="0x40d6fc68"/>
        <function-ref name="set" scoped="" ref="0x40d70cb8"/>
        <function-ref name="start" scoped="" ref="0x40d6f500"/>
        <function-ref name="stop" scoped="" ref="0x40d6f778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d761a0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d761a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d75c68"/>
        <function-ref name="test" scoped="" ref="0x40d75778"/>
        <function-ref name="get" scoped="" ref="0x40d767e8"/>
        <function-ref name="setScale" scoped="" ref="0x40d75ee0"/>
        <function-ref name="getScale" scoped="" ref="0x40d741c0"/>
        <function-ref name="reset" scoped="" ref="0x40d75010"/>
        <function-ref name="overflow" scoped="" ref="0x40d76d00"/>
        <function-ref name="isOn" scoped="" ref="0x40d759f0"/>
        <function-ref name="set" scoped="" ref="0x40d76a60"/>
        <function-ref name="start" scoped="" ref="0x40d75288"/>
        <function-ref name="stop" scoped="" ref="0x40d75500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40d69c90" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40d69c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40d69e68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40d68010"/>
        <function-ref name="getControlA" scoped="" ref="0x40d680f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40d681d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40d682b0"/>
        <function-ref name="setControlB" scoped="" ref="0x40d68390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40d68470"/>
        <function-ref name="getControlB" scoped="" ref="0x40d68550"/>
        <function-ref name="setControlC" scoped="" ref="0x40d68630"/>
        <function-ref name="setControlA" scoped="" ref="0x40d68710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40d94940" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40d94940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d93f08"/>
        <function-ref name="fired" scoped="" ref="0x40d93528"/>
        <function-ref name="get" scoped="" ref="0x40d93010"/>
        <function-ref name="reset" scoped="" ref="0x40d937a0"/>
        <function-ref name="isOn" scoped="" ref="0x40d921a0"/>
        <function-ref name="set" scoped="" ref="0x40d93288"/>
        <function-ref name="start" scoped="" ref="0x40d93a18"/>
        <function-ref name="stop" scoped="" ref="0x40d93c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40d68a48" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40d68a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40d94500"/>
        <function-ref name="test" scoped="" ref="0x40d94010"/>
        <function-ref name="get" scoped="" ref="0x40d670a8"/>
        <function-ref name="captured" scoped="" ref="0x40d675c0"/>
        <function-ref name="reset" scoped="" ref="0x40d67860"/>
        <function-ref name="isOn" scoped="" ref="0x40d94288"/>
        <function-ref name="set" scoped="" ref="0x40d67320"/>
        <function-ref name="start" scoped="" ref="0x40d67ad8"/>
        <function-ref name="stop" scoped="" ref="0x40d67d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40d925b8" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40d925b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d90b10"/>
        <function-ref name="fired" scoped="" ref="0x40d90130"/>
        <function-ref name="get" scoped="" ref="0x40d92c00"/>
        <function-ref name="reset" scoped="" ref="0x40d903a8"/>
        <function-ref name="isOn" scoped="" ref="0x40d90d88"/>
        <function-ref name="set" scoped="" ref="0x40d92e78"/>
        <function-ref name="start" scoped="" ref="0x40d90620"/>
        <function-ref name="stop" scoped="" ref="0x40d90898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40d8f1c0" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40d8f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d8e778"/>
        <function-ref name="fired" scoped="" ref="0x40d8fd20"/>
        <function-ref name="get" scoped="" ref="0x40d8f808"/>
        <function-ref name="reset" scoped="" ref="0x40d8e010"/>
        <function-ref name="isOn" scoped="" ref="0x40d8e9f0"/>
        <function-ref name="set" scoped="" ref="0x40d8fa80"/>
        <function-ref name="start" scoped="" ref="0x40d8e288"/>
        <function-ref name="stop" scoped="" ref="0x40d8e500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d6d958" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d6d958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d69418"/>
        <function-ref name="test" scoped="" ref="0x40d6af08"/>
        <function-ref name="get" scoped="" ref="0x40d6a010"/>
        <function-ref name="setScale" scoped="" ref="0x40d69690"/>
        <function-ref name="getScale" scoped="" ref="0x40d69930"/>
        <function-ref name="reset" scoped="" ref="0x40d6a7a0"/>
        <function-ref name="overflow" scoped="" ref="0x40d6a528"/>
        <function-ref name="isOn" scoped="" ref="0x40d691a0"/>
        <function-ref name="set" scoped="" ref="0x40d6a288"/>
        <function-ref name="start" scoped="" ref="0x40d6aa18"/>
        <function-ref name="stop" scoped="" ref="0x40d6ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ddce38" loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ddce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TOne" ref="0x403ce2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40de4350"/>
        <function-ref name="fired" scoped="" ref="0x40ddbab8"/>
        <function-ref name="startAt" scoped="" ref="0x40de4010"/>
        <function-ref name="isRunning" scoped="" ref="0x40ddbd30"/>
        <function-ref name="getAlarm" scoped="" ref="0x40de45c8"/>
        <function-ref name="start" scoped="" ref="0x40ddb5a0"/>
        <function-ref name="stop" scoped="" ref="0x40ddb840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dd5a00" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dd5a00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034b5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034b5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dd5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40dd5de8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dd5de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40dd3878"/>
        <function-ref name="test" scoped="" ref="0x40dd3388"/>
        <function-ref name="get" scoped="" ref="0x40dd4468"/>
        <function-ref name="setScale" scoped="" ref="0x40dd3af0"/>
        <function-ref name="getScale" scoped="" ref="0x40dd3d90"/>
        <function-ref name="reset" scoped="" ref="0x40dd4bf8"/>
        <function-ref name="overflow" scoped="" ref="0x40dd4980"/>
        <function-ref name="isOn" scoped="" ref="0x40dd3600"/>
        <function-ref name="set" scoped="" ref="0x40dd46e0"/>
        <function-ref name="start" scoped="" ref="0x40dd4e70"/>
        <function-ref name="stop" scoped="" ref="0x40dd3110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41158138" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41158138"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4034b3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4034b3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TOne" ref="0x403ce2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41157600"/>
        <function-ref name="fired" scoped="" ref="0x41158da0"/>
        <function-ref name="startAt" scoped="" ref="0x411572c0"/>
        <function-ref name="isRunning" scoped="" ref="0x41157048"/>
        <function-ref name="getAlarm" scoped="" ref="0x41157878"/>
        <function-ref name="start" scoped="" ref="0x41158888"/>
        <function-ref name="stop" scoped="" ref="0x41158b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x41154dd8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x41154dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41152388"/>
        <function-ref name="fired" scoped="" ref="0x41153980"/>
        <function-ref name="get" scoped="" ref="0x41153468"/>
        <function-ref name="reset" scoped="" ref="0x41153bf8"/>
        <function-ref name="isOn" scoped="" ref="0x41152600"/>
        <function-ref name="set" scoped="" ref="0x411536e0"/>
        <function-ref name="start" scoped="" ref="0x41153e70"/>
        <function-ref name="stop" scoped="" ref="0x41152110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41157b38" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41157b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41154600"/>
        <function-ref name="test" scoped="" ref="0x41154110"/>
        <function-ref name="get" scoped="" ref="0x41156200"/>
        <function-ref name="setScale" scoped="" ref="0x41154878"/>
        <function-ref name="getScale" scoped="" ref="0x41154b18"/>
        <function-ref name="reset" scoped="" ref="0x41156990"/>
        <function-ref name="overflow" scoped="" ref="0x41156718"/>
        <function-ref name="isOn" scoped="" ref="0x41154388"/>
        <function-ref name="set" scoped="" ref="0x41156478"/>
        <function-ref name="start" scoped="" ref="0x41156c08"/>
        <function-ref name="stop" scoped="" ref="0x41156e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40de3770" loc="28:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40de3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40de3db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ddf860" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ddf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TOne" ref="0x403ce2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e0c010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e0c500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e0c288"/>
        <function-ref name="overflow" scoped="" ref="0x40e0c778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e0ba68" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e0ba68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TOne" ref="0x403ce2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e0a200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e0a6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e0a478"/>
        <function-ref name="overflow" scoped="" ref="0x40e0a968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e0ac48" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e0ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e076a0"/>
        <function-ref name="test" scoped="" ref="0x40e071b0"/>
        <function-ref name="get" scoped="" ref="0x40e082a8"/>
        <function-ref name="setScale" scoped="" ref="0x40e07918"/>
        <function-ref name="getScale" scoped="" ref="0x40e07bb8"/>
        <function-ref name="reset" scoped="" ref="0x40e08a38"/>
        <function-ref name="overflow" scoped="" ref="0x40e087c0"/>
        <function-ref name="isOn" scoped="" ref="0x40e07428"/>
        <function-ref name="set" scoped="" ref="0x40e08520"/>
        <function-ref name="start" scoped="" ref="0x40e08cb0"/>
        <function-ref name="stop" scoped="" ref="0x40e08f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40e04ae8" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40e04ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e03308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e037f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e03580"/>
        <function-ref name="overflow" scoped="" ref="0x40e03a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e0d7f0" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e0d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e04010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e04500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e04288"/>
        <function-ref name="overflow" scoped="" ref="0x40e04778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40e02988" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e02988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e00010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e00360" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e00360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e00ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40dff010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e00d28"/>
        <function-ref name="overflow" scoped="" ref="0x40dff288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40de1c18" loc="31:/opt/tinyos-2.1.1/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40de1c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a8e10"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40dfb380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40dfca40" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TransmitPowerFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40dfca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dfcc18"/>
        <function-ref name="get" scoped="" ref="0x40dfccf8"/>
        <function-ref name="setValue" scoped="" ref="0x40dfcdd8"/>
        <function-ref name="set" scoped="" ref="0x40dfceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40df7030" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.RSSIFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40df7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40df7208"/>
        <function-ref name="get" scoped="" ref="0x40df72e8"/>
        <function-ref name="setValue" scoped="" ref="0x40df73c8"/>
        <function-ref name="set" scoped="" ref="0x40df74a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40df6628" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TimeSyncFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40df6628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40df6800"/>
        <function-ref name="get" scoped="" ref="0x40df68e0"/>
        <function-ref name="setValue" scoped="" ref="0x40df69c0"/>
        <function-ref name="set" scoped="" ref="0x40df6aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40e338f8" loc="5:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40e338f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40e33ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x40e2e160" loc="11:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x40e2e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e2e338"/>
        <function-ref name="source" scoped="" ref="0x40e2e418"/>
        <function-ref name="address" scoped="" ref="0x40e2e4f8"/>
        <function-ref name="destination" scoped="" ref="0x40e2e5d8"/>
        <function-ref name="setSource" scoped="" ref="0x40e2e6b8"/>
        <function-ref name="setDestination" scoped="" ref="0x40e2e798"/>
        <function-ref name="type" scoped="" ref="0x40e2e878"/>
        <function-ref name="setType" scoped="" ref="0x40e2e958"/>
        <function-ref name="isForMe" scoped="" ref="0x40e2ea38"/>
        <function-ref name="setGroup" scoped="" ref="0x40e2eb18"/>
        <function-ref name="localGroup" scoped="" ref="0x40e2ebf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMControl" ref="0x40e2dd70" loc="15:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMControl" scoped="" ref="0x40e2dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e2c010"/>
        <function-ref name="stopDone" scoped="" ref="0x40e2c0f0"/>
        <function-ref name="start" scoped="" ref="0x40e2c1d0"/>
        <function-ref name="stop" scoped="" ref="0x40e2c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMControl" ref="0x40e2d668" loc="14:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMControl" scoped="" ref="0x40e2d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e2d840"/>
        <function-ref name="stopDone" scoped="" ref="0x40e2d920"/>
        <function-ref name="start" scoped="" ref="0x40e2da00"/>
        <function-ref name="stop" scoped="" ref="0x40e2dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacket" ref="0x40e2f950" loc="8:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacket" scoped="" ref="0x40e2f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e2fb28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e2fc08"/>
        <function-ref name="getPayload" scoped="" ref="0x40e2fce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e2fdc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e2fea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMSend" ref="0x40e2ee28" loc="13:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMSend" scoped="" ref="0x40e2ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e2d050"/>
        <function-ref name="getPayload" scoped="" ref="0x40e2d130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e2d210"/>
        <function-ref name="cancel" scoped="" ref="0x40e2d2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e2d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x40e2c500" loc="16:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x40e2c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e2c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e33c60" loc="6:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e33c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e33e38"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e33f18"/>
        <function-ref name="led1On" scoped="" ref="0x40e2f010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e2f0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e2f1d0"/>
        <function-ref name="get" scoped="" ref="0x40e2f2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40e2f390"/>
        <function-ref name="led2Off" scoped="" ref="0x40e2f710"/>
        <function-ref name="set" scoped="" ref="0x40e2f470"/>
        <function-ref name="led0On" scoped="" ref="0x40e2f550"/>
        <function-ref name="led2On" scoped="" ref="0x40e2f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40e31660" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e31660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e31838"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e31918"/>
        <function-ref name="led1On" scoped="" ref="0x40e319f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e31ad8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e31bb8"/>
        <function-ref name="get" scoped="" ref="0x40e31c98"/>
        <function-ref name="led1Off" scoped="" ref="0x40e31d78"/>
        <function-ref name="led2Off" scoped="" ref="0x40e501d0"/>
        <function-ref name="set" scoped="" ref="0x40e31e58"/>
        <function-ref name="led0On" scoped="" ref="0x40e50010"/>
        <function-ref name="led2On" scoped="" ref="0x40e500f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40e4c320" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40e4c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e4c4f8"/>
        <function-ref name="isInput" scoped="" ref="0x40e4c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x40e4c6b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e4c798"/>
        <function-ref name="get" scoped="" ref="0x40e4c878"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e4c958"/>
        <function-ref name="set" scoped="" ref="0x40e4ca38"/>
        <function-ref name="clr" scoped="" ref="0x40e4cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e4d278" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e4d278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e4d450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40e4cd08" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40e4cd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e4cee0"/>
        <function-ref name="isInput" scoped="" ref="0x40e4b010"/>
        <function-ref name="toggle" scoped="" ref="0x40e4b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e4b1d0"/>
        <function-ref name="get" scoped="" ref="0x40e4b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e4b390"/>
        <function-ref name="set" scoped="" ref="0x40e4b470"/>
        <function-ref name="clr" scoped="" ref="0x40e4b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40e4d5c0" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e4d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e4d798"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e4d878"/>
        <function-ref name="led1On" scoped="" ref="0x40e4d958"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e4da38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e4db18"/>
        <function-ref name="get" scoped="" ref="0x40e4dbf8"/>
        <function-ref name="led1Off" scoped="" ref="0x40e4dcd8"/>
        <function-ref name="led2Off" scoped="" ref="0x40e4c0f0"/>
        <function-ref name="set" scoped="" ref="0x40e4ddb8"/>
        <function-ref name="led0On" scoped="" ref="0x40e4de98"/>
        <function-ref name="led2On" scoped="" ref="0x40e4c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40e4b740" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40e4b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e4b918"/>
        <function-ref name="isInput" scoped="" ref="0x40e4b9f8"/>
        <function-ref name="toggle" scoped="" ref="0x40e4bad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e4bbb8"/>
        <function-ref name="get" scoped="" ref="0x40e4bc98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e4bd78"/>
        <function-ref name="set" scoped="" ref="0x40e4be58"/>
        <function-ref name="clr" scoped="" ref="0x40e4a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40e6da20" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40e6da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e6dbf8"/>
        <function-ref name="isInput" scoped="" ref="0x40e6dcd8"/>
        <function-ref name="toggle" scoped="" ref="0x40e6ddb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e6de98"/>
        <function-ref name="get" scoped="" ref="0x40e6c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e6c0f0"/>
        <function-ref name="set" scoped="" ref="0x40e6c1d0"/>
        <function-ref name="clr" scoped="" ref="0x40e6c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40e6c4c0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40e6c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e6c698"/>
        <function-ref name="isInput" scoped="" ref="0x40e6c778"/>
        <function-ref name="toggle" scoped="" ref="0x40e6c858"/>
        <function-ref name="isOutput" scoped="" ref="0x40e6c938"/>
        <function-ref name="get" scoped="" ref="0x40e6ca18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e6caf8"/>
        <function-ref name="set" scoped="" ref="0x40e6cbd8"/>
        <function-ref name="clr" scoped="" ref="0x40e6ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40e6b870" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e6b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e6ba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40e6cec8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40e6cec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e6b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x40e6b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x40e6b280"/>
        <function-ref name="isOutput" scoped="" ref="0x40e6b360"/>
        <function-ref name="get" scoped="" ref="0x40e6b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e6b520"/>
        <function-ref name="set" scoped="" ref="0x40e6b600"/>
        <function-ref name="clr" scoped="" ref="0x40e6b6e0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x403fc988" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fc830" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4043d370" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4043d218" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40444370" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40444010" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404441f0" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4043c9a8" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4043c010" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4043dc90" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4043de70" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x40436010" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
              <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40437a18" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40437bf8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40437dd8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4044e540" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4044e3e8" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40442e38" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40442ce0" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x403fbd70" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40442438" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404422e0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x404487e8" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40448480" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40448688" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40441ae0" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40441778" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40441980" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40449ee0" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40449d88" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40447a40" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40447710" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404478e0" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403f8cb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x404493a8" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40449250" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x404451e8" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4044ee60" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40445088" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40445a60" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40453010" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4044ce88" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40453d58" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40453c00" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4044c7a0" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40453520" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40450178" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4044bbd0" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4044bde8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40450010" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40457dd0" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40457a70" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40457c50" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40457510" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40450e18" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40450cc0" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4044fbf8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4044f8a0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4044fa98" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40462920" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40462d68" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40461210" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40461a80" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40460788" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40460c30" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40461638" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4045e3a0" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4045e248" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x404624f8" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40461f00" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40460340" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4045d5a8" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4045d450" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4045c168" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4045c010" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4045cbf0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4045ca98" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40464e90" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40464b50" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40464d30" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4046aa18" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4046a6b8" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4046a898" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4046a158" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4046bb38" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4046b9e0" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40469820" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404694c8" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404696c0" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4049fef0" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x404a1518" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a1188" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x404a13b8" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x404a2270" loc="15:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x404a2b40" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a27c8" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x404a29e0" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4034fb68" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40354090" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x404be1a8" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404be670" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x404c9838" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x404c9400" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x404c2010" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x404c2c70" loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x404c1cf0" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404c1b98" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x404c11a8" loc="68:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x404c2740" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404c25e8" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x404c0210" loc="89:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x404c1708" loc="74:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x404bcd98" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x404bb488" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x404bc788" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x404bc630" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x404bbbc0" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404bba68" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x404b2d30" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x404b96c8" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404b9570" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x404b9d60" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x404b9c08" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40564ae8" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40564798" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40564988" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x4056de88" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4056dd30" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4056c6a8" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4056c358" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4056c548" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x4056d2f0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x4056b560" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4056b010" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4056b200" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4056b3f8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x4056d878" loc="72:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4056e968" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4056e418" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4056e608" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4056e800" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40586518" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x405863c0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40586db0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40586a48" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40586c50" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40582688" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40582688"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405827f0" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405827f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40582cd8" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405827f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4058f710" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4058f210" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4058fb10" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40596210" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x405889b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x405957e0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40595688" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40596ec8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40588138" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40588578" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40588df0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40596610" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40596b18" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405969c0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x405952b0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x405d5168" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x405d5010" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x405ca7d0" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x405cae08" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x405cacb0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x405d64e8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x405d6390" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x405d6a40" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403e2680" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4061bc38" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4061a038" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4061b4a8" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4061a808" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4061b868" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4061a410" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4060dd38" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4061b0f8" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403e7b28" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4038dd78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d8138" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x406f8558" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4034e390" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4034ec98" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4034e7d0" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x4071f7b0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4071ecb8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x4070cf20" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x4071c728" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4071c2b8" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x4071c160" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x4071e2d0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4071e178" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4071ccf0" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4071cb98" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x4071f388" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x4071e848" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4071e6f0" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x4071fd28" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4071fbd0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x4070be68" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4070be68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x407179f8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x407178a0" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40717010" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4071a370" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4070be68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x4071aec0" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4070be68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4071ad68" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4070be68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40719348" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40717470" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4071a8e8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4070be68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4071a790" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4070be68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40719750" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40719b48" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x4071be68" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4071be68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40728d80" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4072ad38" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4072a370" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4071be68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40728158" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40727210" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4072a8f8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4071be68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4072a7a0" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4071be68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40728560" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40728958" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40711010" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40711010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x4070e7c8" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4070ff20" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40711500" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40711010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x4070ed58" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4070ec00" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x4070d210" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4070f2f8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40711ea8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4070e3a0" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40711a78" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40711010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40711920" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40711010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4070f700" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4070faf8" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x408074d0" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408074d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40807638" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40807638"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x407fca78" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40807638"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407fc920" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40814528" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408143d0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40807cc0" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40807b68" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40815010" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40807638"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40814c78" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40814e88" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40807638"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x407f04b0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x407f0138" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x407f0350" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40804170" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40805da0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40804010" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40804c30" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40804ad8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x408058c8" loc="57:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40805248" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x408050f0" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40800c30" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40800ad8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40803060" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40802cb0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40802ee8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x408002e0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40800188" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40803c38" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408038a0" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40803ad8" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x407fe580" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407fe428" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x40809460" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40809460"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x4081e788" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4081e630" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4081e168" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40809460"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4081e010" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40809ad8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40809980" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4081d010" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40809460"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4081ebb8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4081edd0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40809460"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408173c8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408173c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x408178a8" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x408214f0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40821010" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4080ae50" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x408219f0" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x408386e8" loc="110:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40827db8" loc="87:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x408277b8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40838278" loc="92:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40838de0" loc="118:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="24:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40835c98" loc="30:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40828c90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40835b40" loc="30:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x408350c8" loc="26:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40828c90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408356c8" loc="28:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40828c90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40835570" loc="28:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40834c28" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40828c90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40834888" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40834ac8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40828c90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40834488" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40828c90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408340e8" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40834328" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40828c90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40832770" loc="38:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40828970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40832618" loc="38:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40832ee0" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40828970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40832b50" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40832d80" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40828970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408321c0" loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40832068" loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40831340" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40828970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0x40824ac8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40828c90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40824568" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40828c90"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40824780" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40824960" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4083cdb0" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4083ca50" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4083cc30" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4083c4f0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40823480" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40823328" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40823e60" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40823b08" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40823d00" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40863be8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x40860af8" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x40861a30" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x4084c830" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x4084cef8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4084cda0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x4085f090" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x40860070" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x408615a8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40861450" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x408605b8" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x40870df0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40870c98" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x4086fb60" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086fa08" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40870090" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40858f20" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408582e0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40858188" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40870828" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408704c0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408706c8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40858aa8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40858740" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40858948" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4086f588" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086f228" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4086f428" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x4084a650" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x4084ac58" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40859220" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408590c8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x4085a350" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085a1f8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x4085aa48" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085a8f0" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40876870" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40876010" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x4086de98" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40876458" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x4086d978" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40876d18" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x40873e40" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40873ce8" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40874440" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after th header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408742e8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408731a8" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40874c98" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40874938" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40874b38" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40879d30" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40879bd8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40873828" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408736d0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4083dc98" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4083d798" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4083d640" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40854398" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40854240" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x408548e0" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40852020" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40854eb8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40855b88" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40855a30" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x4084d4c8" loc="75:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x4084d010" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4084fc08" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4084fe20" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40851ed8" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40851d80" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x408505f8" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408504a0" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x4084f010" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40850bb8" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40850dd0" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40851010" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40851880" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40851558" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40851720" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4084f728" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4084f5d0" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40864440" loc="120:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="116:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408642e8" loc="120:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4087a720" loc="157:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087a5c8" loc="157:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4086c3b8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086c068" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4086c258" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4086a800" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086a6a8" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40865620" loc="109:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="106:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408654c8" loc="109:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4086a168" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086a010" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40865e18" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40865ad8" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40865cb8" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x40869798" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40869420" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40869638" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x4087b940" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="142:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087b5e0" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4087b7e0" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x4087b168" loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="137:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087b010" loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x4086ca20" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086c8c8" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x40868170" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40869d28" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40868010" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x40868820" loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408686c8" loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x4087a010" loc="151:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="147:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087be10" loc="151:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x4086aeb0" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086ad58" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40865010" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40866bf8" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x40866de8" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x4087ca80" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="132:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087c720" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4087c920" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40864c28" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408648d8" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40864ac8" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40866060" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40868d00" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40868ec8" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4085bb80" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085ba28" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x4087c2a0" loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087c148" loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x40866710" loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408665b8" loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x4084b6e0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4084b380" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x4084b580" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x4084bb78" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40856848" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408566f0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40856e90" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40856d38" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x4085eb48" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085e9f0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x4085e468" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085e310" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x4085d070" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x4085d728" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085d5d0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408a99b8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408a99b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x408a9b20" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a9b20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x408c0dd0" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a9b20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408c1aa8" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x408c0788" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a9b20"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a9b20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x408c0438" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a9b20"/></type-var>
          </variable>
          <variable name="dt" ref="0x408c0628" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a9b20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x408c1f18" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x408bf288" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a9b20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x408c1168" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a9b20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x408c1010" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a9b20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408c1648" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x408d1880" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x408d1e50" loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x408d04f8" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x408d1480" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x408d6168" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d6010" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408d41e0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d4088" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408d6ad8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d6780" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408d6978" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x408d31a8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
              <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d3030" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x408e5bd0" loc="50:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x408e4470" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x408e4070" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x408e56e0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x408e5378" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8f10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x408e5580" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4092b9a8" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40946010" loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40943b90" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x409436d0" loc="49:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40944268" loc="80:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40944768" loc="88:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4093d4d0" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40929e98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4093d378" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40929e98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x4093e158" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x4093e818" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40929e98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4093e6c0" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40929e98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4093edc8" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40929e98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40a01c08" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
              <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a01a90" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40a01418" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a012c0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x409f6900" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409f67a8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x409f6d80" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409fce10" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409fccb8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409f6398" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409f6240" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x409fa800" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409fa6a8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x409f8518" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409f83c0" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x409faee8" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409fad90" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x409f8be8" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409f8a90" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x409fa168" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409fa010" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403fe190"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a42bb0" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a42bb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40a3b520" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40a3d158" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40a3c358" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40a3c010" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40a3c1f8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40a3daa8" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40a3be98" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40a3b968" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40a3d5e8" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40a3f218" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a3f0c0" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40a3cd40" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40a3c9f8" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40a3cbe0" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40a3f8b0" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a3f758" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a3fd80" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40a988a8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40a99e00" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40a7a9e8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40a98438" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40a982e0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40a99990" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40a99838" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40a98e70" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40a98d18" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40a7ae38" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40a99418" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40a992c0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x40a92b28" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x40a93848" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x40a93c70" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x40a92168" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40a91010" loc="87:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x40a92648" loc="75:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40a96d60" loc="46:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b8d68"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b7010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40a93368" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b8d68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b7010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40a93210" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b8d68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b7010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40b65578" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40b62010" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40b62658" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40b62500" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40b62ac8" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40b65ab8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40b61038" loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40b5f168" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b5f010" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40b5fdf8" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b5f8e0" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b5f788" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40ba3de8" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ba3c90" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40ba37b0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40bb1650" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40bb11a8" loc="35:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40bc54a0" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40bc54a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40bc5af0" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40bc54a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40bc5998" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40bc54a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40bd24c0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bd2368" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40bd4168" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bd4010" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40bd4938" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bd45f8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40bd47d8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40bd4ef8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bd4da0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40438780"/>
                <typename><typedef-ref name="message_t" ref="0x40437538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c4ada0" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c4ada0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40c4af08" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c4af08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40c49530" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c4af08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40c493d8" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c4af08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40c4b540" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40c4bef0" loc="55:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40c4baa8" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40c4b950" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40c4b038" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40c529a0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c52848" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40c4f608" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c4f4b0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40c52eb0" loc="52:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40c4fc50" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c4faf8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ce2368" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40ce5d30" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ce2010" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ce2200" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ce19a8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40ce1228" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ce1440" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ce1630" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003a1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ce1838" loc="72:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40ce6868" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40ce6710" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40d00460" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40cfbb20" loc="109:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40cfdca8" loc="100:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40cf9168" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40cf9010" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40d00010" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40cfcc20" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40cfcac8" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40cffec8" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40cffd70" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40d00cf0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40cf7218" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40cf70c0" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40cfd338" loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40cf9af0" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40cf9998" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40cf83a8" loc="120:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40cfb6d8" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40cfb580" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40cf8c70" loc="124:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40cfc258" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40cfc100" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40cff2b8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cff160" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40cfd888" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40cfd730" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40cfb0f8" loc="106:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40cf9590" loc="112:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40cf9f00" loc="115:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40cf8800" loc="122:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40cfc690" loc="103:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403476e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40d00888" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40cff880" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cff728" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40d4a2f0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40d4a7d8" loc="84:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40351628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
